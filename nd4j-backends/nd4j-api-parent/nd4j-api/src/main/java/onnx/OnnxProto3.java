// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onnx.proto3

package onnx;

public final class OnnxProto3 {
  private OnnxProto3() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * To be compatible with both proto2 and proto3, we will use a version number
   * that is not defined by the default value but an explicit enum number.
   * </pre>
   *
   * Protobuf enum {@code onnx.Version}
   */
  public enum Version
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * proto3 requires the first enum value to be zero.
     * We add this just to appease the compiler.
     * </pre>
     *
     * <code>_START_VERSION = 0;</code>
     */
    _START_VERSION(0),
    /**
     * <pre>
     * The version field is always serialized and we will use it to store the
     * version that the  graph is generated from. This helps us set up version
     * control. We should use version as
     *     xx(major) - xx(minor) - xxxx(bugfix)
     * and we are starting with 0x00000001 (0.0.1), which was the
     *  version we published on Oct 10, 2017.
     * </pre>
     *
     * <code>IR_VERSION_2017_10_10 = 1;</code>
     */
    IR_VERSION_2017_10_10(1),
    /**
     * <pre>
     * IR_VERSION 0.0.2 published on Oct 30, 2017
     * - Added type discriminator to AttributeProto to support proto3 users
     * </pre>
     *
     * <code>IR_VERSION_2017_10_30 = 2;</code>
     */
    IR_VERSION_2017_10_30(2),
    /**
     * <pre>
     * IR VERSION 0.0.3 published on Nov 3, 2017
     * - For operator versioning:
     *    - Added new message OperatorSetIdProto
     *    - Added opset_import in ModelProto
     * - For vendor extensions, added domain in NodeProto
     * </pre>
     *
     * <code>IR_VERSION = 3;</code>
     */
    IR_VERSION(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * proto3 requires the first enum value to be zero.
     * We add this just to appease the compiler.
     * </pre>
     *
     * <code>_START_VERSION = 0;</code>
     */
    public static final int _START_VERSION_VALUE = 0;
    /**
     * <pre>
     * The version field is always serialized and we will use it to store the
     * version that the  graph is generated from. This helps us set up version
     * control. We should use version as
     *     xx(major) - xx(minor) - xxxx(bugfix)
     * and we are starting with 0x00000001 (0.0.1), which was the
     *  version we published on Oct 10, 2017.
     * </pre>
     *
     * <code>IR_VERSION_2017_10_10 = 1;</code>
     */
    public static final int IR_VERSION_2017_10_10_VALUE = 1;
    /**
     * <pre>
     * IR_VERSION 0.0.2 published on Oct 30, 2017
     * - Added type discriminator to AttributeProto to support proto3 users
     * </pre>
     *
     * <code>IR_VERSION_2017_10_30 = 2;</code>
     */
    public static final int IR_VERSION_2017_10_30_VALUE = 2;
    /**
     * <pre>
     * IR VERSION 0.0.3 published on Nov 3, 2017
     * - For operator versioning:
     *    - Added new message OperatorSetIdProto
     *    - Added opset_import in ModelProto
     * - For vendor extensions, added domain in NodeProto
     * </pre>
     *
     * <code>IR_VERSION = 3;</code>
     */
    public static final int IR_VERSION_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Version valueOf(int value) {
      return forNumber(value);
    }

    public static Version forNumber(int value) {
      switch (value) {
        case 0: return _START_VERSION;
        case 1: return IR_VERSION_2017_10_10;
        case 2: return IR_VERSION_2017_10_30;
        case 3: return IR_VERSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Version>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Version> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Version>() {
            public Version findValueByNumber(int number) {
              return Version.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return onnx.OnnxProto3.getDescriptor().getEnumTypes().get(0);
    }

    private static final Version[] VALUES = values();

    public static Version valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Version(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:onnx.Version)
  }

  public interface AttributeProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.AttributeProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The opName field MUST be present for this version of the IR.
     * </pre>
     *
     * <code>string opName = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The opName field MUST be present for this version of the IR.
     * </pre>
     *
     * <code>string opName = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * A human-readable documentation for this attribute. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 13;</code>
     */
    java.lang.String getDocString();
    /**
     * <pre>
     * A human-readable documentation for this attribute. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 13;</code>
     */
    com.google.protobuf.ByteString
        getDocStringBytes();

    /**
     * <pre>
     * The type field MUST be present for this version of the IR.
     * For 0.0.1 versions of the IR, this field was not defined, and
     * implementations needed to use has_field hueristics to determine
     * which value field was in use.  For IR_VERSION 0.0.2 or later, this
     * field MUST be set and match the f|i|s|t|... field in use.  This
     * change was made to accomodate proto3 implementations.
     * </pre>
     *
     * <code>.onnx.AttributeProto.AttributeType type = 20;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * The type field MUST be present for this version of the IR.
     * For 0.0.1 versions of the IR, this field was not defined, and
     * implementations needed to use has_field hueristics to determine
     * which value field was in use.  For IR_VERSION 0.0.2 or later, this
     * field MUST be set and match the f|i|s|t|... field in use.  This
     * change was made to accomodate proto3 implementations.
     * </pre>
     *
     * <code>.onnx.AttributeProto.AttributeType type = 20;</code>
     */
    onnx.OnnxProto3.AttributeProto.AttributeType getType();

    /**
     * <pre>
     * Exactly ONE of the following fields must be present for this version of the IR
     * </pre>
     *
     * <code>float f = 2;</code>
     */
    float getF();

    /**
     * <pre>
     * int
     * </pre>
     *
     * <code>int64 i = 3;</code>
     */
    long getI();

    /**
     * <pre>
     * UTF-8 string
     * </pre>
     *
     * <code>bytes s = 4;</code>
     */
    com.google.protobuf.ByteString getS();

    /**
     * <pre>
     * tensor value
     * </pre>
     *
     * <code>.onnx.TensorProto t = 5;</code>
     */
    boolean hasT();
    /**
     * <pre>
     * tensor value
     * </pre>
     *
     * <code>.onnx.TensorProto t = 5;</code>
     */
    onnx.OnnxProto3.TensorProto getT();
    /**
     * <pre>
     * tensor value
     * </pre>
     *
     * <code>.onnx.TensorProto t = 5;</code>
     */
    onnx.OnnxProto3.TensorProtoOrBuilder getTOrBuilder();

    /**
     * <pre>
     * graph
     * </pre>
     *
     * <code>.onnx.GraphProto g = 6;</code>
     */
    boolean hasG();
    /**
     * <pre>
     * graph
     * </pre>
     *
     * <code>.onnx.GraphProto g = 6;</code>
     */
    onnx.OnnxProto3.GraphProto getG();
    /**
     * <pre>
     * graph
     * </pre>
     *
     * <code>.onnx.GraphProto g = 6;</code>
     */
    onnx.OnnxProto3.GraphProtoOrBuilder getGOrBuilder();

    /**
     * <pre>
     * list of floats
     * </pre>
     *
     * <code>repeated float floats = 7;</code>
     */
    java.util.List<java.lang.Float> getFloatsList();
    /**
     * <pre>
     * list of floats
     * </pre>
     *
     * <code>repeated float floats = 7;</code>
     */
    int getFloatsCount();
    /**
     * <pre>
     * list of floats
     * </pre>
     *
     * <code>repeated float floats = 7;</code>
     */
    float getFloats(int index);

    /**
     * <pre>
     * list of ints
     * </pre>
     *
     * <code>repeated int64 ints = 8;</code>
     */
    java.util.List<java.lang.Long> getIntsList();
    /**
     * <pre>
     * list of ints
     * </pre>
     *
     * <code>repeated int64 ints = 8;</code>
     */
    int getIntsCount();
    /**
     * <pre>
     * list of ints
     * </pre>
     *
     * <code>repeated int64 ints = 8;</code>
     */
    long getInts(int index);

    /**
     * <pre>
     * list of UTF-8 strings
     * </pre>
     *
     * <code>repeated bytes strings = 9;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getStringsList();
    /**
     * <pre>
     * list of UTF-8 strings
     * </pre>
     *
     * <code>repeated bytes strings = 9;</code>
     */
    int getStringsCount();
    /**
     * <pre>
     * list of UTF-8 strings
     * </pre>
     *
     * <code>repeated bytes strings = 9;</code>
     */
    com.google.protobuf.ByteString getStrings(int index);

    /**
     * <pre>
     * list of tensors
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensors = 10;</code>
     */
    java.util.List<onnx.OnnxProto3.TensorProto> 
        getTensorsList();
    /**
     * <pre>
     * list of tensors
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensors = 10;</code>
     */
    onnx.OnnxProto3.TensorProto getTensors(int index);
    /**
     * <pre>
     * list of tensors
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensors = 10;</code>
     */
    int getTensorsCount();
    /**
     * <pre>
     * list of tensors
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensors = 10;</code>
     */
    java.util.List<? extends onnx.OnnxProto3.TensorProtoOrBuilder> 
        getTensorsOrBuilderList();
    /**
     * <pre>
     * list of tensors
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensors = 10;</code>
     */
    onnx.OnnxProto3.TensorProtoOrBuilder getTensorsOrBuilder(
        int index);

    /**
     * <pre>
     * list of graph
     * </pre>
     *
     * <code>repeated .onnx.GraphProto graphs = 11;</code>
     */
    java.util.List<onnx.OnnxProto3.GraphProto> 
        getGraphsList();
    /**
     * <pre>
     * list of graph
     * </pre>
     *
     * <code>repeated .onnx.GraphProto graphs = 11;</code>
     */
    onnx.OnnxProto3.GraphProto getGraphs(int index);
    /**
     * <pre>
     * list of graph
     * </pre>
     *
     * <code>repeated .onnx.GraphProto graphs = 11;</code>
     */
    int getGraphsCount();
    /**
     * <pre>
     * list of graph
     * </pre>
     *
     * <code>repeated .onnx.GraphProto graphs = 11;</code>
     */
    java.util.List<? extends onnx.OnnxProto3.GraphProtoOrBuilder> 
        getGraphsOrBuilderList();
    /**
     * <pre>
     * list of graph
     * </pre>
     *
     * <code>repeated .onnx.GraphProto graphs = 11;</code>
     */
    onnx.OnnxProto3.GraphProtoOrBuilder getGraphsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A named attribute containing either singular float, integer, string
   * and tensor values, or repeated float, integer, string and tensor values.
   * An AttributeProto MUST contain the opName field, and *only one* of the
   * following content fields, effectively enforcing a C/C++ union equivalent.
   * </pre>
   *
   * Protobuf type {@code onnx.AttributeProto}
   */
  public  static final class AttributeProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.AttributeProto)
      AttributeProtoOrBuilder {
    // Use AttributeProto.newBuilder() to construct.
    private AttributeProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AttributeProto() {
      name_ = "";
      docString_ = "";
      type_ = 0;
      f_ = 0F;
      i_ = 0L;
      s_ = com.google.protobuf.ByteString.EMPTY;
      floats_ = java.util.Collections.emptyList();
      ints_ = java.util.Collections.emptyList();
      strings_ = java.util.Collections.emptyList();
      tensors_ = java.util.Collections.emptyList();
      graphs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AttributeProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 21: {

              f_ = input.readFloat();
              break;
            }
            case 24: {

              i_ = input.readInt64();
              break;
            }
            case 34: {

              s_ = input.readBytes();
              break;
            }
            case 42: {
              onnx.OnnxProto3.TensorProto.Builder subBuilder = null;
              if (t_ != null) {
                subBuilder = t_.toBuilder();
              }
              t_ = input.readMessage(onnx.OnnxProto3.TensorProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(t_);
                t_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              onnx.OnnxProto3.GraphProto.Builder subBuilder = null;
              if (g_ != null) {
                subBuilder = g_.toBuilder();
              }
              g_ = input.readMessage(onnx.OnnxProto3.GraphProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(g_);
                g_ = subBuilder.buildPartial();
              }

              break;
            }
            case 61: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                floats_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000100;
              }
              floats_.add(input.readFloat());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                floats_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                floats_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                ints_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              ints_.add(input.readInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                ints_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                ints_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                strings_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000400;
              }
              strings_.add(input.readBytes());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                tensors_ = new java.util.ArrayList<onnx.OnnxProto3.TensorProto>();
                mutable_bitField0_ |= 0x00000800;
              }
              tensors_.add(
                  input.readMessage(onnx.OnnxProto3.TensorProto.parser(), extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                graphs_ = new java.util.ArrayList<onnx.OnnxProto3.GraphProto>();
                mutable_bitField0_ |= 0x00001000;
              }
              graphs_.add(
                  input.readMessage(onnx.OnnxProto3.GraphProto.parser(), extensionRegistry));
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              docString_ = s;
              break;
            }
            case 160: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          floats_ = java.util.Collections.unmodifiableList(floats_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          ints_ = java.util.Collections.unmodifiableList(ints_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          strings_ = java.util.Collections.unmodifiableList(strings_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          tensors_ = java.util.Collections.unmodifiableList(tensors_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          graphs_ = java.util.Collections.unmodifiableList(graphs_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxProto3.internal_static_onnx_AttributeProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxProto3.internal_static_onnx_AttributeProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxProto3.AttributeProto.class, onnx.OnnxProto3.AttributeProto.Builder.class);
    }

    /**
     * <pre>
     * Note: this enum is structurally identical to the OpSchema::AttrType
     * enum defined in schema.h.  If you rev one, you likely need to rev the other.
     * </pre>
     *
     * Protobuf enum {@code onnx.AttributeProto.AttributeType}
     */
    public enum AttributeType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINED = 0;</code>
       */
      UNDEFINED(0),
      /**
       * <code>FLOAT = 1;</code>
       */
      FLOAT(1),
      /**
       * <code>INT = 2;</code>
       */
      INT(2),
      /**
       * <code>STRING = 3;</code>
       */
      STRING(3),
      /**
       * <code>TENSOR = 4;</code>
       */
      TENSOR(4),
      /**
       * <code>GRAPH = 5;</code>
       */
      GRAPH(5),
      /**
       * <code>FLOATS = 6;</code>
       */
      FLOATS(6),
      /**
       * <code>INTS = 7;</code>
       */
      INTS(7),
      /**
       * <code>STRINGS = 8;</code>
       */
      STRINGS(8),
      /**
       * <code>TENSORS = 9;</code>
       */
      TENSORS(9),
      /**
       * <code>GRAPHS = 10;</code>
       */
      GRAPHS(10),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINED = 0;</code>
       */
      public static final int UNDEFINED_VALUE = 0;
      /**
       * <code>FLOAT = 1;</code>
       */
      public static final int FLOAT_VALUE = 1;
      /**
       * <code>INT = 2;</code>
       */
      public static final int INT_VALUE = 2;
      /**
       * <code>STRING = 3;</code>
       */
      public static final int STRING_VALUE = 3;
      /**
       * <code>TENSOR = 4;</code>
       */
      public static final int TENSOR_VALUE = 4;
      /**
       * <code>GRAPH = 5;</code>
       */
      public static final int GRAPH_VALUE = 5;
      /**
       * <code>FLOATS = 6;</code>
       */
      public static final int FLOATS_VALUE = 6;
      /**
       * <code>INTS = 7;</code>
       */
      public static final int INTS_VALUE = 7;
      /**
       * <code>STRINGS = 8;</code>
       */
      public static final int STRINGS_VALUE = 8;
      /**
       * <code>TENSORS = 9;</code>
       */
      public static final int TENSORS_VALUE = 9;
      /**
       * <code>GRAPHS = 10;</code>
       */
      public static final int GRAPHS_VALUE = 10;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AttributeType valueOf(int value) {
        return forNumber(value);
      }

      public static AttributeType forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINED;
          case 1: return FLOAT;
          case 2: return INT;
          case 3: return STRING;
          case 4: return TENSOR;
          case 5: return GRAPH;
          case 6: return FLOATS;
          case 7: return INTS;
          case 8: return STRINGS;
          case 9: return TENSORS;
          case 10: return GRAPHS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AttributeType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AttributeType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AttributeType>() {
              public AttributeType findValueByNumber(int number) {
                return AttributeType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return onnx.OnnxProto3.AttributeProto.getDescriptor().getEnumTypes().get(0);
      }

      private static final AttributeType[] VALUES = values();

      public static AttributeType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AttributeType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:onnx.AttributeProto.AttributeType)
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The opName field MUST be present for this version of the IR.
     * </pre>
     *
     * <code>string opName = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The opName field MUST be present for this version of the IR.
     * </pre>
     *
     * <code>string opName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOC_STRING_FIELD_NUMBER = 13;
    private volatile java.lang.Object docString_;
    /**
     * <pre>
     * A human-readable documentation for this attribute. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 13;</code>
     */
    public java.lang.String getDocString() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docString_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A human-readable documentation for this attribute. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 13;</code>
     */
    public com.google.protobuf.ByteString
        getDocStringBytes() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 20;
    private int type_;
    /**
     * <pre>
     * The type field MUST be present for this version of the IR.
     * For 0.0.1 versions of the IR, this field was not defined, and
     * implementations needed to use has_field hueristics to determine
     * which value field was in use.  For IR_VERSION 0.0.2 or later, this
     * field MUST be set and match the f|i|s|t|... field in use.  This
     * change was made to accomodate proto3 implementations.
     * </pre>
     *
     * <code>.onnx.AttributeProto.AttributeType type = 20;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The type field MUST be present for this version of the IR.
     * For 0.0.1 versions of the IR, this field was not defined, and
     * implementations needed to use has_field hueristics to determine
     * which value field was in use.  For IR_VERSION 0.0.2 or later, this
     * field MUST be set and match the f|i|s|t|... field in use.  This
     * change was made to accomodate proto3 implementations.
     * </pre>
     *
     * <code>.onnx.AttributeProto.AttributeType type = 20;</code>
     */
    public onnx.OnnxProto3.AttributeProto.AttributeType getType() {
      onnx.OnnxProto3.AttributeProto.AttributeType result = onnx.OnnxProto3.AttributeProto.AttributeType.valueOf(type_);
      return result == null ? onnx.OnnxProto3.AttributeProto.AttributeType.UNRECOGNIZED : result;
    }

    public static final int F_FIELD_NUMBER = 2;
    private float f_;
    /**
     * <pre>
     * Exactly ONE of the following fields must be present for this version of the IR
     * </pre>
     *
     * <code>float f = 2;</code>
     */
    public float getF() {
      return f_;
    }

    public static final int I_FIELD_NUMBER = 3;
    private long i_;
    /**
     * <pre>
     * int
     * </pre>
     *
     * <code>int64 i = 3;</code>
     */
    public long getI() {
      return i_;
    }

    public static final int S_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString s_;
    /**
     * <pre>
     * UTF-8 string
     * </pre>
     *
     * <code>bytes s = 4;</code>
     */
    public com.google.protobuf.ByteString getS() {
      return s_;
    }

    public static final int T_FIELD_NUMBER = 5;
    private onnx.OnnxProto3.TensorProto t_;
    /**
     * <pre>
     * tensor value
     * </pre>
     *
     * <code>.onnx.TensorProto t = 5;</code>
     */
    public boolean hasT() {
      return t_ != null;
    }
    /**
     * <pre>
     * tensor value
     * </pre>
     *
     * <code>.onnx.TensorProto t = 5;</code>
     */
    public onnx.OnnxProto3.TensorProto getT() {
      return t_ == null ? onnx.OnnxProto3.TensorProto.getDefaultInstance() : t_;
    }
    /**
     * <pre>
     * tensor value
     * </pre>
     *
     * <code>.onnx.TensorProto t = 5;</code>
     */
    public onnx.OnnxProto3.TensorProtoOrBuilder getTOrBuilder() {
      return getT();
    }

    public static final int G_FIELD_NUMBER = 6;
    private onnx.OnnxProto3.GraphProto g_;
    /**
     * <pre>
     * graph
     * </pre>
     *
     * <code>.onnx.GraphProto g = 6;</code>
     */
    public boolean hasG() {
      return g_ != null;
    }
    /**
     * <pre>
     * graph
     * </pre>
     *
     * <code>.onnx.GraphProto g = 6;</code>
     */
    public onnx.OnnxProto3.GraphProto getG() {
      return g_ == null ? onnx.OnnxProto3.GraphProto.getDefaultInstance() : g_;
    }
    /**
     * <pre>
     * graph
     * </pre>
     *
     * <code>.onnx.GraphProto g = 6;</code>
     */
    public onnx.OnnxProto3.GraphProtoOrBuilder getGOrBuilder() {
      return getG();
    }

    public static final int FLOATS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Float> floats_;
    /**
     * <pre>
     * list of floats
     * </pre>
     *
     * <code>repeated float floats = 7;</code>
     */
    public java.util.List<java.lang.Float>
        getFloatsList() {
      return floats_;
    }
    /**
     * <pre>
     * list of floats
     * </pre>
     *
     * <code>repeated float floats = 7;</code>
     */
    public int getFloatsCount() {
      return floats_.size();
    }
    /**
     * <pre>
     * list of floats
     * </pre>
     *
     * <code>repeated float floats = 7;</code>
     */
    public float getFloats(int index) {
      return floats_.get(index);
    }
    private int floatsMemoizedSerializedSize = -1;

    public static final int INTS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> ints_;
    /**
     * <pre>
     * list of ints
     * </pre>
     *
     * <code>repeated int64 ints = 8;</code>
     */
    public java.util.List<java.lang.Long>
        getIntsList() {
      return ints_;
    }
    /**
     * <pre>
     * list of ints
     * </pre>
     *
     * <code>repeated int64 ints = 8;</code>
     */
    public int getIntsCount() {
      return ints_.size();
    }
    /**
     * <pre>
     * list of ints
     * </pre>
     *
     * <code>repeated int64 ints = 8;</code>
     */
    public long getInts(int index) {
      return ints_.get(index);
    }
    private int intsMemoizedSerializedSize = -1;

    public static final int STRINGS_FIELD_NUMBER = 9;
    private java.util.List<com.google.protobuf.ByteString> strings_;
    /**
     * <pre>
     * list of UTF-8 strings
     * </pre>
     *
     * <code>repeated bytes strings = 9;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getStringsList() {
      return strings_;
    }
    /**
     * <pre>
     * list of UTF-8 strings
     * </pre>
     *
     * <code>repeated bytes strings = 9;</code>
     */
    public int getStringsCount() {
      return strings_.size();
    }
    /**
     * <pre>
     * list of UTF-8 strings
     * </pre>
     *
     * <code>repeated bytes strings = 9;</code>
     */
    public com.google.protobuf.ByteString getStrings(int index) {
      return strings_.get(index);
    }

    public static final int TENSORS_FIELD_NUMBER = 10;
    private java.util.List<onnx.OnnxProto3.TensorProto> tensors_;
    /**
     * <pre>
     * list of tensors
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensors = 10;</code>
     */
    public java.util.List<onnx.OnnxProto3.TensorProto> getTensorsList() {
      return tensors_;
    }
    /**
     * <pre>
     * list of tensors
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensors = 10;</code>
     */
    public java.util.List<? extends onnx.OnnxProto3.TensorProtoOrBuilder> 
        getTensorsOrBuilderList() {
      return tensors_;
    }
    /**
     * <pre>
     * list of tensors
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensors = 10;</code>
     */
    public int getTensorsCount() {
      return tensors_.size();
    }
    /**
     * <pre>
     * list of tensors
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensors = 10;</code>
     */
    public onnx.OnnxProto3.TensorProto getTensors(int index) {
      return tensors_.get(index);
    }
    /**
     * <pre>
     * list of tensors
     * </pre>
     *
     * <code>repeated .onnx.TensorProto tensors = 10;</code>
     */
    public onnx.OnnxProto3.TensorProtoOrBuilder getTensorsOrBuilder(
        int index) {
      return tensors_.get(index);
    }

    public static final int GRAPHS_FIELD_NUMBER = 11;
    private java.util.List<onnx.OnnxProto3.GraphProto> graphs_;
    /**
     * <pre>
     * list of graph
     * </pre>
     *
     * <code>repeated .onnx.GraphProto graphs = 11;</code>
     */
    public java.util.List<onnx.OnnxProto3.GraphProto> getGraphsList() {
      return graphs_;
    }
    /**
     * <pre>
     * list of graph
     * </pre>
     *
     * <code>repeated .onnx.GraphProto graphs = 11;</code>
     */
    public java.util.List<? extends onnx.OnnxProto3.GraphProtoOrBuilder> 
        getGraphsOrBuilderList() {
      return graphs_;
    }
    /**
     * <pre>
     * list of graph
     * </pre>
     *
     * <code>repeated .onnx.GraphProto graphs = 11;</code>
     */
    public int getGraphsCount() {
      return graphs_.size();
    }
    /**
     * <pre>
     * list of graph
     * </pre>
     *
     * <code>repeated .onnx.GraphProto graphs = 11;</code>
     */
    public onnx.OnnxProto3.GraphProto getGraphs(int index) {
      return graphs_.get(index);
    }
    /**
     * <pre>
     * list of graph
     * </pre>
     *
     * <code>repeated .onnx.GraphProto graphs = 11;</code>
     */
    public onnx.OnnxProto3.GraphProtoOrBuilder getGraphsOrBuilder(
        int index) {
      return graphs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (f_ != 0F) {
        output.writeFloat(2, f_);
      }
      if (i_ != 0L) {
        output.writeInt64(3, i_);
      }
      if (!s_.isEmpty()) {
        output.writeBytes(4, s_);
      }
      if (t_ != null) {
        output.writeMessage(5, getT());
      }
      if (g_ != null) {
        output.writeMessage(6, getG());
      }
      if (getFloatsList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(floatsMemoizedSerializedSize);
      }
      for (int i = 0; i < floats_.size(); i++) {
        output.writeFloatNoTag(floats_.get(i));
      }
      if (getIntsList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(intsMemoizedSerializedSize);
      }
      for (int i = 0; i < ints_.size(); i++) {
        output.writeInt64NoTag(ints_.get(i));
      }
      for (int i = 0; i < strings_.size(); i++) {
        output.writeBytes(9, strings_.get(i));
      }
      for (int i = 0; i < tensors_.size(); i++) {
        output.writeMessage(10, tensors_.get(i));
      }
      for (int i = 0; i < graphs_.size(); i++) {
        output.writeMessage(11, graphs_.get(i));
      }
      if (!getDocStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, docString_);
      }
      if (type_ != onnx.OnnxProto3.AttributeProto.AttributeType.UNDEFINED.getNumber()) {
        output.writeEnum(20, type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (f_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, f_);
      }
      if (i_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, i_);
      }
      if (!s_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, s_);
      }
      if (t_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getT());
      }
      if (g_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getG());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatsList().size();
        size += dataSize;
        if (!getFloatsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        floatsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ints_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(ints_.get(i));
        }
        size += dataSize;
        if (!getIntsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        intsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strings_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strings_.get(i));
        }
        size += dataSize;
        size += 1 * getStringsList().size();
      }
      for (int i = 0; i < tensors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, tensors_.get(i));
      }
      for (int i = 0; i < graphs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, graphs_.get(i));
      }
      if (!getDocStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, docString_);
      }
      if (type_ != onnx.OnnxProto3.AttributeProto.AttributeType.UNDEFINED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(20, type_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxProto3.AttributeProto)) {
        return super.equals(obj);
      }
      onnx.OnnxProto3.AttributeProto other = (onnx.OnnxProto3.AttributeProto) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getDocString()
          .equals(other.getDocString());
      result = result && type_ == other.type_;
      result = result && (
          java.lang.Float.floatToIntBits(getF())
          == java.lang.Float.floatToIntBits(
              other.getF()));
      result = result && (getI()
          == other.getI());
      result = result && getS()
          .equals(other.getS());
      result = result && (hasT() == other.hasT());
      if (hasT()) {
        result = result && getT()
            .equals(other.getT());
      }
      result = result && (hasG() == other.hasG());
      if (hasG()) {
        result = result && getG()
            .equals(other.getG());
      }
      result = result && getFloatsList()
          .equals(other.getFloatsList());
      result = result && getIntsList()
          .equals(other.getIntsList());
      result = result && getStringsList()
          .equals(other.getStringsList());
      result = result && getTensorsList()
          .equals(other.getTensorsList());
      result = result && getGraphsList()
          .equals(other.getGraphsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DOC_STRING_FIELD_NUMBER;
      hash = (53 * hash) + getDocString().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + F_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getF());
      hash = (37 * hash) + I_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getI());
      hash = (37 * hash) + S_FIELD_NUMBER;
      hash = (53 * hash) + getS().hashCode();
      if (hasT()) {
        hash = (37 * hash) + T_FIELD_NUMBER;
        hash = (53 * hash) + getT().hashCode();
      }
      if (hasG()) {
        hash = (37 * hash) + G_FIELD_NUMBER;
        hash = (53 * hash) + getG().hashCode();
      }
      if (getFloatsCount() > 0) {
        hash = (37 * hash) + FLOATS_FIELD_NUMBER;
        hash = (53 * hash) + getFloatsList().hashCode();
      }
      if (getIntsCount() > 0) {
        hash = (37 * hash) + INTS_FIELD_NUMBER;
        hash = (53 * hash) + getIntsList().hashCode();
      }
      if (getStringsCount() > 0) {
        hash = (37 * hash) + STRINGS_FIELD_NUMBER;
        hash = (53 * hash) + getStringsList().hashCode();
      }
      if (getTensorsCount() > 0) {
        hash = (37 * hash) + TENSORS_FIELD_NUMBER;
        hash = (53 * hash) + getTensorsList().hashCode();
      }
      if (getGraphsCount() > 0) {
        hash = (37 * hash) + GRAPHS_FIELD_NUMBER;
        hash = (53 * hash) + getGraphsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxProto3.AttributeProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.AttributeProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.AttributeProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.AttributeProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.AttributeProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.AttributeProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.AttributeProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.AttributeProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.AttributeProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.AttributeProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxProto3.AttributeProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A named attribute containing either singular float, integer, string
     * and tensor values, or repeated float, integer, string and tensor values.
     * An AttributeProto MUST contain the opName field, and *only one* of the
     * following content fields, effectively enforcing a C/C++ union equivalent.
     * </pre>
     *
     * Protobuf type {@code onnx.AttributeProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.AttributeProto)
        onnx.OnnxProto3.AttributeProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_AttributeProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_AttributeProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.AttributeProto.class, onnx.OnnxProto3.AttributeProto.Builder.class);
      }

      // Construct using onnx.OnnxProto3.AttributeProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTensorsFieldBuilder();
          getGraphsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        docString_ = "";

        type_ = 0;

        f_ = 0F;

        i_ = 0L;

        s_ = com.google.protobuf.ByteString.EMPTY;

        if (tBuilder_ == null) {
          t_ = null;
        } else {
          t_ = null;
          tBuilder_ = null;
        }
        if (gBuilder_ == null) {
          g_ = null;
        } else {
          g_ = null;
          gBuilder_ = null;
        }
        floats_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        ints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        strings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        if (tensorsBuilder_ == null) {
          tensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          tensorsBuilder_.clear();
        }
        if (graphsBuilder_ == null) {
          graphs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          graphsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxProto3.internal_static_onnx_AttributeProto_descriptor;
      }

      public onnx.OnnxProto3.AttributeProto getDefaultInstanceForType() {
        return onnx.OnnxProto3.AttributeProto.getDefaultInstance();
      }

      public onnx.OnnxProto3.AttributeProto build() {
        onnx.OnnxProto3.AttributeProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public onnx.OnnxProto3.AttributeProto buildPartial() {
        onnx.OnnxProto3.AttributeProto result = new onnx.OnnxProto3.AttributeProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.docString_ = docString_;
        result.type_ = type_;
        result.f_ = f_;
        result.i_ = i_;
        result.s_ = s_;
        if (tBuilder_ == null) {
          result.t_ = t_;
        } else {
          result.t_ = tBuilder_.build();
        }
        if (gBuilder_ == null) {
          result.g_ = g_;
        } else {
          result.g_ = gBuilder_.build();
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          floats_ = java.util.Collections.unmodifiableList(floats_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.floats_ = floats_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          ints_ = java.util.Collections.unmodifiableList(ints_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.ints_ = ints_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          strings_ = java.util.Collections.unmodifiableList(strings_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.strings_ = strings_;
        if (tensorsBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            tensors_ = java.util.Collections.unmodifiableList(tensors_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.tensors_ = tensors_;
        } else {
          result.tensors_ = tensorsBuilder_.build();
        }
        if (graphsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            graphs_ = java.util.Collections.unmodifiableList(graphs_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.graphs_ = graphs_;
        } else {
          result.graphs_ = graphsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxProto3.AttributeProto) {
          return mergeFrom((onnx.OnnxProto3.AttributeProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxProto3.AttributeProto other) {
        if (other == onnx.OnnxProto3.AttributeProto.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDocString().isEmpty()) {
          docString_ = other.docString_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getF() != 0F) {
          setF(other.getF());
        }
        if (other.getI() != 0L) {
          setI(other.getI());
        }
        if (other.getS() != com.google.protobuf.ByteString.EMPTY) {
          setS(other.getS());
        }
        if (other.hasT()) {
          mergeT(other.getT());
        }
        if (other.hasG()) {
          mergeG(other.getG());
        }
        if (!other.floats_.isEmpty()) {
          if (floats_.isEmpty()) {
            floats_ = other.floats_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureFloatsIsMutable();
            floats_.addAll(other.floats_);
          }
          onChanged();
        }
        if (!other.ints_.isEmpty()) {
          if (ints_.isEmpty()) {
            ints_ = other.ints_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureIntsIsMutable();
            ints_.addAll(other.ints_);
          }
          onChanged();
        }
        if (!other.strings_.isEmpty()) {
          if (strings_.isEmpty()) {
            strings_ = other.strings_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureStringsIsMutable();
            strings_.addAll(other.strings_);
          }
          onChanged();
        }
        if (tensorsBuilder_ == null) {
          if (!other.tensors_.isEmpty()) {
            if (tensors_.isEmpty()) {
              tensors_ = other.tensors_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureTensorsIsMutable();
              tensors_.addAll(other.tensors_);
            }
            onChanged();
          }
        } else {
          if (!other.tensors_.isEmpty()) {
            if (tensorsBuilder_.isEmpty()) {
              tensorsBuilder_.dispose();
              tensorsBuilder_ = null;
              tensors_ = other.tensors_;
              bitField0_ = (bitField0_ & ~0x00000800);
              tensorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTensorsFieldBuilder() : null;
            } else {
              tensorsBuilder_.addAllMessages(other.tensors_);
            }
          }
        }
        if (graphsBuilder_ == null) {
          if (!other.graphs_.isEmpty()) {
            if (graphs_.isEmpty()) {
              graphs_ = other.graphs_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureGraphsIsMutable();
              graphs_.addAll(other.graphs_);
            }
            onChanged();
          }
        } else {
          if (!other.graphs_.isEmpty()) {
            if (graphsBuilder_.isEmpty()) {
              graphsBuilder_.dispose();
              graphsBuilder_ = null;
              graphs_ = other.graphs_;
              bitField0_ = (bitField0_ & ~0x00001000);
              graphsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGraphsFieldBuilder() : null;
            } else {
              graphsBuilder_.addAllMessages(other.graphs_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxProto3.AttributeProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxProto3.AttributeProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The opName field MUST be present for this version of the IR.
       * </pre>
       *
       * <code>string opName = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The opName field MUST be present for this version of the IR.
       * </pre>
       *
       * <code>string opName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The opName field MUST be present for this version of the IR.
       * </pre>
       *
       * <code>string opName = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The opName field MUST be present for this version of the IR.
       * </pre>
       *
       * <code>string opName = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The opName field MUST be present for this version of the IR.
       * </pre>
       *
       * <code>string opName = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object docString_ = "";
      /**
       * <pre>
       * A human-readable documentation for this attribute. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 13;</code>
       */
      public java.lang.String getDocString() {
        java.lang.Object ref = docString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this attribute. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 13;</code>
       */
      public com.google.protobuf.ByteString
          getDocStringBytes() {
        java.lang.Object ref = docString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this attribute. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 13;</code>
       */
      public Builder setDocString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this attribute. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 13;</code>
       */
      public Builder clearDocString() {
        
        docString_ = getDefaultInstance().getDocString();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this attribute. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 13;</code>
       */
      public Builder setDocStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docString_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * The type field MUST be present for this version of the IR.
       * For 0.0.1 versions of the IR, this field was not defined, and
       * implementations needed to use has_field hueristics to determine
       * which value field was in use.  For IR_VERSION 0.0.2 or later, this
       * field MUST be set and match the f|i|s|t|... field in use.  This
       * change was made to accomodate proto3 implementations.
       * </pre>
       *
       * <code>.onnx.AttributeProto.AttributeType type = 20;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * The type field MUST be present for this version of the IR.
       * For 0.0.1 versions of the IR, this field was not defined, and
       * implementations needed to use has_field hueristics to determine
       * which value field was in use.  For IR_VERSION 0.0.2 or later, this
       * field MUST be set and match the f|i|s|t|... field in use.  This
       * change was made to accomodate proto3 implementations.
       * </pre>
       *
       * <code>.onnx.AttributeProto.AttributeType type = 20;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type field MUST be present for this version of the IR.
       * For 0.0.1 versions of the IR, this field was not defined, and
       * implementations needed to use has_field hueristics to determine
       * which value field was in use.  For IR_VERSION 0.0.2 or later, this
       * field MUST be set and match the f|i|s|t|... field in use.  This
       * change was made to accomodate proto3 implementations.
       * </pre>
       *
       * <code>.onnx.AttributeProto.AttributeType type = 20;</code>
       */
      public onnx.OnnxProto3.AttributeProto.AttributeType getType() {
        onnx.OnnxProto3.AttributeProto.AttributeType result = onnx.OnnxProto3.AttributeProto.AttributeType.valueOf(type_);
        return result == null ? onnx.OnnxProto3.AttributeProto.AttributeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type field MUST be present for this version of the IR.
       * For 0.0.1 versions of the IR, this field was not defined, and
       * implementations needed to use has_field hueristics to determine
       * which value field was in use.  For IR_VERSION 0.0.2 or later, this
       * field MUST be set and match the f|i|s|t|... field in use.  This
       * change was made to accomodate proto3 implementations.
       * </pre>
       *
       * <code>.onnx.AttributeProto.AttributeType type = 20;</code>
       */
      public Builder setType(onnx.OnnxProto3.AttributeProto.AttributeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type field MUST be present for this version of the IR.
       * For 0.0.1 versions of the IR, this field was not defined, and
       * implementations needed to use has_field hueristics to determine
       * which value field was in use.  For IR_VERSION 0.0.2 or later, this
       * field MUST be set and match the f|i|s|t|... field in use.  This
       * change was made to accomodate proto3 implementations.
       * </pre>
       *
       * <code>.onnx.AttributeProto.AttributeType type = 20;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private float f_ ;
      /**
       * <pre>
       * Exactly ONE of the following fields must be present for this version of the IR
       * </pre>
       *
       * <code>float f = 2;</code>
       */
      public float getF() {
        return f_;
      }
      /**
       * <pre>
       * Exactly ONE of the following fields must be present for this version of the IR
       * </pre>
       *
       * <code>float f = 2;</code>
       */
      public Builder setF(float value) {
        
        f_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Exactly ONE of the following fields must be present for this version of the IR
       * </pre>
       *
       * <code>float f = 2;</code>
       */
      public Builder clearF() {
        
        f_ = 0F;
        onChanged();
        return this;
      }

      private long i_ ;
      /**
       * <pre>
       * int
       * </pre>
       *
       * <code>int64 i = 3;</code>
       */
      public long getI() {
        return i_;
      }
      /**
       * <pre>
       * int
       * </pre>
       *
       * <code>int64 i = 3;</code>
       */
      public Builder setI(long value) {
        
        i_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * int
       * </pre>
       *
       * <code>int64 i = 3;</code>
       */
      public Builder clearI() {
        
        i_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString s_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * UTF-8 string
       * </pre>
       *
       * <code>bytes s = 4;</code>
       */
      public com.google.protobuf.ByteString getS() {
        return s_;
      }
      /**
       * <pre>
       * UTF-8 string
       * </pre>
       *
       * <code>bytes s = 4;</code>
       */
      public Builder setS(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        s_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UTF-8 string
       * </pre>
       *
       * <code>bytes s = 4;</code>
       */
      public Builder clearS() {
        
        s_ = getDefaultInstance().getS();
        onChanged();
        return this;
      }

      private onnx.OnnxProto3.TensorProto t_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.TensorProto, onnx.OnnxProto3.TensorProto.Builder, onnx.OnnxProto3.TensorProtoOrBuilder> tBuilder_;
      /**
       * <pre>
       * tensor value
       * </pre>
       *
       * <code>.onnx.TensorProto t = 5;</code>
       */
      public boolean hasT() {
        return tBuilder_ != null || t_ != null;
      }
      /**
       * <pre>
       * tensor value
       * </pre>
       *
       * <code>.onnx.TensorProto t = 5;</code>
       */
      public onnx.OnnxProto3.TensorProto getT() {
        if (tBuilder_ == null) {
          return t_ == null ? onnx.OnnxProto3.TensorProto.getDefaultInstance() : t_;
        } else {
          return tBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * tensor value
       * </pre>
       *
       * <code>.onnx.TensorProto t = 5;</code>
       */
      public Builder setT(onnx.OnnxProto3.TensorProto value) {
        if (tBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          t_ = value;
          onChanged();
        } else {
          tBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * tensor value
       * </pre>
       *
       * <code>.onnx.TensorProto t = 5;</code>
       */
      public Builder setT(
          onnx.OnnxProto3.TensorProto.Builder builderForValue) {
        if (tBuilder_ == null) {
          t_ = builderForValue.build();
          onChanged();
        } else {
          tBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * tensor value
       * </pre>
       *
       * <code>.onnx.TensorProto t = 5;</code>
       */
      public Builder mergeT(onnx.OnnxProto3.TensorProto value) {
        if (tBuilder_ == null) {
          if (t_ != null) {
            t_ =
              onnx.OnnxProto3.TensorProto.newBuilder(t_).mergeFrom(value).buildPartial();
          } else {
            t_ = value;
          }
          onChanged();
        } else {
          tBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * tensor value
       * </pre>
       *
       * <code>.onnx.TensorProto t = 5;</code>
       */
      public Builder clearT() {
        if (tBuilder_ == null) {
          t_ = null;
          onChanged();
        } else {
          t_ = null;
          tBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * tensor value
       * </pre>
       *
       * <code>.onnx.TensorProto t = 5;</code>
       */
      public onnx.OnnxProto3.TensorProto.Builder getTBuilder() {
        
        onChanged();
        return getTFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * tensor value
       * </pre>
       *
       * <code>.onnx.TensorProto t = 5;</code>
       */
      public onnx.OnnxProto3.TensorProtoOrBuilder getTOrBuilder() {
        if (tBuilder_ != null) {
          return tBuilder_.getMessageOrBuilder();
        } else {
          return t_ == null ?
              onnx.OnnxProto3.TensorProto.getDefaultInstance() : t_;
        }
      }
      /**
       * <pre>
       * tensor value
       * </pre>
       *
       * <code>.onnx.TensorProto t = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.TensorProto, onnx.OnnxProto3.TensorProto.Builder, onnx.OnnxProto3.TensorProtoOrBuilder> 
          getTFieldBuilder() {
        if (tBuilder_ == null) {
          tBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.OnnxProto3.TensorProto, onnx.OnnxProto3.TensorProto.Builder, onnx.OnnxProto3.TensorProtoOrBuilder>(
                  getT(),
                  getParentForChildren(),
                  isClean());
          t_ = null;
        }
        return tBuilder_;
      }

      private onnx.OnnxProto3.GraphProto g_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.GraphProto, onnx.OnnxProto3.GraphProto.Builder, onnx.OnnxProto3.GraphProtoOrBuilder> gBuilder_;
      /**
       * <pre>
       * graph
       * </pre>
       *
       * <code>.onnx.GraphProto g = 6;</code>
       */
      public boolean hasG() {
        return gBuilder_ != null || g_ != null;
      }
      /**
       * <pre>
       * graph
       * </pre>
       *
       * <code>.onnx.GraphProto g = 6;</code>
       */
      public onnx.OnnxProto3.GraphProto getG() {
        if (gBuilder_ == null) {
          return g_ == null ? onnx.OnnxProto3.GraphProto.getDefaultInstance() : g_;
        } else {
          return gBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * graph
       * </pre>
       *
       * <code>.onnx.GraphProto g = 6;</code>
       */
      public Builder setG(onnx.OnnxProto3.GraphProto value) {
        if (gBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          g_ = value;
          onChanged();
        } else {
          gBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * graph
       * </pre>
       *
       * <code>.onnx.GraphProto g = 6;</code>
       */
      public Builder setG(
          onnx.OnnxProto3.GraphProto.Builder builderForValue) {
        if (gBuilder_ == null) {
          g_ = builderForValue.build();
          onChanged();
        } else {
          gBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * graph
       * </pre>
       *
       * <code>.onnx.GraphProto g = 6;</code>
       */
      public Builder mergeG(onnx.OnnxProto3.GraphProto value) {
        if (gBuilder_ == null) {
          if (g_ != null) {
            g_ =
              onnx.OnnxProto3.GraphProto.newBuilder(g_).mergeFrom(value).buildPartial();
          } else {
            g_ = value;
          }
          onChanged();
        } else {
          gBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * graph
       * </pre>
       *
       * <code>.onnx.GraphProto g = 6;</code>
       */
      public Builder clearG() {
        if (gBuilder_ == null) {
          g_ = null;
          onChanged();
        } else {
          g_ = null;
          gBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * graph
       * </pre>
       *
       * <code>.onnx.GraphProto g = 6;</code>
       */
      public onnx.OnnxProto3.GraphProto.Builder getGBuilder() {
        
        onChanged();
        return getGFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * graph
       * </pre>
       *
       * <code>.onnx.GraphProto g = 6;</code>
       */
      public onnx.OnnxProto3.GraphProtoOrBuilder getGOrBuilder() {
        if (gBuilder_ != null) {
          return gBuilder_.getMessageOrBuilder();
        } else {
          return g_ == null ?
              onnx.OnnxProto3.GraphProto.getDefaultInstance() : g_;
        }
      }
      /**
       * <pre>
       * graph
       * </pre>
       *
       * <code>.onnx.GraphProto g = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.GraphProto, onnx.OnnxProto3.GraphProto.Builder, onnx.OnnxProto3.GraphProtoOrBuilder> 
          getGFieldBuilder() {
        if (gBuilder_ == null) {
          gBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.OnnxProto3.GraphProto, onnx.OnnxProto3.GraphProto.Builder, onnx.OnnxProto3.GraphProtoOrBuilder>(
                  getG(),
                  getParentForChildren(),
                  isClean());
          g_ = null;
        }
        return gBuilder_;
      }

      private java.util.List<java.lang.Float> floats_ = java.util.Collections.emptyList();
      private void ensureFloatsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          floats_ = new java.util.ArrayList<java.lang.Float>(floats_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <pre>
       * list of floats
       * </pre>
       *
       * <code>repeated float floats = 7;</code>
       */
      public java.util.List<java.lang.Float>
          getFloatsList() {
        return java.util.Collections.unmodifiableList(floats_);
      }
      /**
       * <pre>
       * list of floats
       * </pre>
       *
       * <code>repeated float floats = 7;</code>
       */
      public int getFloatsCount() {
        return floats_.size();
      }
      /**
       * <pre>
       * list of floats
       * </pre>
       *
       * <code>repeated float floats = 7;</code>
       */
      public float getFloats(int index) {
        return floats_.get(index);
      }
      /**
       * <pre>
       * list of floats
       * </pre>
       *
       * <code>repeated float floats = 7;</code>
       */
      public Builder setFloats(
          int index, float value) {
        ensureFloatsIsMutable();
        floats_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of floats
       * </pre>
       *
       * <code>repeated float floats = 7;</code>
       */
      public Builder addFloats(float value) {
        ensureFloatsIsMutable();
        floats_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of floats
       * </pre>
       *
       * <code>repeated float floats = 7;</code>
       */
      public Builder addAllFloats(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floats_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of floats
       * </pre>
       *
       * <code>repeated float floats = 7;</code>
       */
      public Builder clearFloats() {
        floats_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> ints_ = java.util.Collections.emptyList();
      private void ensureIntsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          ints_ = new java.util.ArrayList<java.lang.Long>(ints_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <pre>
       * list of ints
       * </pre>
       *
       * <code>repeated int64 ints = 8;</code>
       */
      public java.util.List<java.lang.Long>
          getIntsList() {
        return java.util.Collections.unmodifiableList(ints_);
      }
      /**
       * <pre>
       * list of ints
       * </pre>
       *
       * <code>repeated int64 ints = 8;</code>
       */
      public int getIntsCount() {
        return ints_.size();
      }
      /**
       * <pre>
       * list of ints
       * </pre>
       *
       * <code>repeated int64 ints = 8;</code>
       */
      public long getInts(int index) {
        return ints_.get(index);
      }
      /**
       * <pre>
       * list of ints
       * </pre>
       *
       * <code>repeated int64 ints = 8;</code>
       */
      public Builder setInts(
          int index, long value) {
        ensureIntsIsMutable();
        ints_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of ints
       * </pre>
       *
       * <code>repeated int64 ints = 8;</code>
       */
      public Builder addInts(long value) {
        ensureIntsIsMutable();
        ints_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of ints
       * </pre>
       *
       * <code>repeated int64 ints = 8;</code>
       */
      public Builder addAllInts(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureIntsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ints_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of ints
       * </pre>
       *
       * <code>repeated int64 ints = 8;</code>
       */
      public Builder clearInts() {
        ints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> strings_ = java.util.Collections.emptyList();
      private void ensureStringsIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          strings_ = new java.util.ArrayList<com.google.protobuf.ByteString>(strings_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <pre>
       * list of UTF-8 strings
       * </pre>
       *
       * <code>repeated bytes strings = 9;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getStringsList() {
        return java.util.Collections.unmodifiableList(strings_);
      }
      /**
       * <pre>
       * list of UTF-8 strings
       * </pre>
       *
       * <code>repeated bytes strings = 9;</code>
       */
      public int getStringsCount() {
        return strings_.size();
      }
      /**
       * <pre>
       * list of UTF-8 strings
       * </pre>
       *
       * <code>repeated bytes strings = 9;</code>
       */
      public com.google.protobuf.ByteString getStrings(int index) {
        return strings_.get(index);
      }
      /**
       * <pre>
       * list of UTF-8 strings
       * </pre>
       *
       * <code>repeated bytes strings = 9;</code>
       */
      public Builder setStrings(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringsIsMutable();
        strings_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of UTF-8 strings
       * </pre>
       *
       * <code>repeated bytes strings = 9;</code>
       */
      public Builder addStrings(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringsIsMutable();
        strings_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of UTF-8 strings
       * </pre>
       *
       * <code>repeated bytes strings = 9;</code>
       */
      public Builder addAllStrings(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureStringsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, strings_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * list of UTF-8 strings
       * </pre>
       *
       * <code>repeated bytes strings = 9;</code>
       */
      public Builder clearStrings() {
        strings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private java.util.List<onnx.OnnxProto3.TensorProto> tensors_ =
        java.util.Collections.emptyList();
      private void ensureTensorsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          tensors_ = new java.util.ArrayList<onnx.OnnxProto3.TensorProto>(tensors_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.TensorProto, onnx.OnnxProto3.TensorProto.Builder, onnx.OnnxProto3.TensorProtoOrBuilder> tensorsBuilder_;

      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public java.util.List<onnx.OnnxProto3.TensorProto> getTensorsList() {
        if (tensorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tensors_);
        } else {
          return tensorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public int getTensorsCount() {
        if (tensorsBuilder_ == null) {
          return tensors_.size();
        } else {
          return tensorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public onnx.OnnxProto3.TensorProto getTensors(int index) {
        if (tensorsBuilder_ == null) {
          return tensors_.get(index);
        } else {
          return tensorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public Builder setTensors(
          int index, onnx.OnnxProto3.TensorProto value) {
        if (tensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTensorsIsMutable();
          tensors_.set(index, value);
          onChanged();
        } else {
          tensorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public Builder setTensors(
          int index, onnx.OnnxProto3.TensorProto.Builder builderForValue) {
        if (tensorsBuilder_ == null) {
          ensureTensorsIsMutable();
          tensors_.set(index, builderForValue.build());
          onChanged();
        } else {
          tensorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public Builder addTensors(onnx.OnnxProto3.TensorProto value) {
        if (tensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTensorsIsMutable();
          tensors_.add(value);
          onChanged();
        } else {
          tensorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public Builder addTensors(
          int index, onnx.OnnxProto3.TensorProto value) {
        if (tensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTensorsIsMutable();
          tensors_.add(index, value);
          onChanged();
        } else {
          tensorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public Builder addTensors(
          onnx.OnnxProto3.TensorProto.Builder builderForValue) {
        if (tensorsBuilder_ == null) {
          ensureTensorsIsMutable();
          tensors_.add(builderForValue.build());
          onChanged();
        } else {
          tensorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public Builder addTensors(
          int index, onnx.OnnxProto3.TensorProto.Builder builderForValue) {
        if (tensorsBuilder_ == null) {
          ensureTensorsIsMutable();
          tensors_.add(index, builderForValue.build());
          onChanged();
        } else {
          tensorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public Builder addAllTensors(
          java.lang.Iterable<? extends onnx.OnnxProto3.TensorProto> values) {
        if (tensorsBuilder_ == null) {
          ensureTensorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tensors_);
          onChanged();
        } else {
          tensorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public Builder clearTensors() {
        if (tensorsBuilder_ == null) {
          tensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          tensorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public Builder removeTensors(int index) {
        if (tensorsBuilder_ == null) {
          ensureTensorsIsMutable();
          tensors_.remove(index);
          onChanged();
        } else {
          tensorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public onnx.OnnxProto3.TensorProto.Builder getTensorsBuilder(
          int index) {
        return getTensorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public onnx.OnnxProto3.TensorProtoOrBuilder getTensorsOrBuilder(
          int index) {
        if (tensorsBuilder_ == null) {
          return tensors_.get(index);  } else {
          return tensorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.TensorProtoOrBuilder> 
           getTensorsOrBuilderList() {
        if (tensorsBuilder_ != null) {
          return tensorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tensors_);
        }
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public onnx.OnnxProto3.TensorProto.Builder addTensorsBuilder() {
        return getTensorsFieldBuilder().addBuilder(
            onnx.OnnxProto3.TensorProto.getDefaultInstance());
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public onnx.OnnxProto3.TensorProto.Builder addTensorsBuilder(
          int index) {
        return getTensorsFieldBuilder().addBuilder(
            index, onnx.OnnxProto3.TensorProto.getDefaultInstance());
      }
      /**
       * <pre>
       * list of tensors
       * </pre>
       *
       * <code>repeated .onnx.TensorProto tensors = 10;</code>
       */
      public java.util.List<onnx.OnnxProto3.TensorProto.Builder> 
           getTensorsBuilderList() {
        return getTensorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.TensorProto, onnx.OnnxProto3.TensorProto.Builder, onnx.OnnxProto3.TensorProtoOrBuilder> 
          getTensorsFieldBuilder() {
        if (tensorsBuilder_ == null) {
          tensorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxProto3.TensorProto, onnx.OnnxProto3.TensorProto.Builder, onnx.OnnxProto3.TensorProtoOrBuilder>(
                  tensors_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          tensors_ = null;
        }
        return tensorsBuilder_;
      }

      private java.util.List<onnx.OnnxProto3.GraphProto> graphs_ =
        java.util.Collections.emptyList();
      private void ensureGraphsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          graphs_ = new java.util.ArrayList<onnx.OnnxProto3.GraphProto>(graphs_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.GraphProto, onnx.OnnxProto3.GraphProto.Builder, onnx.OnnxProto3.GraphProtoOrBuilder> graphsBuilder_;

      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public java.util.List<onnx.OnnxProto3.GraphProto> getGraphsList() {
        if (graphsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(graphs_);
        } else {
          return graphsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public int getGraphsCount() {
        if (graphsBuilder_ == null) {
          return graphs_.size();
        } else {
          return graphsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public onnx.OnnxProto3.GraphProto getGraphs(int index) {
        if (graphsBuilder_ == null) {
          return graphs_.get(index);
        } else {
          return graphsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public Builder setGraphs(
          int index, onnx.OnnxProto3.GraphProto value) {
        if (graphsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphsIsMutable();
          graphs_.set(index, value);
          onChanged();
        } else {
          graphsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public Builder setGraphs(
          int index, onnx.OnnxProto3.GraphProto.Builder builderForValue) {
        if (graphsBuilder_ == null) {
          ensureGraphsIsMutable();
          graphs_.set(index, builderForValue.build());
          onChanged();
        } else {
          graphsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public Builder addGraphs(onnx.OnnxProto3.GraphProto value) {
        if (graphsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphsIsMutable();
          graphs_.add(value);
          onChanged();
        } else {
          graphsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public Builder addGraphs(
          int index, onnx.OnnxProto3.GraphProto value) {
        if (graphsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphsIsMutable();
          graphs_.add(index, value);
          onChanged();
        } else {
          graphsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public Builder addGraphs(
          onnx.OnnxProto3.GraphProto.Builder builderForValue) {
        if (graphsBuilder_ == null) {
          ensureGraphsIsMutable();
          graphs_.add(builderForValue.build());
          onChanged();
        } else {
          graphsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public Builder addGraphs(
          int index, onnx.OnnxProto3.GraphProto.Builder builderForValue) {
        if (graphsBuilder_ == null) {
          ensureGraphsIsMutable();
          graphs_.add(index, builderForValue.build());
          onChanged();
        } else {
          graphsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public Builder addAllGraphs(
          java.lang.Iterable<? extends onnx.OnnxProto3.GraphProto> values) {
        if (graphsBuilder_ == null) {
          ensureGraphsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphs_);
          onChanged();
        } else {
          graphsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public Builder clearGraphs() {
        if (graphsBuilder_ == null) {
          graphs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          graphsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public Builder removeGraphs(int index) {
        if (graphsBuilder_ == null) {
          ensureGraphsIsMutable();
          graphs_.remove(index);
          onChanged();
        } else {
          graphsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public onnx.OnnxProto3.GraphProto.Builder getGraphsBuilder(
          int index) {
        return getGraphsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public onnx.OnnxProto3.GraphProtoOrBuilder getGraphsOrBuilder(
          int index) {
        if (graphsBuilder_ == null) {
          return graphs_.get(index);  } else {
          return graphsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.GraphProtoOrBuilder> 
           getGraphsOrBuilderList() {
        if (graphsBuilder_ != null) {
          return graphsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(graphs_);
        }
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public onnx.OnnxProto3.GraphProto.Builder addGraphsBuilder() {
        return getGraphsFieldBuilder().addBuilder(
            onnx.OnnxProto3.GraphProto.getDefaultInstance());
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public onnx.OnnxProto3.GraphProto.Builder addGraphsBuilder(
          int index) {
        return getGraphsFieldBuilder().addBuilder(
            index, onnx.OnnxProto3.GraphProto.getDefaultInstance());
      }
      /**
       * <pre>
       * list of graph
       * </pre>
       *
       * <code>repeated .onnx.GraphProto graphs = 11;</code>
       */
      public java.util.List<onnx.OnnxProto3.GraphProto.Builder> 
           getGraphsBuilderList() {
        return getGraphsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.GraphProto, onnx.OnnxProto3.GraphProto.Builder, onnx.OnnxProto3.GraphProtoOrBuilder> 
          getGraphsFieldBuilder() {
        if (graphsBuilder_ == null) {
          graphsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxProto3.GraphProto, onnx.OnnxProto3.GraphProto.Builder, onnx.OnnxProto3.GraphProtoOrBuilder>(
                  graphs_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          graphs_ = null;
        }
        return graphsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:onnx.AttributeProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.AttributeProto)
    private static final onnx.OnnxProto3.AttributeProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxProto3.AttributeProto();
    }

    public static onnx.OnnxProto3.AttributeProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AttributeProto>
        PARSER = new com.google.protobuf.AbstractParser<AttributeProto>() {
      public AttributeProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AttributeProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AttributeProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AttributeProto> getParserForType() {
      return PARSER;
    }

    public onnx.OnnxProto3.AttributeProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ValueInfoProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.ValueInfoProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>string opName = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>string opName = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>.onnx.TypeProto type = 2;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>.onnx.TypeProto type = 2;</code>
     */
    onnx.OnnxProto3.TypeProto getType();
    /**
     * <pre>
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>.onnx.TypeProto type = 2;</code>
     */
    onnx.OnnxProto3.TypeProtoOrBuilder getTypeOrBuilder();

    /**
     * <pre>
     * A human-readable documentation for this value. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 3;</code>
     */
    java.lang.String getDocString();
    /**
     * <pre>
     * A human-readable documentation for this value. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 3;</code>
     */
    com.google.protobuf.ByteString
        getDocStringBytes();
  }
  /**
   * <pre>
   * Defines information on value, including the opName, the type, and
   * the shape of the value.
   * </pre>
   *
   * Protobuf type {@code onnx.ValueInfoProto}
   */
  public  static final class ValueInfoProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.ValueInfoProto)
      ValueInfoProtoOrBuilder {
    // Use ValueInfoProto.newBuilder() to construct.
    private ValueInfoProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ValueInfoProto() {
      name_ = "";
      docString_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ValueInfoProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              onnx.OnnxProto3.TypeProto.Builder subBuilder = null;
              if (type_ != null) {
                subBuilder = type_.toBuilder();
              }
              type_ = input.readMessage(onnx.OnnxProto3.TypeProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type_);
                type_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              docString_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxProto3.internal_static_onnx_ValueInfoProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxProto3.internal_static_onnx_ValueInfoProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxProto3.ValueInfoProto.class, onnx.OnnxProto3.ValueInfoProto.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>string opName = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>string opName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private onnx.OnnxProto3.TypeProto type_;
    /**
     * <pre>
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>.onnx.TypeProto type = 2;</code>
     */
    public boolean hasType() {
      return type_ != null;
    }
    /**
     * <pre>
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>.onnx.TypeProto type = 2;</code>
     */
    public onnx.OnnxProto3.TypeProto getType() {
      return type_ == null ? onnx.OnnxProto3.TypeProto.getDefaultInstance() : type_;
    }
    /**
     * <pre>
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>.onnx.TypeProto type = 2;</code>
     */
    public onnx.OnnxProto3.TypeProtoOrBuilder getTypeOrBuilder() {
      return getType();
    }

    public static final int DOC_STRING_FIELD_NUMBER = 3;
    private volatile java.lang.Object docString_;
    /**
     * <pre>
     * A human-readable documentation for this value. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 3;</code>
     */
    public java.lang.String getDocString() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docString_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A human-readable documentation for this value. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDocStringBytes() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (type_ != null) {
        output.writeMessage(2, getType());
      }
      if (!getDocStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, docString_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (type_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getType());
      }
      if (!getDocStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, docString_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxProto3.ValueInfoProto)) {
        return super.equals(obj);
      }
      onnx.OnnxProto3.ValueInfoProto other = (onnx.OnnxProto3.ValueInfoProto) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && getType()
            .equals(other.getType());
      }
      result = result && getDocString()
          .equals(other.getDocString());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      hash = (37 * hash) + DOC_STRING_FIELD_NUMBER;
      hash = (53 * hash) + getDocString().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxProto3.ValueInfoProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.ValueInfoProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.ValueInfoProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.ValueInfoProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.ValueInfoProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.ValueInfoProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.ValueInfoProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.ValueInfoProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.ValueInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.ValueInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxProto3.ValueInfoProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines information on value, including the opName, the type, and
     * the shape of the value.
     * </pre>
     *
     * Protobuf type {@code onnx.ValueInfoProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.ValueInfoProto)
        onnx.OnnxProto3.ValueInfoProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_ValueInfoProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_ValueInfoProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.ValueInfoProto.class, onnx.OnnxProto3.ValueInfoProto.Builder.class);
      }

      // Construct using onnx.OnnxProto3.ValueInfoProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        if (typeBuilder_ == null) {
          type_ = null;
        } else {
          type_ = null;
          typeBuilder_ = null;
        }
        docString_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxProto3.internal_static_onnx_ValueInfoProto_descriptor;
      }

      public onnx.OnnxProto3.ValueInfoProto getDefaultInstanceForType() {
        return onnx.OnnxProto3.ValueInfoProto.getDefaultInstance();
      }

      public onnx.OnnxProto3.ValueInfoProto build() {
        onnx.OnnxProto3.ValueInfoProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public onnx.OnnxProto3.ValueInfoProto buildPartial() {
        onnx.OnnxProto3.ValueInfoProto result = new onnx.OnnxProto3.ValueInfoProto(this);
        result.name_ = name_;
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        result.docString_ = docString_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxProto3.ValueInfoProto) {
          return mergeFrom((onnx.OnnxProto3.ValueInfoProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxProto3.ValueInfoProto other) {
        if (other == onnx.OnnxProto3.ValueInfoProto.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (!other.getDocString().isEmpty()) {
          docString_ = other.docString_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxProto3.ValueInfoProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxProto3.ValueInfoProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>string opName = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>string opName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>string opName = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>string opName = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>string opName = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private onnx.OnnxProto3.TypeProto type_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.TypeProto, onnx.OnnxProto3.TypeProto.Builder, onnx.OnnxProto3.TypeProtoOrBuilder> typeBuilder_;
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>.onnx.TypeProto type = 2;</code>
       */
      public boolean hasType() {
        return typeBuilder_ != null || type_ != null;
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>.onnx.TypeProto type = 2;</code>
       */
      public onnx.OnnxProto3.TypeProto getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? onnx.OnnxProto3.TypeProto.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>.onnx.TypeProto type = 2;</code>
       */
      public Builder setType(onnx.OnnxProto3.TypeProto value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>.onnx.TypeProto type = 2;</code>
       */
      public Builder setType(
          onnx.OnnxProto3.TypeProto.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>.onnx.TypeProto type = 2;</code>
       */
      public Builder mergeType(onnx.OnnxProto3.TypeProto value) {
        if (typeBuilder_ == null) {
          if (type_ != null) {
            type_ =
              onnx.OnnxProto3.TypeProto.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>.onnx.TypeProto type = 2;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = null;
          onChanged();
        } else {
          type_ = null;
          typeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>.onnx.TypeProto type = 2;</code>
       */
      public onnx.OnnxProto3.TypeProto.Builder getTypeBuilder() {
        
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>.onnx.TypeProto type = 2;</code>
       */
      public onnx.OnnxProto3.TypeProtoOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ?
              onnx.OnnxProto3.TypeProto.getDefaultInstance() : type_;
        }
      }
      /**
       * <pre>
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>.onnx.TypeProto type = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.TypeProto, onnx.OnnxProto3.TypeProto.Builder, onnx.OnnxProto3.TypeProtoOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.OnnxProto3.TypeProto, onnx.OnnxProto3.TypeProto.Builder, onnx.OnnxProto3.TypeProtoOrBuilder>(
                  getType(),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      private java.lang.Object docString_ = "";
      /**
       * <pre>
       * A human-readable documentation for this value. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 3;</code>
       */
      public java.lang.String getDocString() {
        java.lang.Object ref = docString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this value. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDocStringBytes() {
        java.lang.Object ref = docString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this value. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 3;</code>
       */
      public Builder setDocString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this value. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 3;</code>
       */
      public Builder clearDocString() {
        
        docString_ = getDefaultInstance().getDocString();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this value. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 3;</code>
       */
      public Builder setDocStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docString_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:onnx.ValueInfoProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.ValueInfoProto)
    private static final onnx.OnnxProto3.ValueInfoProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxProto3.ValueInfoProto();
    }

    public static onnx.OnnxProto3.ValueInfoProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ValueInfoProto>
        PARSER = new com.google.protobuf.AbstractParser<ValueInfoProto>() {
      public ValueInfoProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ValueInfoProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ValueInfoProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ValueInfoProto> getParserForType() {
      return PARSER;
    }

    public onnx.OnnxProto3.ValueInfoProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.NodeProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string input = 1;</code>
     */
    java.util.List<java.lang.String>
        getInputList();
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string input = 1;</code>
     */
    int getInputCount();
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string input = 1;</code>
     */
    java.lang.String getInput(int index);
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string input = 1;</code>
     */
    com.google.protobuf.ByteString
        getInputBytes(int index);

    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string output = 2;</code>
     */
    java.util.List<java.lang.String>
        getOutputList();
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string output = 2;</code>
     */
    int getOutputCount();
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string output = 2;</code>
     */
    java.lang.String getOutput(int index);
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string output = 2;</code>
     */
    com.google.protobuf.ByteString
        getOutputBytes(int index);

    /**
     * <pre>
     * An optional identifier for this node in a graph.
     * This field MAY be absent in ths version of the IR.
     * </pre>
     *
     * <code>string opName = 3;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * An optional identifier for this node in a graph.
     * This field MAY be absent in ths version of the IR.
     * </pre>
     *
     * <code>string opName = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The symbolic identifier of the Operator to execute.
     * </pre>
     *
     * <code>string op_type = 4;</code>
     */
    java.lang.String getOpType();
    /**
     * <pre>
     * The symbolic identifier of the Operator to execute.
     * </pre>
     *
     * <code>string op_type = 4;</code>
     */
    com.google.protobuf.ByteString
        getOpTypeBytes();

    /**
     * <pre>
     * The domain of the OperatorSet that specifies the operator named by op_type.
     * </pre>
     *
     * <code>string domain = 7;</code>
     */
    java.lang.String getDomain();
    /**
     * <pre>
     * The domain of the OperatorSet that specifies the operator named by op_type.
     * </pre>
     *
     * <code>string domain = 7;</code>
     */
    com.google.protobuf.ByteString
        getDomainBytes();

    /**
     * <pre>
     * Additional named attributes.
     * NOTE: Simply using ValueProto.NameValuePairProto is the most general
     *       solution.  I kept AttributeProto to minimize churn on CI results.
     * </pre>
     *
     * <code>repeated .onnx.AttributeProto attribute = 5;</code>
     */
    java.util.List<onnx.OnnxProto3.AttributeProto> 
        getAttributeList();
    /**
     * <pre>
     * Additional named attributes.
     * NOTE: Simply using ValueProto.NameValuePairProto is the most general
     *       solution.  I kept AttributeProto to minimize churn on CI results.
     * </pre>
     *
     * <code>repeated .onnx.AttributeProto attribute = 5;</code>
     */
    onnx.OnnxProto3.AttributeProto getAttribute(int index);
    /**
     * <pre>
     * Additional named attributes.
     * NOTE: Simply using ValueProto.NameValuePairProto is the most general
     *       solution.  I kept AttributeProto to minimize churn on CI results.
     * </pre>
     *
     * <code>repeated .onnx.AttributeProto attribute = 5;</code>
     */
    int getAttributeCount();
    /**
     * <pre>
     * Additional named attributes.
     * NOTE: Simply using ValueProto.NameValuePairProto is the most general
     *       solution.  I kept AttributeProto to minimize churn on CI results.
     * </pre>
     *
     * <code>repeated .onnx.AttributeProto attribute = 5;</code>
     */
    java.util.List<? extends onnx.OnnxProto3.AttributeProtoOrBuilder> 
        getAttributeOrBuilderList();
    /**
     * <pre>
     * Additional named attributes.
     * NOTE: Simply using ValueProto.NameValuePairProto is the most general
     *       solution.  I kept AttributeProto to minimize churn on CI results.
     * </pre>
     *
     * <code>repeated .onnx.AttributeProto attribute = 5;</code>
     */
    onnx.OnnxProto3.AttributeProtoOrBuilder getAttributeOrBuilder(
        int index);

    /**
     * <pre>
     * A human-readable documentation for this node. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 6;</code>
     */
    java.lang.String getDocString();
    /**
     * <pre>
     * A human-readable documentation for this node. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 6;</code>
     */
    com.google.protobuf.ByteString
        getDocStringBytes();
  }
  /**
   * <pre>
   * NodeProto stores a node that is similar to the notion of "layer"
   * or "operator" in many deep learning frameworks. For example, it can be a
   * node of type "Conv" that takes in an image, a filter tensor and a bias
   * tensor, and produces the convolved output.
   * </pre>
   *
   * Protobuf type {@code onnx.NodeProto}
   */
  public  static final class NodeProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.NodeProto)
      NodeProtoOrBuilder {
    // Use NodeProto.newBuilder() to construct.
    private NodeProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeProto() {
      input_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      output_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      name_ = "";
      opType_ = "";
      domain_ = "";
      attribute_ = java.util.Collections.emptyList();
      docString_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NodeProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                input_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              input_.add(s);
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                output_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              output_.add(s);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              opType_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                attribute_ = new java.util.ArrayList<onnx.OnnxProto3.AttributeProto>();
                mutable_bitField0_ |= 0x00000020;
              }
              attribute_.add(
                  input.readMessage(onnx.OnnxProto3.AttributeProto.parser(), extensionRegistry));
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              docString_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              domain_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          input_ = input_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          output_ = output_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          attribute_ = java.util.Collections.unmodifiableList(attribute_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxProto3.internal_static_onnx_NodeProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxProto3.internal_static_onnx_NodeProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxProto3.NodeProto.class, onnx.OnnxProto3.NodeProto.Builder.class);
    }

    private int bitField0_;
    public static final int INPUT_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList input_;
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string input = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getInputList() {
      return input_;
    }
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string input = 1;</code>
     */
    public int getInputCount() {
      return input_.size();
    }
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string input = 1;</code>
     */
    public java.lang.String getInput(int index) {
      return input_.get(index);
    }
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string input = 1;</code>
     */
    public com.google.protobuf.ByteString
        getInputBytes(int index) {
      return input_.getByteString(index);
    }

    public static final int OUTPUT_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList output_;
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string output = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getOutputList() {
      return output_;
    }
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string output = 2;</code>
     */
    public int getOutputCount() {
      return output_.size();
    }
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string output = 2;</code>
     */
    public java.lang.String getOutput(int index) {
      return output_.get(index);
    }
    /**
     * <pre>
     * namespace Value
     * </pre>
     *
     * <code>repeated string output = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOutputBytes(int index) {
      return output_.getByteString(index);
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * An optional identifier for this node in a graph.
     * This field MAY be absent in ths version of the IR.
     * </pre>
     *
     * <code>string opName = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * An optional identifier for this node in a graph.
     * This field MAY be absent in ths version of the IR.
     * </pre>
     *
     * <code>string opName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OP_TYPE_FIELD_NUMBER = 4;
    private volatile java.lang.Object opType_;
    /**
     * <pre>
     * The symbolic identifier of the Operator to execute.
     * </pre>
     *
     * <code>string op_type = 4;</code>
     */
    public java.lang.String getOpType() {
      java.lang.Object ref = opType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        opType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The symbolic identifier of the Operator to execute.
     * </pre>
     *
     * <code>string op_type = 4;</code>
     */
    public com.google.protobuf.ByteString
        getOpTypeBytes() {
      java.lang.Object ref = opType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        opType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOMAIN_FIELD_NUMBER = 7;
    private volatile java.lang.Object domain_;
    /**
     * <pre>
     * The domain of the OperatorSet that specifies the operator named by op_type.
     * </pre>
     *
     * <code>string domain = 7;</code>
     */
    public java.lang.String getDomain() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domain_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The domain of the OperatorSet that specifies the operator named by op_type.
     * </pre>
     *
     * <code>string domain = 7;</code>
     */
    public com.google.protobuf.ByteString
        getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ATTRIBUTE_FIELD_NUMBER = 5;
    private java.util.List<onnx.OnnxProto3.AttributeProto> attribute_;
    /**
     * <pre>
     * Additional named attributes.
     * NOTE: Simply using ValueProto.NameValuePairProto is the most general
     *       solution.  I kept AttributeProto to minimize churn on CI results.
     * </pre>
     *
     * <code>repeated .onnx.AttributeProto attribute = 5;</code>
     */
    public java.util.List<onnx.OnnxProto3.AttributeProto> getAttributeList() {
      return attribute_;
    }
    /**
     * <pre>
     * Additional named attributes.
     * NOTE: Simply using ValueProto.NameValuePairProto is the most general
     *       solution.  I kept AttributeProto to minimize churn on CI results.
     * </pre>
     *
     * <code>repeated .onnx.AttributeProto attribute = 5;</code>
     */
    public java.util.List<? extends onnx.OnnxProto3.AttributeProtoOrBuilder> 
        getAttributeOrBuilderList() {
      return attribute_;
    }
    /**
     * <pre>
     * Additional named attributes.
     * NOTE: Simply using ValueProto.NameValuePairProto is the most general
     *       solution.  I kept AttributeProto to minimize churn on CI results.
     * </pre>
     *
     * <code>repeated .onnx.AttributeProto attribute = 5;</code>
     */
    public int getAttributeCount() {
      return attribute_.size();
    }
    /**
     * <pre>
     * Additional named attributes.
     * NOTE: Simply using ValueProto.NameValuePairProto is the most general
     *       solution.  I kept AttributeProto to minimize churn on CI results.
     * </pre>
     *
     * <code>repeated .onnx.AttributeProto attribute = 5;</code>
     */
    public onnx.OnnxProto3.AttributeProto getAttribute(int index) {
      return attribute_.get(index);
    }
    /**
     * <pre>
     * Additional named attributes.
     * NOTE: Simply using ValueProto.NameValuePairProto is the most general
     *       solution.  I kept AttributeProto to minimize churn on CI results.
     * </pre>
     *
     * <code>repeated .onnx.AttributeProto attribute = 5;</code>
     */
    public onnx.OnnxProto3.AttributeProtoOrBuilder getAttributeOrBuilder(
        int index) {
      return attribute_.get(index);
    }

    public static final int DOC_STRING_FIELD_NUMBER = 6;
    private volatile java.lang.Object docString_;
    /**
     * <pre>
     * A human-readable documentation for this node. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 6;</code>
     */
    public java.lang.String getDocString() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docString_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A human-readable documentation for this node. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDocStringBytes() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < input_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, input_.getRaw(i));
      }
      for (int i = 0; i < output_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, output_.getRaw(i));
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getOpTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, opType_);
      }
      for (int i = 0; i < attribute_.size(); i++) {
        output.writeMessage(5, attribute_.get(i));
      }
      if (!getDocStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, docString_);
      }
      if (!getDomainBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, domain_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < input_.size(); i++) {
          dataSize += computeStringSizeNoTag(input_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getInputList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < output_.size(); i++) {
          dataSize += computeStringSizeNoTag(output_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getOutputList().size();
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getOpTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, opType_);
      }
      for (int i = 0; i < attribute_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, attribute_.get(i));
      }
      if (!getDocStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, docString_);
      }
      if (!getDomainBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, domain_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxProto3.NodeProto)) {
        return super.equals(obj);
      }
      onnx.OnnxProto3.NodeProto other = (onnx.OnnxProto3.NodeProto) obj;

      boolean result = true;
      result = result && getInputList()
          .equals(other.getInputList());
      result = result && getOutputList()
          .equals(other.getOutputList());
      result = result && getName()
          .equals(other.getName());
      result = result && getOpType()
          .equals(other.getOpType());
      result = result && getDomain()
          .equals(other.getDomain());
      result = result && getAttributeList()
          .equals(other.getAttributeList());
      result = result && getDocString()
          .equals(other.getDocString());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getInputCount() > 0) {
        hash = (37 * hash) + INPUT_FIELD_NUMBER;
        hash = (53 * hash) + getInputList().hashCode();
      }
      if (getOutputCount() > 0) {
        hash = (37 * hash) + OUTPUT_FIELD_NUMBER;
        hash = (53 * hash) + getOutputList().hashCode();
      }
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + OP_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getOpType().hashCode();
      hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getDomain().hashCode();
      if (getAttributeCount() > 0) {
        hash = (37 * hash) + ATTRIBUTE_FIELD_NUMBER;
        hash = (53 * hash) + getAttributeList().hashCode();
      }
      hash = (37 * hash) + DOC_STRING_FIELD_NUMBER;
      hash = (53 * hash) + getDocString().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxProto3.NodeProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.NodeProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.NodeProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.NodeProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.NodeProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.NodeProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.NodeProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.NodeProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.NodeProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.NodeProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxProto3.NodeProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NodeProto stores a node that is similar to the notion of "layer"
     * or "operator" in many deep learning frameworks. For example, it can be a
     * node of type "Conv" that takes in an image, a filter tensor and a bias
     * tensor, and produces the convolved output.
     * </pre>
     *
     * Protobuf type {@code onnx.NodeProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.NodeProto)
        onnx.OnnxProto3.NodeProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_NodeProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_NodeProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.NodeProto.class, onnx.OnnxProto3.NodeProto.Builder.class);
      }

      // Construct using onnx.OnnxProto3.NodeProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAttributeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        input_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        output_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";

        opType_ = "";

        domain_ = "";

        if (attributeBuilder_ == null) {
          attribute_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          attributeBuilder_.clear();
        }
        docString_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxProto3.internal_static_onnx_NodeProto_descriptor;
      }

      public onnx.OnnxProto3.NodeProto getDefaultInstanceForType() {
        return onnx.OnnxProto3.NodeProto.getDefaultInstance();
      }

      public onnx.OnnxProto3.NodeProto build() {
        onnx.OnnxProto3.NodeProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public onnx.OnnxProto3.NodeProto buildPartial() {
        onnx.OnnxProto3.NodeProto result = new onnx.OnnxProto3.NodeProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          input_ = input_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.input_ = input_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output_ = output_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.output_ = output_;
        result.name_ = name_;
        result.opType_ = opType_;
        result.domain_ = domain_;
        if (attributeBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            attribute_ = java.util.Collections.unmodifiableList(attribute_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.attribute_ = attribute_;
        } else {
          result.attribute_ = attributeBuilder_.build();
        }
        result.docString_ = docString_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxProto3.NodeProto) {
          return mergeFrom((onnx.OnnxProto3.NodeProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxProto3.NodeProto other) {
        if (other == onnx.OnnxProto3.NodeProto.getDefaultInstance()) return this;
        if (!other.input_.isEmpty()) {
          if (input_.isEmpty()) {
            input_ = other.input_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInputIsMutable();
            input_.addAll(other.input_);
          }
          onChanged();
        }
        if (!other.output_.isEmpty()) {
          if (output_.isEmpty()) {
            output_ = other.output_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureOutputIsMutable();
            output_.addAll(other.output_);
          }
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getOpType().isEmpty()) {
          opType_ = other.opType_;
          onChanged();
        }
        if (!other.getDomain().isEmpty()) {
          domain_ = other.domain_;
          onChanged();
        }
        if (attributeBuilder_ == null) {
          if (!other.attribute_.isEmpty()) {
            if (attribute_.isEmpty()) {
              attribute_ = other.attribute_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureAttributeIsMutable();
              attribute_.addAll(other.attribute_);
            }
            onChanged();
          }
        } else {
          if (!other.attribute_.isEmpty()) {
            if (attributeBuilder_.isEmpty()) {
              attributeBuilder_.dispose();
              attributeBuilder_ = null;
              attribute_ = other.attribute_;
              bitField0_ = (bitField0_ & ~0x00000020);
              attributeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAttributeFieldBuilder() : null;
            } else {
              attributeBuilder_.addAllMessages(other.attribute_);
            }
          }
        }
        if (!other.getDocString().isEmpty()) {
          docString_ = other.docString_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxProto3.NodeProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxProto3.NodeProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList input_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureInputIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          input_ = new com.google.protobuf.LazyStringArrayList(input_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string input = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getInputList() {
        return input_.getUnmodifiableView();
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string input = 1;</code>
       */
      public int getInputCount() {
        return input_.size();
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string input = 1;</code>
       */
      public java.lang.String getInput(int index) {
        return input_.get(index);
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string input = 1;</code>
       */
      public com.google.protobuf.ByteString
          getInputBytes(int index) {
        return input_.getByteString(index);
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string input = 1;</code>
       */
      public Builder setInput(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInputIsMutable();
        input_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string input = 1;</code>
       */
      public Builder addInput(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInputIsMutable();
        input_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string input = 1;</code>
       */
      public Builder addAllInput(
          java.lang.Iterable<java.lang.String> values) {
        ensureInputIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, input_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string input = 1;</code>
       */
      public Builder clearInput() {
        input_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string input = 1;</code>
       */
      public Builder addInputBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureInputIsMutable();
        input_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList output_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureOutputIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          output_ = new com.google.protobuf.LazyStringArrayList(output_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string output = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getOutputList() {
        return output_.getUnmodifiableView();
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string output = 2;</code>
       */
      public int getOutputCount() {
        return output_.size();
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string output = 2;</code>
       */
      public java.lang.String getOutput(int index) {
        return output_.get(index);
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string output = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOutputBytes(int index) {
        return output_.getByteString(index);
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string output = 2;</code>
       */
      public Builder setOutput(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputIsMutable();
        output_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string output = 2;</code>
       */
      public Builder addOutput(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputIsMutable();
        output_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string output = 2;</code>
       */
      public Builder addAllOutput(
          java.lang.Iterable<java.lang.String> values) {
        ensureOutputIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, output_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string output = 2;</code>
       */
      public Builder clearOutput() {
        output_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespace Value
       * </pre>
       *
       * <code>repeated string output = 2;</code>
       */
      public Builder addOutputBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureOutputIsMutable();
        output_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * An optional identifier for this node in a graph.
       * This field MAY be absent in ths version of the IR.
       * </pre>
       *
       * <code>string opName = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An optional identifier for this node in a graph.
       * This field MAY be absent in ths version of the IR.
       * </pre>
       *
       * <code>string opName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An optional identifier for this node in a graph.
       * This field MAY be absent in ths version of the IR.
       * </pre>
       *
       * <code>string opName = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional identifier for this node in a graph.
       * This field MAY be absent in ths version of the IR.
       * </pre>
       *
       * <code>string opName = 3;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional identifier for this node in a graph.
       * This field MAY be absent in ths version of the IR.
       * </pre>
       *
       * <code>string opName = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object opType_ = "";
      /**
       * <pre>
       * The symbolic identifier of the Operator to execute.
       * </pre>
       *
       * <code>string op_type = 4;</code>
       */
      public java.lang.String getOpType() {
        java.lang.Object ref = opType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          opType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The symbolic identifier of the Operator to execute.
       * </pre>
       *
       * <code>string op_type = 4;</code>
       */
      public com.google.protobuf.ByteString
          getOpTypeBytes() {
        java.lang.Object ref = opType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          opType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The symbolic identifier of the Operator to execute.
       * </pre>
       *
       * <code>string op_type = 4;</code>
       */
      public Builder setOpType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        opType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbolic identifier of the Operator to execute.
       * </pre>
       *
       * <code>string op_type = 4;</code>
       */
      public Builder clearOpType() {
        
        opType_ = getDefaultInstance().getOpType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The symbolic identifier of the Operator to execute.
       * </pre>
       *
       * <code>string op_type = 4;</code>
       */
      public Builder setOpTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        opType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object domain_ = "";
      /**
       * <pre>
       * The domain of the OperatorSet that specifies the operator named by op_type.
       * </pre>
       *
       * <code>string domain = 7;</code>
       */
      public java.lang.String getDomain() {
        java.lang.Object ref = domain_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          domain_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The domain of the OperatorSet that specifies the operator named by op_type.
       * </pre>
       *
       * <code>string domain = 7;</code>
       */
      public com.google.protobuf.ByteString
          getDomainBytes() {
        java.lang.Object ref = domain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          domain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The domain of the OperatorSet that specifies the operator named by op_type.
       * </pre>
       *
       * <code>string domain = 7;</code>
       */
      public Builder setDomain(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        domain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The domain of the OperatorSet that specifies the operator named by op_type.
       * </pre>
       *
       * <code>string domain = 7;</code>
       */
      public Builder clearDomain() {
        
        domain_ = getDefaultInstance().getDomain();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The domain of the OperatorSet that specifies the operator named by op_type.
       * </pre>
       *
       * <code>string domain = 7;</code>
       */
      public Builder setDomainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        domain_ = value;
        onChanged();
        return this;
      }

      private java.util.List<onnx.OnnxProto3.AttributeProto> attribute_ =
        java.util.Collections.emptyList();
      private void ensureAttributeIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          attribute_ = new java.util.ArrayList<onnx.OnnxProto3.AttributeProto>(attribute_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.AttributeProto, onnx.OnnxProto3.AttributeProto.Builder, onnx.OnnxProto3.AttributeProtoOrBuilder> attributeBuilder_;

      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public java.util.List<onnx.OnnxProto3.AttributeProto> getAttributeList() {
        if (attributeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attribute_);
        } else {
          return attributeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public int getAttributeCount() {
        if (attributeBuilder_ == null) {
          return attribute_.size();
        } else {
          return attributeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public onnx.OnnxProto3.AttributeProto getAttribute(int index) {
        if (attributeBuilder_ == null) {
          return attribute_.get(index);
        } else {
          return attributeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public Builder setAttribute(
          int index, onnx.OnnxProto3.AttributeProto value) {
        if (attributeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributeIsMutable();
          attribute_.set(index, value);
          onChanged();
        } else {
          attributeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public Builder setAttribute(
          int index, onnx.OnnxProto3.AttributeProto.Builder builderForValue) {
        if (attributeBuilder_ == null) {
          ensureAttributeIsMutable();
          attribute_.set(index, builderForValue.build());
          onChanged();
        } else {
          attributeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public Builder addAttribute(onnx.OnnxProto3.AttributeProto value) {
        if (attributeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributeIsMutable();
          attribute_.add(value);
          onChanged();
        } else {
          attributeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public Builder addAttribute(
          int index, onnx.OnnxProto3.AttributeProto value) {
        if (attributeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttributeIsMutable();
          attribute_.add(index, value);
          onChanged();
        } else {
          attributeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public Builder addAttribute(
          onnx.OnnxProto3.AttributeProto.Builder builderForValue) {
        if (attributeBuilder_ == null) {
          ensureAttributeIsMutable();
          attribute_.add(builderForValue.build());
          onChanged();
        } else {
          attributeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public Builder addAttribute(
          int index, onnx.OnnxProto3.AttributeProto.Builder builderForValue) {
        if (attributeBuilder_ == null) {
          ensureAttributeIsMutable();
          attribute_.add(index, builderForValue.build());
          onChanged();
        } else {
          attributeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public Builder addAllAttribute(
          java.lang.Iterable<? extends onnx.OnnxProto3.AttributeProto> values) {
        if (attributeBuilder_ == null) {
          ensureAttributeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, attribute_);
          onChanged();
        } else {
          attributeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public Builder clearAttribute() {
        if (attributeBuilder_ == null) {
          attribute_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          attributeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public Builder removeAttribute(int index) {
        if (attributeBuilder_ == null) {
          ensureAttributeIsMutable();
          attribute_.remove(index);
          onChanged();
        } else {
          attributeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public onnx.OnnxProto3.AttributeProto.Builder getAttributeBuilder(
          int index) {
        return getAttributeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public onnx.OnnxProto3.AttributeProtoOrBuilder getAttributeOrBuilder(
          int index) {
        if (attributeBuilder_ == null) {
          return attribute_.get(index);  } else {
          return attributeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.AttributeProtoOrBuilder> 
           getAttributeOrBuilderList() {
        if (attributeBuilder_ != null) {
          return attributeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attribute_);
        }
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public onnx.OnnxProto3.AttributeProto.Builder addAttributeBuilder() {
        return getAttributeFieldBuilder().addBuilder(
            onnx.OnnxProto3.AttributeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public onnx.OnnxProto3.AttributeProto.Builder addAttributeBuilder(
          int index) {
        return getAttributeFieldBuilder().addBuilder(
            index, onnx.OnnxProto3.AttributeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Additional named attributes.
       * NOTE: Simply using ValueProto.NameValuePairProto is the most general
       *       solution.  I kept AttributeProto to minimize churn on CI results.
       * </pre>
       *
       * <code>repeated .onnx.AttributeProto attribute = 5;</code>
       */
      public java.util.List<onnx.OnnxProto3.AttributeProto.Builder> 
           getAttributeBuilderList() {
        return getAttributeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.AttributeProto, onnx.OnnxProto3.AttributeProto.Builder, onnx.OnnxProto3.AttributeProtoOrBuilder> 
          getAttributeFieldBuilder() {
        if (attributeBuilder_ == null) {
          attributeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxProto3.AttributeProto, onnx.OnnxProto3.AttributeProto.Builder, onnx.OnnxProto3.AttributeProtoOrBuilder>(
                  attribute_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          attribute_ = null;
        }
        return attributeBuilder_;
      }

      private java.lang.Object docString_ = "";
      /**
       * <pre>
       * A human-readable documentation for this node. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 6;</code>
       */
      public java.lang.String getDocString() {
        java.lang.Object ref = docString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this node. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDocStringBytes() {
        java.lang.Object ref = docString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this node. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 6;</code>
       */
      public Builder setDocString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this node. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 6;</code>
       */
      public Builder clearDocString() {
        
        docString_ = getDefaultInstance().getDocString();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this node. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 6;</code>
       */
      public Builder setDocStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docString_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:onnx.NodeProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.NodeProto)
    private static final onnx.OnnxProto3.NodeProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxProto3.NodeProto();
    }

    public static onnx.OnnxProto3.NodeProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeProto>
        PARSER = new com.google.protobuf.AbstractParser<NodeProto>() {
      public NodeProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodeProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeProto> getParserForType() {
      return PARSER;
    }

    public onnx.OnnxProto3.NodeProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ModelProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.ModelProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The version of the IR this model targets. See Version enum above.
     * This field MUST be present.
     * </pre>
     *
     * <code>int64 ir_version = 1;</code>
     */
    long getIrVersion();

    /**
     * <pre>
     * The OperatorSets this model relies on.
     * All ModelProtos MUST have at least one entry that
     * specifies which version of the ONNX OperatorSet is
     * being imported.
     * All nodes in the ModelProto's graph will bind against the operator
     * with the same-domain/same-op_type operator with the HIGHEST version
     * in the referenced operator sets.
     * </pre>
     *
     * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
     */
    java.util.List<onnx.OnnxProto3.OperatorSetIdProto> 
        getOpsetImportList();
    /**
     * <pre>
     * The OperatorSets this model relies on.
     * All ModelProtos MUST have at least one entry that
     * specifies which version of the ONNX OperatorSet is
     * being imported.
     * All nodes in the ModelProto's graph will bind against the operator
     * with the same-domain/same-op_type operator with the HIGHEST version
     * in the referenced operator sets.
     * </pre>
     *
     * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
     */
    onnx.OnnxProto3.OperatorSetIdProto getOpsetImport(int index);
    /**
     * <pre>
     * The OperatorSets this model relies on.
     * All ModelProtos MUST have at least one entry that
     * specifies which version of the ONNX OperatorSet is
     * being imported.
     * All nodes in the ModelProto's graph will bind against the operator
     * with the same-domain/same-op_type operator with the HIGHEST version
     * in the referenced operator sets.
     * </pre>
     *
     * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
     */
    int getOpsetImportCount();
    /**
     * <pre>
     * The OperatorSets this model relies on.
     * All ModelProtos MUST have at least one entry that
     * specifies which version of the ONNX OperatorSet is
     * being imported.
     * All nodes in the ModelProto's graph will bind against the operator
     * with the same-domain/same-op_type operator with the HIGHEST version
     * in the referenced operator sets.
     * </pre>
     *
     * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
     */
    java.util.List<? extends onnx.OnnxProto3.OperatorSetIdProtoOrBuilder> 
        getOpsetImportOrBuilderList();
    /**
     * <pre>
     * The OperatorSets this model relies on.
     * All ModelProtos MUST have at least one entry that
     * specifies which version of the ONNX OperatorSet is
     * being imported.
     * All nodes in the ModelProto's graph will bind against the operator
     * with the same-domain/same-op_type operator with the HIGHEST version
     * in the referenced operator sets.
     * </pre>
     *
     * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
     */
    onnx.OnnxProto3.OperatorSetIdProtoOrBuilder getOpsetImportOrBuilder(
        int index);

    /**
     * <pre>
     * The opName of the framework or tool used to generate this model.
     * This field SHOULD be present to indicate which implementation/tool/framework
     * emitted the model.
     * </pre>
     *
     * <code>string producer_name = 2;</code>
     */
    java.lang.String getProducerName();
    /**
     * <pre>
     * The opName of the framework or tool used to generate this model.
     * This field SHOULD be present to indicate which implementation/tool/framework
     * emitted the model.
     * </pre>
     *
     * <code>string producer_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getProducerNameBytes();

    /**
     * <pre>
     * The version of the framework or tool used to generate this model.
     * This field SHOULD be present to indicate which implementation/tool/framework
     * emitted the model.
     * </pre>
     *
     * <code>string producer_version = 3;</code>
     */
    java.lang.String getProducerVersion();
    /**
     * <pre>
     * The version of the framework or tool used to generate this model.
     * This field SHOULD be present to indicate which implementation/tool/framework
     * emitted the model.
     * </pre>
     *
     * <code>string producer_version = 3;</code>
     */
    com.google.protobuf.ByteString
        getProducerVersionBytes();

    /**
     * <pre>
     * Domain opName of the model.
     * We use reverse domain names as opName space indicators. For example:
     * `com.facebook.fair` or `com.microsoft.cognitiveservices`
     * Together with `model_version` and GraphProto.opName, this forms the unique identity of
     * the graph.
     * </pre>
     *
     * <code>string domain = 4;</code>
     */
    java.lang.String getDomain();
    /**
     * <pre>
     * Domain opName of the model.
     * We use reverse domain names as opName space indicators. For example:
     * `com.facebook.fair` or `com.microsoft.cognitiveservices`
     * Together with `model_version` and GraphProto.opName, this forms the unique identity of
     * the graph.
     * </pre>
     *
     * <code>string domain = 4;</code>
     */
    com.google.protobuf.ByteString
        getDomainBytes();

    /**
     * <pre>
     * The version of the graph encoded. See Version enum below.
     * </pre>
     *
     * <code>int64 model_version = 5;</code>
     */
    long getModelVersion();

    /**
     * <pre>
     * A human-readable documentation for this model. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 6;</code>
     */
    java.lang.String getDocString();
    /**
     * <pre>
     * A human-readable documentation for this model. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 6;</code>
     */
    com.google.protobuf.ByteString
        getDocStringBytes();

    /**
     * <pre>
     * The parameterized graph that is evaluated to execute the model.
     * </pre>
     *
     * <code>.onnx.GraphProto graph = 7;</code>
     */
    boolean hasGraph();
    /**
     * <pre>
     * The parameterized graph that is evaluated to execute the model.
     * </pre>
     *
     * <code>.onnx.GraphProto graph = 7;</code>
     */
    onnx.OnnxProto3.GraphProto getGraph();
    /**
     * <pre>
     * The parameterized graph that is evaluated to execute the model.
     * </pre>
     *
     * <code>.onnx.GraphProto graph = 7;</code>
     */
    onnx.OnnxProto3.GraphProtoOrBuilder getGraphOrBuilder();

    /**
     * <pre>
     * Named metadata values; keys should be distinct.
     * </pre>
     *
     * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
     */
    java.util.List<onnx.OnnxProto3.StringStringEntryProto> 
        getMetadataPropsList();
    /**
     * <pre>
     * Named metadata values; keys should be distinct.
     * </pre>
     *
     * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
     */
    onnx.OnnxProto3.StringStringEntryProto getMetadataProps(int index);
    /**
     * <pre>
     * Named metadata values; keys should be distinct.
     * </pre>
     *
     * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
     */
    int getMetadataPropsCount();
    /**
     * <pre>
     * Named metadata values; keys should be distinct.
     * </pre>
     *
     * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
     */
    java.util.List<? extends onnx.OnnxProto3.StringStringEntryProtoOrBuilder> 
        getMetadataPropsOrBuilderList();
    /**
     * <pre>
     * Named metadata values; keys should be distinct.
     * </pre>
     *
     * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
     */
    onnx.OnnxProto3.StringStringEntryProtoOrBuilder getMetadataPropsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * ModelProto is a top-level file/container format for bundling a ML model.
   * The semantics of the model are described by the GraphProto that represents
   * a parameterized computation graph against a set of named operators that are
   * defined independently from the graph.
   * </pre>
   *
   * Protobuf type {@code onnx.ModelProto}
   */
  public  static final class ModelProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.ModelProto)
      ModelProtoOrBuilder {
    // Use ModelProto.newBuilder() to construct.
    private ModelProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ModelProto() {
      irVersion_ = 0L;
      opsetImport_ = java.util.Collections.emptyList();
      producerName_ = "";
      producerVersion_ = "";
      domain_ = "";
      modelVersion_ = 0L;
      docString_ = "";
      metadataProps_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ModelProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              irVersion_ = input.readInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              producerName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              producerVersion_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              domain_ = s;
              break;
            }
            case 40: {

              modelVersion_ = input.readInt64();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              docString_ = s;
              break;
            }
            case 58: {
              onnx.OnnxProto3.GraphProto.Builder subBuilder = null;
              if (graph_ != null) {
                subBuilder = graph_.toBuilder();
              }
              graph_ = input.readMessage(onnx.OnnxProto3.GraphProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(graph_);
                graph_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                opsetImport_ = new java.util.ArrayList<onnx.OnnxProto3.OperatorSetIdProto>();
                mutable_bitField0_ |= 0x00000002;
              }
              opsetImport_.add(
                  input.readMessage(onnx.OnnxProto3.OperatorSetIdProto.parser(), extensionRegistry));
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                metadataProps_ = new java.util.ArrayList<onnx.OnnxProto3.StringStringEntryProto>();
                mutable_bitField0_ |= 0x00000100;
              }
              metadataProps_.add(
                  input.readMessage(onnx.OnnxProto3.StringStringEntryProto.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          opsetImport_ = java.util.Collections.unmodifiableList(opsetImport_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          metadataProps_ = java.util.Collections.unmodifiableList(metadataProps_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxProto3.internal_static_onnx_ModelProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxProto3.internal_static_onnx_ModelProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxProto3.ModelProto.class, onnx.OnnxProto3.ModelProto.Builder.class);
    }

    private int bitField0_;
    public static final int IR_VERSION_FIELD_NUMBER = 1;
    private long irVersion_;
    /**
     * <pre>
     * The version of the IR this model targets. See Version enum above.
     * This field MUST be present.
     * </pre>
     *
     * <code>int64 ir_version = 1;</code>
     */
    public long getIrVersion() {
      return irVersion_;
    }

    public static final int OPSET_IMPORT_FIELD_NUMBER = 8;
    private java.util.List<onnx.OnnxProto3.OperatorSetIdProto> opsetImport_;
    /**
     * <pre>
     * The OperatorSets this model relies on.
     * All ModelProtos MUST have at least one entry that
     * specifies which version of the ONNX OperatorSet is
     * being imported.
     * All nodes in the ModelProto's graph will bind against the operator
     * with the same-domain/same-op_type operator with the HIGHEST version
     * in the referenced operator sets.
     * </pre>
     *
     * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
     */
    public java.util.List<onnx.OnnxProto3.OperatorSetIdProto> getOpsetImportList() {
      return opsetImport_;
    }
    /**
     * <pre>
     * The OperatorSets this model relies on.
     * All ModelProtos MUST have at least one entry that
     * specifies which version of the ONNX OperatorSet is
     * being imported.
     * All nodes in the ModelProto's graph will bind against the operator
     * with the same-domain/same-op_type operator with the HIGHEST version
     * in the referenced operator sets.
     * </pre>
     *
     * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
     */
    public java.util.List<? extends onnx.OnnxProto3.OperatorSetIdProtoOrBuilder> 
        getOpsetImportOrBuilderList() {
      return opsetImport_;
    }
    /**
     * <pre>
     * The OperatorSets this model relies on.
     * All ModelProtos MUST have at least one entry that
     * specifies which version of the ONNX OperatorSet is
     * being imported.
     * All nodes in the ModelProto's graph will bind against the operator
     * with the same-domain/same-op_type operator with the HIGHEST version
     * in the referenced operator sets.
     * </pre>
     *
     * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
     */
    public int getOpsetImportCount() {
      return opsetImport_.size();
    }
    /**
     * <pre>
     * The OperatorSets this model relies on.
     * All ModelProtos MUST have at least one entry that
     * specifies which version of the ONNX OperatorSet is
     * being imported.
     * All nodes in the ModelProto's graph will bind against the operator
     * with the same-domain/same-op_type operator with the HIGHEST version
     * in the referenced operator sets.
     * </pre>
     *
     * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
     */
    public onnx.OnnxProto3.OperatorSetIdProto getOpsetImport(int index) {
      return opsetImport_.get(index);
    }
    /**
     * <pre>
     * The OperatorSets this model relies on.
     * All ModelProtos MUST have at least one entry that
     * specifies which version of the ONNX OperatorSet is
     * being imported.
     * All nodes in the ModelProto's graph will bind against the operator
     * with the same-domain/same-op_type operator with the HIGHEST version
     * in the referenced operator sets.
     * </pre>
     *
     * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
     */
    public onnx.OnnxProto3.OperatorSetIdProtoOrBuilder getOpsetImportOrBuilder(
        int index) {
      return opsetImport_.get(index);
    }

    public static final int PRODUCER_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object producerName_;
    /**
     * <pre>
     * The opName of the framework or tool used to generate this model.
     * This field SHOULD be present to indicate which implementation/tool/framework
     * emitted the model.
     * </pre>
     *
     * <code>string producer_name = 2;</code>
     */
    public java.lang.String getProducerName() {
      java.lang.Object ref = producerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        producerName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The opName of the framework or tool used to generate this model.
     * This field SHOULD be present to indicate which implementation/tool/framework
     * emitted the model.
     * </pre>
     *
     * <code>string producer_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getProducerNameBytes() {
      java.lang.Object ref = producerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        producerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRODUCER_VERSION_FIELD_NUMBER = 3;
    private volatile java.lang.Object producerVersion_;
    /**
     * <pre>
     * The version of the framework or tool used to generate this model.
     * This field SHOULD be present to indicate which implementation/tool/framework
     * emitted the model.
     * </pre>
     *
     * <code>string producer_version = 3;</code>
     */
    public java.lang.String getProducerVersion() {
      java.lang.Object ref = producerVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        producerVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The version of the framework or tool used to generate this model.
     * This field SHOULD be present to indicate which implementation/tool/framework
     * emitted the model.
     * </pre>
     *
     * <code>string producer_version = 3;</code>
     */
    public com.google.protobuf.ByteString
        getProducerVersionBytes() {
      java.lang.Object ref = producerVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        producerVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOMAIN_FIELD_NUMBER = 4;
    private volatile java.lang.Object domain_;
    /**
     * <pre>
     * Domain opName of the model.
     * We use reverse domain names as opName space indicators. For example:
     * `com.facebook.fair` or `com.microsoft.cognitiveservices`
     * Together with `model_version` and GraphProto.opName, this forms the unique identity of
     * the graph.
     * </pre>
     *
     * <code>string domain = 4;</code>
     */
    public java.lang.String getDomain() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domain_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Domain opName of the model.
     * We use reverse domain names as opName space indicators. For example:
     * `com.facebook.fair` or `com.microsoft.cognitiveservices`
     * Together with `model_version` and GraphProto.opName, this forms the unique identity of
     * the graph.
     * </pre>
     *
     * <code>string domain = 4;</code>
     */
    public com.google.protobuf.ByteString
        getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODEL_VERSION_FIELD_NUMBER = 5;
    private long modelVersion_;
    /**
     * <pre>
     * The version of the graph encoded. See Version enum below.
     * </pre>
     *
     * <code>int64 model_version = 5;</code>
     */
    public long getModelVersion() {
      return modelVersion_;
    }

    public static final int DOC_STRING_FIELD_NUMBER = 6;
    private volatile java.lang.Object docString_;
    /**
     * <pre>
     * A human-readable documentation for this model. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 6;</code>
     */
    public java.lang.String getDocString() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docString_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A human-readable documentation for this model. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDocStringBytes() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GRAPH_FIELD_NUMBER = 7;
    private onnx.OnnxProto3.GraphProto graph_;
    /**
     * <pre>
     * The parameterized graph that is evaluated to execute the model.
     * </pre>
     *
     * <code>.onnx.GraphProto graph = 7;</code>
     */
    public boolean hasGraph() {
      return graph_ != null;
    }
    /**
     * <pre>
     * The parameterized graph that is evaluated to execute the model.
     * </pre>
     *
     * <code>.onnx.GraphProto graph = 7;</code>
     */
    public onnx.OnnxProto3.GraphProto getGraph() {
      return graph_ == null ? onnx.OnnxProto3.GraphProto.getDefaultInstance() : graph_;
    }
    /**
     * <pre>
     * The parameterized graph that is evaluated to execute the model.
     * </pre>
     *
     * <code>.onnx.GraphProto graph = 7;</code>
     */
    public onnx.OnnxProto3.GraphProtoOrBuilder getGraphOrBuilder() {
      return getGraph();
    }

    public static final int METADATA_PROPS_FIELD_NUMBER = 14;
    private java.util.List<onnx.OnnxProto3.StringStringEntryProto> metadataProps_;
    /**
     * <pre>
     * Named metadata values; keys should be distinct.
     * </pre>
     *
     * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
     */
    public java.util.List<onnx.OnnxProto3.StringStringEntryProto> getMetadataPropsList() {
      return metadataProps_;
    }
    /**
     * <pre>
     * Named metadata values; keys should be distinct.
     * </pre>
     *
     * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
     */
    public java.util.List<? extends onnx.OnnxProto3.StringStringEntryProtoOrBuilder> 
        getMetadataPropsOrBuilderList() {
      return metadataProps_;
    }
    /**
     * <pre>
     * Named metadata values; keys should be distinct.
     * </pre>
     *
     * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
     */
    public int getMetadataPropsCount() {
      return metadataProps_.size();
    }
    /**
     * <pre>
     * Named metadata values; keys should be distinct.
     * </pre>
     *
     * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
     */
    public onnx.OnnxProto3.StringStringEntryProto getMetadataProps(int index) {
      return metadataProps_.get(index);
    }
    /**
     * <pre>
     * Named metadata values; keys should be distinct.
     * </pre>
     *
     * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
     */
    public onnx.OnnxProto3.StringStringEntryProtoOrBuilder getMetadataPropsOrBuilder(
        int index) {
      return metadataProps_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (irVersion_ != 0L) {
        output.writeInt64(1, irVersion_);
      }
      if (!getProducerNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, producerName_);
      }
      if (!getProducerVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, producerVersion_);
      }
      if (!getDomainBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, domain_);
      }
      if (modelVersion_ != 0L) {
        output.writeInt64(5, modelVersion_);
      }
      if (!getDocStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, docString_);
      }
      if (graph_ != null) {
        output.writeMessage(7, getGraph());
      }
      for (int i = 0; i < opsetImport_.size(); i++) {
        output.writeMessage(8, opsetImport_.get(i));
      }
      for (int i = 0; i < metadataProps_.size(); i++) {
        output.writeMessage(14, metadataProps_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (irVersion_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, irVersion_);
      }
      if (!getProducerNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, producerName_);
      }
      if (!getProducerVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, producerVersion_);
      }
      if (!getDomainBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, domain_);
      }
      if (modelVersion_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, modelVersion_);
      }
      if (!getDocStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, docString_);
      }
      if (graph_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getGraph());
      }
      for (int i = 0; i < opsetImport_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, opsetImport_.get(i));
      }
      for (int i = 0; i < metadataProps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, metadataProps_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxProto3.ModelProto)) {
        return super.equals(obj);
      }
      onnx.OnnxProto3.ModelProto other = (onnx.OnnxProto3.ModelProto) obj;

      boolean result = true;
      result = result && (getIrVersion()
          == other.getIrVersion());
      result = result && getOpsetImportList()
          .equals(other.getOpsetImportList());
      result = result && getProducerName()
          .equals(other.getProducerName());
      result = result && getProducerVersion()
          .equals(other.getProducerVersion());
      result = result && getDomain()
          .equals(other.getDomain());
      result = result && (getModelVersion()
          == other.getModelVersion());
      result = result && getDocString()
          .equals(other.getDocString());
      result = result && (hasGraph() == other.hasGraph());
      if (hasGraph()) {
        result = result && getGraph()
            .equals(other.getGraph());
      }
      result = result && getMetadataPropsList()
          .equals(other.getMetadataPropsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IR_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIrVersion());
      if (getOpsetImportCount() > 0) {
        hash = (37 * hash) + OPSET_IMPORT_FIELD_NUMBER;
        hash = (53 * hash) + getOpsetImportList().hashCode();
      }
      hash = (37 * hash) + PRODUCER_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getProducerName().hashCode();
      hash = (37 * hash) + PRODUCER_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getProducerVersion().hashCode();
      hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getDomain().hashCode();
      hash = (37 * hash) + MODEL_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getModelVersion());
      hash = (37 * hash) + DOC_STRING_FIELD_NUMBER;
      hash = (53 * hash) + getDocString().hashCode();
      if (hasGraph()) {
        hash = (37 * hash) + GRAPH_FIELD_NUMBER;
        hash = (53 * hash) + getGraph().hashCode();
      }
      if (getMetadataPropsCount() > 0) {
        hash = (37 * hash) + METADATA_PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getMetadataPropsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxProto3.ModelProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.ModelProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.ModelProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.ModelProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.ModelProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.ModelProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.ModelProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.ModelProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.ModelProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.ModelProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxProto3.ModelProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ModelProto is a top-level file/container format for bundling a ML model.
     * The semantics of the model are described by the GraphProto that represents
     * a parameterized computation graph against a set of named operators that are
     * defined independently from the graph.
     * </pre>
     *
     * Protobuf type {@code onnx.ModelProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.ModelProto)
        onnx.OnnxProto3.ModelProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_ModelProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_ModelProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.ModelProto.class, onnx.OnnxProto3.ModelProto.Builder.class);
      }

      // Construct using onnx.OnnxProto3.ModelProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOpsetImportFieldBuilder();
          getMetadataPropsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        irVersion_ = 0L;

        if (opsetImportBuilder_ == null) {
          opsetImport_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          opsetImportBuilder_.clear();
        }
        producerName_ = "";

        producerVersion_ = "";

        domain_ = "";

        modelVersion_ = 0L;

        docString_ = "";

        if (graphBuilder_ == null) {
          graph_ = null;
        } else {
          graph_ = null;
          graphBuilder_ = null;
        }
        if (metadataPropsBuilder_ == null) {
          metadataProps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          metadataPropsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxProto3.internal_static_onnx_ModelProto_descriptor;
      }

      public onnx.OnnxProto3.ModelProto getDefaultInstanceForType() {
        return onnx.OnnxProto3.ModelProto.getDefaultInstance();
      }

      public onnx.OnnxProto3.ModelProto build() {
        onnx.OnnxProto3.ModelProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public onnx.OnnxProto3.ModelProto buildPartial() {
        onnx.OnnxProto3.ModelProto result = new onnx.OnnxProto3.ModelProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.irVersion_ = irVersion_;
        if (opsetImportBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            opsetImport_ = java.util.Collections.unmodifiableList(opsetImport_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.opsetImport_ = opsetImport_;
        } else {
          result.opsetImport_ = opsetImportBuilder_.build();
        }
        result.producerName_ = producerName_;
        result.producerVersion_ = producerVersion_;
        result.domain_ = domain_;
        result.modelVersion_ = modelVersion_;
        result.docString_ = docString_;
        if (graphBuilder_ == null) {
          result.graph_ = graph_;
        } else {
          result.graph_ = graphBuilder_.build();
        }
        if (metadataPropsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            metadataProps_ = java.util.Collections.unmodifiableList(metadataProps_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.metadataProps_ = metadataProps_;
        } else {
          result.metadataProps_ = metadataPropsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxProto3.ModelProto) {
          return mergeFrom((onnx.OnnxProto3.ModelProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxProto3.ModelProto other) {
        if (other == onnx.OnnxProto3.ModelProto.getDefaultInstance()) return this;
        if (other.getIrVersion() != 0L) {
          setIrVersion(other.getIrVersion());
        }
        if (opsetImportBuilder_ == null) {
          if (!other.opsetImport_.isEmpty()) {
            if (opsetImport_.isEmpty()) {
              opsetImport_ = other.opsetImport_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOpsetImportIsMutable();
              opsetImport_.addAll(other.opsetImport_);
            }
            onChanged();
          }
        } else {
          if (!other.opsetImport_.isEmpty()) {
            if (opsetImportBuilder_.isEmpty()) {
              opsetImportBuilder_.dispose();
              opsetImportBuilder_ = null;
              opsetImport_ = other.opsetImport_;
              bitField0_ = (bitField0_ & ~0x00000002);
              opsetImportBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOpsetImportFieldBuilder() : null;
            } else {
              opsetImportBuilder_.addAllMessages(other.opsetImport_);
            }
          }
        }
        if (!other.getProducerName().isEmpty()) {
          producerName_ = other.producerName_;
          onChanged();
        }
        if (!other.getProducerVersion().isEmpty()) {
          producerVersion_ = other.producerVersion_;
          onChanged();
        }
        if (!other.getDomain().isEmpty()) {
          domain_ = other.domain_;
          onChanged();
        }
        if (other.getModelVersion() != 0L) {
          setModelVersion(other.getModelVersion());
        }
        if (!other.getDocString().isEmpty()) {
          docString_ = other.docString_;
          onChanged();
        }
        if (other.hasGraph()) {
          mergeGraph(other.getGraph());
        }
        if (metadataPropsBuilder_ == null) {
          if (!other.metadataProps_.isEmpty()) {
            if (metadataProps_.isEmpty()) {
              metadataProps_ = other.metadataProps_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureMetadataPropsIsMutable();
              metadataProps_.addAll(other.metadataProps_);
            }
            onChanged();
          }
        } else {
          if (!other.metadataProps_.isEmpty()) {
            if (metadataPropsBuilder_.isEmpty()) {
              metadataPropsBuilder_.dispose();
              metadataPropsBuilder_ = null;
              metadataProps_ = other.metadataProps_;
              bitField0_ = (bitField0_ & ~0x00000100);
              metadataPropsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetadataPropsFieldBuilder() : null;
            } else {
              metadataPropsBuilder_.addAllMessages(other.metadataProps_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxProto3.ModelProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxProto3.ModelProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long irVersion_ ;
      /**
       * <pre>
       * The version of the IR this model targets. See Version enum above.
       * This field MUST be present.
       * </pre>
       *
       * <code>int64 ir_version = 1;</code>
       */
      public long getIrVersion() {
        return irVersion_;
      }
      /**
       * <pre>
       * The version of the IR this model targets. See Version enum above.
       * This field MUST be present.
       * </pre>
       *
       * <code>int64 ir_version = 1;</code>
       */
      public Builder setIrVersion(long value) {
        
        irVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the IR this model targets. See Version enum above.
       * This field MUST be present.
       * </pre>
       *
       * <code>int64 ir_version = 1;</code>
       */
      public Builder clearIrVersion() {
        
        irVersion_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<onnx.OnnxProto3.OperatorSetIdProto> opsetImport_ =
        java.util.Collections.emptyList();
      private void ensureOpsetImportIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          opsetImport_ = new java.util.ArrayList<onnx.OnnxProto3.OperatorSetIdProto>(opsetImport_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.OperatorSetIdProto, onnx.OnnxProto3.OperatorSetIdProto.Builder, onnx.OnnxProto3.OperatorSetIdProtoOrBuilder> opsetImportBuilder_;

      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public java.util.List<onnx.OnnxProto3.OperatorSetIdProto> getOpsetImportList() {
        if (opsetImportBuilder_ == null) {
          return java.util.Collections.unmodifiableList(opsetImport_);
        } else {
          return opsetImportBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public int getOpsetImportCount() {
        if (opsetImportBuilder_ == null) {
          return opsetImport_.size();
        } else {
          return opsetImportBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public onnx.OnnxProto3.OperatorSetIdProto getOpsetImport(int index) {
        if (opsetImportBuilder_ == null) {
          return opsetImport_.get(index);
        } else {
          return opsetImportBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public Builder setOpsetImport(
          int index, onnx.OnnxProto3.OperatorSetIdProto value) {
        if (opsetImportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOpsetImportIsMutable();
          opsetImport_.set(index, value);
          onChanged();
        } else {
          opsetImportBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public Builder setOpsetImport(
          int index, onnx.OnnxProto3.OperatorSetIdProto.Builder builderForValue) {
        if (opsetImportBuilder_ == null) {
          ensureOpsetImportIsMutable();
          opsetImport_.set(index, builderForValue.build());
          onChanged();
        } else {
          opsetImportBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public Builder addOpsetImport(onnx.OnnxProto3.OperatorSetIdProto value) {
        if (opsetImportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOpsetImportIsMutable();
          opsetImport_.add(value);
          onChanged();
        } else {
          opsetImportBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public Builder addOpsetImport(
          int index, onnx.OnnxProto3.OperatorSetIdProto value) {
        if (opsetImportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOpsetImportIsMutable();
          opsetImport_.add(index, value);
          onChanged();
        } else {
          opsetImportBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public Builder addOpsetImport(
          onnx.OnnxProto3.OperatorSetIdProto.Builder builderForValue) {
        if (opsetImportBuilder_ == null) {
          ensureOpsetImportIsMutable();
          opsetImport_.add(builderForValue.build());
          onChanged();
        } else {
          opsetImportBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public Builder addOpsetImport(
          int index, onnx.OnnxProto3.OperatorSetIdProto.Builder builderForValue) {
        if (opsetImportBuilder_ == null) {
          ensureOpsetImportIsMutable();
          opsetImport_.add(index, builderForValue.build());
          onChanged();
        } else {
          opsetImportBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public Builder addAllOpsetImport(
          java.lang.Iterable<? extends onnx.OnnxProto3.OperatorSetIdProto> values) {
        if (opsetImportBuilder_ == null) {
          ensureOpsetImportIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, opsetImport_);
          onChanged();
        } else {
          opsetImportBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public Builder clearOpsetImport() {
        if (opsetImportBuilder_ == null) {
          opsetImport_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          opsetImportBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public Builder removeOpsetImport(int index) {
        if (opsetImportBuilder_ == null) {
          ensureOpsetImportIsMutable();
          opsetImport_.remove(index);
          onChanged();
        } else {
          opsetImportBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public onnx.OnnxProto3.OperatorSetIdProto.Builder getOpsetImportBuilder(
          int index) {
        return getOpsetImportFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public onnx.OnnxProto3.OperatorSetIdProtoOrBuilder getOpsetImportOrBuilder(
          int index) {
        if (opsetImportBuilder_ == null) {
          return opsetImport_.get(index);  } else {
          return opsetImportBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.OperatorSetIdProtoOrBuilder> 
           getOpsetImportOrBuilderList() {
        if (opsetImportBuilder_ != null) {
          return opsetImportBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(opsetImport_);
        }
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public onnx.OnnxProto3.OperatorSetIdProto.Builder addOpsetImportBuilder() {
        return getOpsetImportFieldBuilder().addBuilder(
            onnx.OnnxProto3.OperatorSetIdProto.getDefaultInstance());
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public onnx.OnnxProto3.OperatorSetIdProto.Builder addOpsetImportBuilder(
          int index) {
        return getOpsetImportFieldBuilder().addBuilder(
            index, onnx.OnnxProto3.OperatorSetIdProto.getDefaultInstance());
      }
      /**
       * <pre>
       * The OperatorSets this model relies on.
       * All ModelProtos MUST have at least one entry that
       * specifies which version of the ONNX OperatorSet is
       * being imported.
       * All nodes in the ModelProto's graph will bind against the operator
       * with the same-domain/same-op_type operator with the HIGHEST version
       * in the referenced operator sets.
       * </pre>
       *
       * <code>repeated .onnx.OperatorSetIdProto opset_import = 8;</code>
       */
      public java.util.List<onnx.OnnxProto3.OperatorSetIdProto.Builder> 
           getOpsetImportBuilderList() {
        return getOpsetImportFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.OperatorSetIdProto, onnx.OnnxProto3.OperatorSetIdProto.Builder, onnx.OnnxProto3.OperatorSetIdProtoOrBuilder> 
          getOpsetImportFieldBuilder() {
        if (opsetImportBuilder_ == null) {
          opsetImportBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxProto3.OperatorSetIdProto, onnx.OnnxProto3.OperatorSetIdProto.Builder, onnx.OnnxProto3.OperatorSetIdProtoOrBuilder>(
                  opsetImport_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          opsetImport_ = null;
        }
        return opsetImportBuilder_;
      }

      private java.lang.Object producerName_ = "";
      /**
       * <pre>
       * The opName of the framework or tool used to generate this model.
       * This field SHOULD be present to indicate which implementation/tool/framework
       * emitted the model.
       * </pre>
       *
       * <code>string producer_name = 2;</code>
       */
      public java.lang.String getProducerName() {
        java.lang.Object ref = producerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          producerName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The opName of the framework or tool used to generate this model.
       * This field SHOULD be present to indicate which implementation/tool/framework
       * emitted the model.
       * </pre>
       *
       * <code>string producer_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getProducerNameBytes() {
        java.lang.Object ref = producerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          producerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The opName of the framework or tool used to generate this model.
       * This field SHOULD be present to indicate which implementation/tool/framework
       * emitted the model.
       * </pre>
       *
       * <code>string producer_name = 2;</code>
       */
      public Builder setProducerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        producerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The opName of the framework or tool used to generate this model.
       * This field SHOULD be present to indicate which implementation/tool/framework
       * emitted the model.
       * </pre>
       *
       * <code>string producer_name = 2;</code>
       */
      public Builder clearProducerName() {
        
        producerName_ = getDefaultInstance().getProducerName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The opName of the framework or tool used to generate this model.
       * This field SHOULD be present to indicate which implementation/tool/framework
       * emitted the model.
       * </pre>
       *
       * <code>string producer_name = 2;</code>
       */
      public Builder setProducerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        producerName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object producerVersion_ = "";
      /**
       * <pre>
       * The version of the framework or tool used to generate this model.
       * This field SHOULD be present to indicate which implementation/tool/framework
       * emitted the model.
       * </pre>
       *
       * <code>string producer_version = 3;</code>
       */
      public java.lang.String getProducerVersion() {
        java.lang.Object ref = producerVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          producerVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The version of the framework or tool used to generate this model.
       * This field SHOULD be present to indicate which implementation/tool/framework
       * emitted the model.
       * </pre>
       *
       * <code>string producer_version = 3;</code>
       */
      public com.google.protobuf.ByteString
          getProducerVersionBytes() {
        java.lang.Object ref = producerVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          producerVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The version of the framework or tool used to generate this model.
       * This field SHOULD be present to indicate which implementation/tool/framework
       * emitted the model.
       * </pre>
       *
       * <code>string producer_version = 3;</code>
       */
      public Builder setProducerVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        producerVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the framework or tool used to generate this model.
       * This field SHOULD be present to indicate which implementation/tool/framework
       * emitted the model.
       * </pre>
       *
       * <code>string producer_version = 3;</code>
       */
      public Builder clearProducerVersion() {
        
        producerVersion_ = getDefaultInstance().getProducerVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the framework or tool used to generate this model.
       * This field SHOULD be present to indicate which implementation/tool/framework
       * emitted the model.
       * </pre>
       *
       * <code>string producer_version = 3;</code>
       */
      public Builder setProducerVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        producerVersion_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object domain_ = "";
      /**
       * <pre>
       * Domain opName of the model.
       * We use reverse domain names as opName space indicators. For example:
       * `com.facebook.fair` or `com.microsoft.cognitiveservices`
       * Together with `model_version` and GraphProto.opName, this forms the unique identity of
       * the graph.
       * </pre>
       *
       * <code>string domain = 4;</code>
       */
      public java.lang.String getDomain() {
        java.lang.Object ref = domain_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          domain_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Domain opName of the model.
       * We use reverse domain names as opName space indicators. For example:
       * `com.facebook.fair` or `com.microsoft.cognitiveservices`
       * Together with `model_version` and GraphProto.opName, this forms the unique identity of
       * the graph.
       * </pre>
       *
       * <code>string domain = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDomainBytes() {
        java.lang.Object ref = domain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          domain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Domain opName of the model.
       * We use reverse domain names as opName space indicators. For example:
       * `com.facebook.fair` or `com.microsoft.cognitiveservices`
       * Together with `model_version` and GraphProto.opName, this forms the unique identity of
       * the graph.
       * </pre>
       *
       * <code>string domain = 4;</code>
       */
      public Builder setDomain(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        domain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Domain opName of the model.
       * We use reverse domain names as opName space indicators. For example:
       * `com.facebook.fair` or `com.microsoft.cognitiveservices`
       * Together with `model_version` and GraphProto.opName, this forms the unique identity of
       * the graph.
       * </pre>
       *
       * <code>string domain = 4;</code>
       */
      public Builder clearDomain() {
        
        domain_ = getDefaultInstance().getDomain();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Domain opName of the model.
       * We use reverse domain names as opName space indicators. For example:
       * `com.facebook.fair` or `com.microsoft.cognitiveservices`
       * Together with `model_version` and GraphProto.opName, this forms the unique identity of
       * the graph.
       * </pre>
       *
       * <code>string domain = 4;</code>
       */
      public Builder setDomainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        domain_ = value;
        onChanged();
        return this;
      }

      private long modelVersion_ ;
      /**
       * <pre>
       * The version of the graph encoded. See Version enum below.
       * </pre>
       *
       * <code>int64 model_version = 5;</code>
       */
      public long getModelVersion() {
        return modelVersion_;
      }
      /**
       * <pre>
       * The version of the graph encoded. See Version enum below.
       * </pre>
       *
       * <code>int64 model_version = 5;</code>
       */
      public Builder setModelVersion(long value) {
        
        modelVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the graph encoded. See Version enum below.
       * </pre>
       *
       * <code>int64 model_version = 5;</code>
       */
      public Builder clearModelVersion() {
        
        modelVersion_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object docString_ = "";
      /**
       * <pre>
       * A human-readable documentation for this model. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 6;</code>
       */
      public java.lang.String getDocString() {
        java.lang.Object ref = docString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this model. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDocStringBytes() {
        java.lang.Object ref = docString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this model. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 6;</code>
       */
      public Builder setDocString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this model. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 6;</code>
       */
      public Builder clearDocString() {
        
        docString_ = getDefaultInstance().getDocString();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this model. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 6;</code>
       */
      public Builder setDocStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docString_ = value;
        onChanged();
        return this;
      }

      private onnx.OnnxProto3.GraphProto graph_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.GraphProto, onnx.OnnxProto3.GraphProto.Builder, onnx.OnnxProto3.GraphProtoOrBuilder> graphBuilder_;
      /**
       * <pre>
       * The parameterized graph that is evaluated to execute the model.
       * </pre>
       *
       * <code>.onnx.GraphProto graph = 7;</code>
       */
      public boolean hasGraph() {
        return graphBuilder_ != null || graph_ != null;
      }
      /**
       * <pre>
       * The parameterized graph that is evaluated to execute the model.
       * </pre>
       *
       * <code>.onnx.GraphProto graph = 7;</code>
       */
      public onnx.OnnxProto3.GraphProto getGraph() {
        if (graphBuilder_ == null) {
          return graph_ == null ? onnx.OnnxProto3.GraphProto.getDefaultInstance() : graph_;
        } else {
          return graphBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The parameterized graph that is evaluated to execute the model.
       * </pre>
       *
       * <code>.onnx.GraphProto graph = 7;</code>
       */
      public Builder setGraph(onnx.OnnxProto3.GraphProto value) {
        if (graphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          graph_ = value;
          onChanged();
        } else {
          graphBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The parameterized graph that is evaluated to execute the model.
       * </pre>
       *
       * <code>.onnx.GraphProto graph = 7;</code>
       */
      public Builder setGraph(
          onnx.OnnxProto3.GraphProto.Builder builderForValue) {
        if (graphBuilder_ == null) {
          graph_ = builderForValue.build();
          onChanged();
        } else {
          graphBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The parameterized graph that is evaluated to execute the model.
       * </pre>
       *
       * <code>.onnx.GraphProto graph = 7;</code>
       */
      public Builder mergeGraph(onnx.OnnxProto3.GraphProto value) {
        if (graphBuilder_ == null) {
          if (graph_ != null) {
            graph_ =
              onnx.OnnxProto3.GraphProto.newBuilder(graph_).mergeFrom(value).buildPartial();
          } else {
            graph_ = value;
          }
          onChanged();
        } else {
          graphBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The parameterized graph that is evaluated to execute the model.
       * </pre>
       *
       * <code>.onnx.GraphProto graph = 7;</code>
       */
      public Builder clearGraph() {
        if (graphBuilder_ == null) {
          graph_ = null;
          onChanged();
        } else {
          graph_ = null;
          graphBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The parameterized graph that is evaluated to execute the model.
       * </pre>
       *
       * <code>.onnx.GraphProto graph = 7;</code>
       */
      public onnx.OnnxProto3.GraphProto.Builder getGraphBuilder() {
        
        onChanged();
        return getGraphFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The parameterized graph that is evaluated to execute the model.
       * </pre>
       *
       * <code>.onnx.GraphProto graph = 7;</code>
       */
      public onnx.OnnxProto3.GraphProtoOrBuilder getGraphOrBuilder() {
        if (graphBuilder_ != null) {
          return graphBuilder_.getMessageOrBuilder();
        } else {
          return graph_ == null ?
              onnx.OnnxProto3.GraphProto.getDefaultInstance() : graph_;
        }
      }
      /**
       * <pre>
       * The parameterized graph that is evaluated to execute the model.
       * </pre>
       *
       * <code>.onnx.GraphProto graph = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.GraphProto, onnx.OnnxProto3.GraphProto.Builder, onnx.OnnxProto3.GraphProtoOrBuilder> 
          getGraphFieldBuilder() {
        if (graphBuilder_ == null) {
          graphBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.OnnxProto3.GraphProto, onnx.OnnxProto3.GraphProto.Builder, onnx.OnnxProto3.GraphProtoOrBuilder>(
                  getGraph(),
                  getParentForChildren(),
                  isClean());
          graph_ = null;
        }
        return graphBuilder_;
      }

      private java.util.List<onnx.OnnxProto3.StringStringEntryProto> metadataProps_ =
        java.util.Collections.emptyList();
      private void ensureMetadataPropsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          metadataProps_ = new java.util.ArrayList<onnx.OnnxProto3.StringStringEntryProto>(metadataProps_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.StringStringEntryProto, onnx.OnnxProto3.StringStringEntryProto.Builder, onnx.OnnxProto3.StringStringEntryProtoOrBuilder> metadataPropsBuilder_;

      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public java.util.List<onnx.OnnxProto3.StringStringEntryProto> getMetadataPropsList() {
        if (metadataPropsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metadataProps_);
        } else {
          return metadataPropsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public int getMetadataPropsCount() {
        if (metadataPropsBuilder_ == null) {
          return metadataProps_.size();
        } else {
          return metadataPropsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public onnx.OnnxProto3.StringStringEntryProto getMetadataProps(int index) {
        if (metadataPropsBuilder_ == null) {
          return metadataProps_.get(index);
        } else {
          return metadataPropsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public Builder setMetadataProps(
          int index, onnx.OnnxProto3.StringStringEntryProto value) {
        if (metadataPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataPropsIsMutable();
          metadataProps_.set(index, value);
          onChanged();
        } else {
          metadataPropsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public Builder setMetadataProps(
          int index, onnx.OnnxProto3.StringStringEntryProto.Builder builderForValue) {
        if (metadataPropsBuilder_ == null) {
          ensureMetadataPropsIsMutable();
          metadataProps_.set(index, builderForValue.build());
          onChanged();
        } else {
          metadataPropsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public Builder addMetadataProps(onnx.OnnxProto3.StringStringEntryProto value) {
        if (metadataPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataPropsIsMutable();
          metadataProps_.add(value);
          onChanged();
        } else {
          metadataPropsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public Builder addMetadataProps(
          int index, onnx.OnnxProto3.StringStringEntryProto value) {
        if (metadataPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataPropsIsMutable();
          metadataProps_.add(index, value);
          onChanged();
        } else {
          metadataPropsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public Builder addMetadataProps(
          onnx.OnnxProto3.StringStringEntryProto.Builder builderForValue) {
        if (metadataPropsBuilder_ == null) {
          ensureMetadataPropsIsMutable();
          metadataProps_.add(builderForValue.build());
          onChanged();
        } else {
          metadataPropsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public Builder addMetadataProps(
          int index, onnx.OnnxProto3.StringStringEntryProto.Builder builderForValue) {
        if (metadataPropsBuilder_ == null) {
          ensureMetadataPropsIsMutable();
          metadataProps_.add(index, builderForValue.build());
          onChanged();
        } else {
          metadataPropsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public Builder addAllMetadataProps(
          java.lang.Iterable<? extends onnx.OnnxProto3.StringStringEntryProto> values) {
        if (metadataPropsBuilder_ == null) {
          ensureMetadataPropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metadataProps_);
          onChanged();
        } else {
          metadataPropsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public Builder clearMetadataProps() {
        if (metadataPropsBuilder_ == null) {
          metadataProps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          metadataPropsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public Builder removeMetadataProps(int index) {
        if (metadataPropsBuilder_ == null) {
          ensureMetadataPropsIsMutable();
          metadataProps_.remove(index);
          onChanged();
        } else {
          metadataPropsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public onnx.OnnxProto3.StringStringEntryProto.Builder getMetadataPropsBuilder(
          int index) {
        return getMetadataPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public onnx.OnnxProto3.StringStringEntryProtoOrBuilder getMetadataPropsOrBuilder(
          int index) {
        if (metadataPropsBuilder_ == null) {
          return metadataProps_.get(index);  } else {
          return metadataPropsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.StringStringEntryProtoOrBuilder> 
           getMetadataPropsOrBuilderList() {
        if (metadataPropsBuilder_ != null) {
          return metadataPropsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metadataProps_);
        }
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public onnx.OnnxProto3.StringStringEntryProto.Builder addMetadataPropsBuilder() {
        return getMetadataPropsFieldBuilder().addBuilder(
            onnx.OnnxProto3.StringStringEntryProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public onnx.OnnxProto3.StringStringEntryProto.Builder addMetadataPropsBuilder(
          int index) {
        return getMetadataPropsFieldBuilder().addBuilder(
            index, onnx.OnnxProto3.StringStringEntryProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Named metadata values; keys should be distinct.
       * </pre>
       *
       * <code>repeated .onnx.StringStringEntryProto metadata_props = 14;</code>
       */
      public java.util.List<onnx.OnnxProto3.StringStringEntryProto.Builder> 
           getMetadataPropsBuilderList() {
        return getMetadataPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.StringStringEntryProto, onnx.OnnxProto3.StringStringEntryProto.Builder, onnx.OnnxProto3.StringStringEntryProtoOrBuilder> 
          getMetadataPropsFieldBuilder() {
        if (metadataPropsBuilder_ == null) {
          metadataPropsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxProto3.StringStringEntryProto, onnx.OnnxProto3.StringStringEntryProto.Builder, onnx.OnnxProto3.StringStringEntryProtoOrBuilder>(
                  metadataProps_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          metadataProps_ = null;
        }
        return metadataPropsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:onnx.ModelProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.ModelProto)
    private static final onnx.OnnxProto3.ModelProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxProto3.ModelProto();
    }

    public static onnx.OnnxProto3.ModelProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ModelProto>
        PARSER = new com.google.protobuf.AbstractParser<ModelProto>() {
      public ModelProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ModelProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ModelProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ModelProto> getParserForType() {
      return PARSER;
    }

    public onnx.OnnxProto3.ModelProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StringStringEntryProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.StringStringEntryProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * <pre>
   * StringStringEntryProto follows the pattern for cross-proto-version maps.
   * See https://developers.google.com/protocol-buffers/docs/proto3#maps
   * </pre>
   *
   * Protobuf type {@code onnx.StringStringEntryProto}
   */
  public  static final class StringStringEntryProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.StringStringEntryProto)
      StringStringEntryProtoOrBuilder {
    // Use StringStringEntryProto.newBuilder() to construct.
    private StringStringEntryProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StringStringEntryProto() {
      key_ = "";
      value_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private StringStringEntryProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxProto3.internal_static_onnx_StringStringEntryProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxProto3.internal_static_onnx_StringStringEntryProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxProto3.StringStringEntryProto.class, onnx.OnnxProto3.StringStringEntryProto.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <code>string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile java.lang.Object value_;
    /**
     * <code>string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxProto3.StringStringEntryProto)) {
        return super.equals(obj);
      }
      onnx.OnnxProto3.StringStringEntryProto other = (onnx.OnnxProto3.StringStringEntryProto) obj;

      boolean result = true;
      result = result && getKey()
          .equals(other.getKey());
      result = result && getValue()
          .equals(other.getValue());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxProto3.StringStringEntryProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.StringStringEntryProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.StringStringEntryProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.StringStringEntryProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.StringStringEntryProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.StringStringEntryProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.StringStringEntryProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.StringStringEntryProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.StringStringEntryProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.StringStringEntryProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxProto3.StringStringEntryProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * StringStringEntryProto follows the pattern for cross-proto-version maps.
     * See https://developers.google.com/protocol-buffers/docs/proto3#maps
     * </pre>
     *
     * Protobuf type {@code onnx.StringStringEntryProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.StringStringEntryProto)
        onnx.OnnxProto3.StringStringEntryProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_StringStringEntryProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_StringStringEntryProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.StringStringEntryProto.class, onnx.OnnxProto3.StringStringEntryProto.Builder.class);
      }

      // Construct using onnx.OnnxProto3.StringStringEntryProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        key_ = "";

        value_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxProto3.internal_static_onnx_StringStringEntryProto_descriptor;
      }

      public onnx.OnnxProto3.StringStringEntryProto getDefaultInstanceForType() {
        return onnx.OnnxProto3.StringStringEntryProto.getDefaultInstance();
      }

      public onnx.OnnxProto3.StringStringEntryProto build() {
        onnx.OnnxProto3.StringStringEntryProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public onnx.OnnxProto3.StringStringEntryProto buildPartial() {
        onnx.OnnxProto3.StringStringEntryProto result = new onnx.OnnxProto3.StringStringEntryProto(this);
        result.key_ = key_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxProto3.StringStringEntryProto) {
          return mergeFrom((onnx.OnnxProto3.StringStringEntryProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxProto3.StringStringEntryProto other) {
        if (other == onnx.OnnxProto3.StringStringEntryProto.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxProto3.StringStringEntryProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxProto3.StringStringEntryProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:onnx.StringStringEntryProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.StringStringEntryProto)
    private static final onnx.OnnxProto3.StringStringEntryProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxProto3.StringStringEntryProto();
    }

    public static onnx.OnnxProto3.StringStringEntryProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StringStringEntryProto>
        PARSER = new com.google.protobuf.AbstractParser<StringStringEntryProto>() {
      public StringStringEntryProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new StringStringEntryProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StringStringEntryProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StringStringEntryProto> getParserForType() {
      return PARSER;
    }

    public onnx.OnnxProto3.StringStringEntryProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.GraphProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The nodes in the graph.
     * </pre>
     *
     * <code>repeated .onnx.NodeProto node = 1;</code>
     */
    java.util.List<onnx.OnnxProto3.NodeProto> 
        getNodeList();
    /**
     * <pre>
     * The nodes in the graph.
     * </pre>
     *
     * <code>repeated .onnx.NodeProto node = 1;</code>
     */
    onnx.OnnxProto3.NodeProto getNode(int index);
    /**
     * <pre>
     * The nodes in the graph.
     * </pre>
     *
     * <code>repeated .onnx.NodeProto node = 1;</code>
     */
    int getNodeCount();
    /**
     * <pre>
     * The nodes in the graph.
     * </pre>
     *
     * <code>repeated .onnx.NodeProto node = 1;</code>
     */
    java.util.List<? extends onnx.OnnxProto3.NodeProtoOrBuilder> 
        getNodeOrBuilderList();
    /**
     * <pre>
     * The nodes in the graph.
     * </pre>
     *
     * <code>repeated .onnx.NodeProto node = 1;</code>
     */
    onnx.OnnxProto3.NodeProtoOrBuilder getNodeOrBuilder(
        int index);

    /**
     * <pre>
     * The opName of the graph.
     * </pre>
     *
     * <code>string opName = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The opName of the graph.
     * </pre>
     *
     * <code>string opName = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * A list of named tensor values (constants), used to specify default
     * values for some of the inputs of the graph.
     * Each TensorProto entry must have a distinct opName (within the list) that
     * also appears in the input list.
     * In an evaluation, the default value specified here is used if and only if
     * user specifies no value for the corresponding input parameter.
     * May be used to pass serialized parameters for networks.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto initializer = 5;</code>
     */
    java.util.List<onnx.OnnxProto3.TensorProto> 
        getInitializerList();
    /**
     * <pre>
     * A list of named tensor values (constants), used to specify default
     * values for some of the inputs of the graph.
     * Each TensorProto entry must have a distinct opName (within the list) that
     * also appears in the input list.
     * In an evaluation, the default value specified here is used if and only if
     * user specifies no value for the corresponding input parameter.
     * May be used to pass serialized parameters for networks.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto initializer = 5;</code>
     */
    onnx.OnnxProto3.TensorProto getInitializer(int index);
    /**
     * <pre>
     * A list of named tensor values (constants), used to specify default
     * values for some of the inputs of the graph.
     * Each TensorProto entry must have a distinct opName (within the list) that
     * also appears in the input list.
     * In an evaluation, the default value specified here is used if and only if
     * user specifies no value for the corresponding input parameter.
     * May be used to pass serialized parameters for networks.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto initializer = 5;</code>
     */
    int getInitializerCount();
    /**
     * <pre>
     * A list of named tensor values (constants), used to specify default
     * values for some of the inputs of the graph.
     * Each TensorProto entry must have a distinct opName (within the list) that
     * also appears in the input list.
     * In an evaluation, the default value specified here is used if and only if
     * user specifies no value for the corresponding input parameter.
     * May be used to pass serialized parameters for networks.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto initializer = 5;</code>
     */
    java.util.List<? extends onnx.OnnxProto3.TensorProtoOrBuilder> 
        getInitializerOrBuilderList();
    /**
     * <pre>
     * A list of named tensor values (constants), used to specify default
     * values for some of the inputs of the graph.
     * Each TensorProto entry must have a distinct opName (within the list) that
     * also appears in the input list.
     * In an evaluation, the default value specified here is used if and only if
     * user specifies no value for the corresponding input parameter.
     * May be used to pass serialized parameters for networks.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto initializer = 5;</code>
     */
    onnx.OnnxProto3.TensorProtoOrBuilder getInitializerOrBuilder(
        int index);

    /**
     * <pre>
     * A human-readable documentation for this graph. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 10;</code>
     */
    java.lang.String getDocString();
    /**
     * <pre>
     * A human-readable documentation for this graph. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 10;</code>
     */
    com.google.protobuf.ByteString
        getDocStringBytes();

    /**
     * <pre>
     * The inputs and outputs of the graph.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto input = 11;</code>
     */
    java.util.List<onnx.OnnxProto3.ValueInfoProto> 
        getInputList();
    /**
     * <pre>
     * The inputs and outputs of the graph.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto input = 11;</code>
     */
    onnx.OnnxProto3.ValueInfoProto getInput(int index);
    /**
     * <pre>
     * The inputs and outputs of the graph.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto input = 11;</code>
     */
    int getInputCount();
    /**
     * <pre>
     * The inputs and outputs of the graph.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto input = 11;</code>
     */
    java.util.List<? extends onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
        getInputOrBuilderList();
    /**
     * <pre>
     * The inputs and outputs of the graph.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto input = 11;</code>
     */
    onnx.OnnxProto3.ValueInfoProtoOrBuilder getInputOrBuilder(
        int index);

    /**
     * <code>repeated .onnx.ValueInfoProto output = 12;</code>
     */
    java.util.List<onnx.OnnxProto3.ValueInfoProto> 
        getOutputList();
    /**
     * <code>repeated .onnx.ValueInfoProto output = 12;</code>
     */
    onnx.OnnxProto3.ValueInfoProto getOutput(int index);
    /**
     * <code>repeated .onnx.ValueInfoProto output = 12;</code>
     */
    int getOutputCount();
    /**
     * <code>repeated .onnx.ValueInfoProto output = 12;</code>
     */
    java.util.List<? extends onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
        getOutputOrBuilderList();
    /**
     * <code>repeated .onnx.ValueInfoProto output = 12;</code>
     */
    onnx.OnnxProto3.ValueInfoProtoOrBuilder getOutputOrBuilder(
        int index);

    /**
     * <pre>
     * Information for the values in the graph. The ValueInfoProto.opName's
     * must be distinct. It is optional for a value to appear in value_info list.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
     */
    java.util.List<onnx.OnnxProto3.ValueInfoProto> 
        getValueInfoList();
    /**
     * <pre>
     * Information for the values in the graph. The ValueInfoProto.opName's
     * must be distinct. It is optional for a value to appear in value_info list.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
     */
    onnx.OnnxProto3.ValueInfoProto getValueInfo(int index);
    /**
     * <pre>
     * Information for the values in the graph. The ValueInfoProto.opName's
     * must be distinct. It is optional for a value to appear in value_info list.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
     */
    int getValueInfoCount();
    /**
     * <pre>
     * Information for the values in the graph. The ValueInfoProto.opName's
     * must be distinct. It is optional for a value to appear in value_info list.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
     */
    java.util.List<? extends onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
        getValueInfoOrBuilderList();
    /**
     * <pre>
     * Information for the values in the graph. The ValueInfoProto.opName's
     * must be distinct. It is optional for a value to appear in value_info list.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
     */
    onnx.OnnxProto3.ValueInfoProtoOrBuilder getValueInfoOrBuilder(
        int index);
  }
  /**
   * <pre>
   * GraphProto defines a parameterized series of nodes to form a directed acyclic graph.
   * This is the equivalent of the "network" and "graph" in many deep learning
   * frameworks.
   * </pre>
   *
   * Protobuf type {@code onnx.GraphProto}
   */
  public  static final class GraphProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.GraphProto)
      GraphProtoOrBuilder {
    // Use GraphProto.newBuilder() to construct.
    private GraphProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GraphProto() {
      node_ = java.util.Collections.emptyList();
      name_ = "";
      initializer_ = java.util.Collections.emptyList();
      docString_ = "";
      input_ = java.util.Collections.emptyList();
      output_ = java.util.Collections.emptyList();
      valueInfo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GraphProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                node_ = new java.util.ArrayList<onnx.OnnxProto3.NodeProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              node_.add(
                  input.readMessage(onnx.OnnxProto3.NodeProto.parser(), extensionRegistry));
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                initializer_ = new java.util.ArrayList<onnx.OnnxProto3.TensorProto>();
                mutable_bitField0_ |= 0x00000004;
              }
              initializer_.add(
                  input.readMessage(onnx.OnnxProto3.TensorProto.parser(), extensionRegistry));
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              docString_ = s;
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                input_ = new java.util.ArrayList<onnx.OnnxProto3.ValueInfoProto>();
                mutable_bitField0_ |= 0x00000010;
              }
              input_.add(
                  input.readMessage(onnx.OnnxProto3.ValueInfoProto.parser(), extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                output_ = new java.util.ArrayList<onnx.OnnxProto3.ValueInfoProto>();
                mutable_bitField0_ |= 0x00000020;
              }
              output_.add(
                  input.readMessage(onnx.OnnxProto3.ValueInfoProto.parser(), extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                valueInfo_ = new java.util.ArrayList<onnx.OnnxProto3.ValueInfoProto>();
                mutable_bitField0_ |= 0x00000040;
              }
              valueInfo_.add(
                  input.readMessage(onnx.OnnxProto3.ValueInfoProto.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          node_ = java.util.Collections.unmodifiableList(node_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          initializer_ = java.util.Collections.unmodifiableList(initializer_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          input_ = java.util.Collections.unmodifiableList(input_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          output_ = java.util.Collections.unmodifiableList(output_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          valueInfo_ = java.util.Collections.unmodifiableList(valueInfo_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxProto3.internal_static_onnx_GraphProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxProto3.internal_static_onnx_GraphProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxProto3.GraphProto.class, onnx.OnnxProto3.GraphProto.Builder.class);
    }

    private int bitField0_;
    public static final int NODE_FIELD_NUMBER = 1;
    private java.util.List<onnx.OnnxProto3.NodeProto> node_;
    /**
     * <pre>
     * The nodes in the graph.
     * </pre>
     *
     * <code>repeated .onnx.NodeProto node = 1;</code>
     */
    public java.util.List<onnx.OnnxProto3.NodeProto> getNodeList() {
      return node_;
    }
    /**
     * <pre>
     * The nodes in the graph.
     * </pre>
     *
     * <code>repeated .onnx.NodeProto node = 1;</code>
     */
    public java.util.List<? extends onnx.OnnxProto3.NodeProtoOrBuilder> 
        getNodeOrBuilderList() {
      return node_;
    }
    /**
     * <pre>
     * The nodes in the graph.
     * </pre>
     *
     * <code>repeated .onnx.NodeProto node = 1;</code>
     */
    public int getNodeCount() {
      return node_.size();
    }
    /**
     * <pre>
     * The nodes in the graph.
     * </pre>
     *
     * <code>repeated .onnx.NodeProto node = 1;</code>
     */
    public onnx.OnnxProto3.NodeProto getNode(int index) {
      return node_.get(index);
    }
    /**
     * <pre>
     * The nodes in the graph.
     * </pre>
     *
     * <code>repeated .onnx.NodeProto node = 1;</code>
     */
    public onnx.OnnxProto3.NodeProtoOrBuilder getNodeOrBuilder(
        int index) {
      return node_.get(index);
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The opName of the graph.
     * </pre>
     *
     * <code>string opName = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The opName of the graph.
     * </pre>
     *
     * <code>string opName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INITIALIZER_FIELD_NUMBER = 5;
    private java.util.List<onnx.OnnxProto3.TensorProto> initializer_;
    /**
     * <pre>
     * A list of named tensor values (constants), used to specify default
     * values for some of the inputs of the graph.
     * Each TensorProto entry must have a distinct opName (within the list) that
     * also appears in the input list.
     * In an evaluation, the default value specified here is used if and only if
     * user specifies no value for the corresponding input parameter.
     * May be used to pass serialized parameters for networks.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto initializer = 5;</code>
     */
    public java.util.List<onnx.OnnxProto3.TensorProto> getInitializerList() {
      return initializer_;
    }
    /**
     * <pre>
     * A list of named tensor values (constants), used to specify default
     * values for some of the inputs of the graph.
     * Each TensorProto entry must have a distinct opName (within the list) that
     * also appears in the input list.
     * In an evaluation, the default value specified here is used if and only if
     * user specifies no value for the corresponding input parameter.
     * May be used to pass serialized parameters for networks.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto initializer = 5;</code>
     */
    public java.util.List<? extends onnx.OnnxProto3.TensorProtoOrBuilder> 
        getInitializerOrBuilderList() {
      return initializer_;
    }
    /**
     * <pre>
     * A list of named tensor values (constants), used to specify default
     * values for some of the inputs of the graph.
     * Each TensorProto entry must have a distinct opName (within the list) that
     * also appears in the input list.
     * In an evaluation, the default value specified here is used if and only if
     * user specifies no value for the corresponding input parameter.
     * May be used to pass serialized parameters for networks.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto initializer = 5;</code>
     */
    public int getInitializerCount() {
      return initializer_.size();
    }
    /**
     * <pre>
     * A list of named tensor values (constants), used to specify default
     * values for some of the inputs of the graph.
     * Each TensorProto entry must have a distinct opName (within the list) that
     * also appears in the input list.
     * In an evaluation, the default value specified here is used if and only if
     * user specifies no value for the corresponding input parameter.
     * May be used to pass serialized parameters for networks.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto initializer = 5;</code>
     */
    public onnx.OnnxProto3.TensorProto getInitializer(int index) {
      return initializer_.get(index);
    }
    /**
     * <pre>
     * A list of named tensor values (constants), used to specify default
     * values for some of the inputs of the graph.
     * Each TensorProto entry must have a distinct opName (within the list) that
     * also appears in the input list.
     * In an evaluation, the default value specified here is used if and only if
     * user specifies no value for the corresponding input parameter.
     * May be used to pass serialized parameters for networks.
     * </pre>
     *
     * <code>repeated .onnx.TensorProto initializer = 5;</code>
     */
    public onnx.OnnxProto3.TensorProtoOrBuilder getInitializerOrBuilder(
        int index) {
      return initializer_.get(index);
    }

    public static final int DOC_STRING_FIELD_NUMBER = 10;
    private volatile java.lang.Object docString_;
    /**
     * <pre>
     * A human-readable documentation for this graph. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 10;</code>
     */
    public java.lang.String getDocString() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docString_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A human-readable documentation for this graph. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 10;</code>
     */
    public com.google.protobuf.ByteString
        getDocStringBytes() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INPUT_FIELD_NUMBER = 11;
    private java.util.List<onnx.OnnxProto3.ValueInfoProto> input_;
    /**
     * <pre>
     * The inputs and outputs of the graph.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto input = 11;</code>
     */
    public java.util.List<onnx.OnnxProto3.ValueInfoProto> getInputList() {
      return input_;
    }
    /**
     * <pre>
     * The inputs and outputs of the graph.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto input = 11;</code>
     */
    public java.util.List<? extends onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
        getInputOrBuilderList() {
      return input_;
    }
    /**
     * <pre>
     * The inputs and outputs of the graph.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto input = 11;</code>
     */
    public int getInputCount() {
      return input_.size();
    }
    /**
     * <pre>
     * The inputs and outputs of the graph.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto input = 11;</code>
     */
    public onnx.OnnxProto3.ValueInfoProto getInput(int index) {
      return input_.get(index);
    }
    /**
     * <pre>
     * The inputs and outputs of the graph.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto input = 11;</code>
     */
    public onnx.OnnxProto3.ValueInfoProtoOrBuilder getInputOrBuilder(
        int index) {
      return input_.get(index);
    }

    public static final int OUTPUT_FIELD_NUMBER = 12;
    private java.util.List<onnx.OnnxProto3.ValueInfoProto> output_;
    /**
     * <code>repeated .onnx.ValueInfoProto output = 12;</code>
     */
    public java.util.List<onnx.OnnxProto3.ValueInfoProto> getOutputList() {
      return output_;
    }
    /**
     * <code>repeated .onnx.ValueInfoProto output = 12;</code>
     */
    public java.util.List<? extends onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
        getOutputOrBuilderList() {
      return output_;
    }
    /**
     * <code>repeated .onnx.ValueInfoProto output = 12;</code>
     */
    public int getOutputCount() {
      return output_.size();
    }
    /**
     * <code>repeated .onnx.ValueInfoProto output = 12;</code>
     */
    public onnx.OnnxProto3.ValueInfoProto getOutput(int index) {
      return output_.get(index);
    }
    /**
     * <code>repeated .onnx.ValueInfoProto output = 12;</code>
     */
    public onnx.OnnxProto3.ValueInfoProtoOrBuilder getOutputOrBuilder(
        int index) {
      return output_.get(index);
    }

    public static final int VALUE_INFO_FIELD_NUMBER = 13;
    private java.util.List<onnx.OnnxProto3.ValueInfoProto> valueInfo_;
    /**
     * <pre>
     * Information for the values in the graph. The ValueInfoProto.opName's
     * must be distinct. It is optional for a value to appear in value_info list.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
     */
    public java.util.List<onnx.OnnxProto3.ValueInfoProto> getValueInfoList() {
      return valueInfo_;
    }
    /**
     * <pre>
     * Information for the values in the graph. The ValueInfoProto.opName's
     * must be distinct. It is optional for a value to appear in value_info list.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
     */
    public java.util.List<? extends onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
        getValueInfoOrBuilderList() {
      return valueInfo_;
    }
    /**
     * <pre>
     * Information for the values in the graph. The ValueInfoProto.opName's
     * must be distinct. It is optional for a value to appear in value_info list.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
     */
    public int getValueInfoCount() {
      return valueInfo_.size();
    }
    /**
     * <pre>
     * Information for the values in the graph. The ValueInfoProto.opName's
     * must be distinct. It is optional for a value to appear in value_info list.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
     */
    public onnx.OnnxProto3.ValueInfoProto getValueInfo(int index) {
      return valueInfo_.get(index);
    }
    /**
     * <pre>
     * Information for the values in the graph. The ValueInfoProto.opName's
     * must be distinct. It is optional for a value to appear in value_info list.
     * </pre>
     *
     * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
     */
    public onnx.OnnxProto3.ValueInfoProtoOrBuilder getValueInfoOrBuilder(
        int index) {
      return valueInfo_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < node_.size(); i++) {
        output.writeMessage(1, node_.get(i));
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      for (int i = 0; i < initializer_.size(); i++) {
        output.writeMessage(5, initializer_.get(i));
      }
      if (!getDocStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, docString_);
      }
      for (int i = 0; i < input_.size(); i++) {
        output.writeMessage(11, input_.get(i));
      }
      for (int i = 0; i < output_.size(); i++) {
        output.writeMessage(12, output_.get(i));
      }
      for (int i = 0; i < valueInfo_.size(); i++) {
        output.writeMessage(13, valueInfo_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < node_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, node_.get(i));
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      for (int i = 0; i < initializer_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, initializer_.get(i));
      }
      if (!getDocStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, docString_);
      }
      for (int i = 0; i < input_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, input_.get(i));
      }
      for (int i = 0; i < output_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, output_.get(i));
      }
      for (int i = 0; i < valueInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, valueInfo_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxProto3.GraphProto)) {
        return super.equals(obj);
      }
      onnx.OnnxProto3.GraphProto other = (onnx.OnnxProto3.GraphProto) obj;

      boolean result = true;
      result = result && getNodeList()
          .equals(other.getNodeList());
      result = result && getName()
          .equals(other.getName());
      result = result && getInitializerList()
          .equals(other.getInitializerList());
      result = result && getDocString()
          .equals(other.getDocString());
      result = result && getInputList()
          .equals(other.getInputList());
      result = result && getOutputList()
          .equals(other.getOutputList());
      result = result && getValueInfoList()
          .equals(other.getValueInfoList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodeCount() > 0) {
        hash = (37 * hash) + NODE_FIELD_NUMBER;
        hash = (53 * hash) + getNodeList().hashCode();
      }
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getInitializerCount() > 0) {
        hash = (37 * hash) + INITIALIZER_FIELD_NUMBER;
        hash = (53 * hash) + getInitializerList().hashCode();
      }
      hash = (37 * hash) + DOC_STRING_FIELD_NUMBER;
      hash = (53 * hash) + getDocString().hashCode();
      if (getInputCount() > 0) {
        hash = (37 * hash) + INPUT_FIELD_NUMBER;
        hash = (53 * hash) + getInputList().hashCode();
      }
      if (getOutputCount() > 0) {
        hash = (37 * hash) + OUTPUT_FIELD_NUMBER;
        hash = (53 * hash) + getOutputList().hashCode();
      }
      if (getValueInfoCount() > 0) {
        hash = (37 * hash) + VALUE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getValueInfoList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxProto3.GraphProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.GraphProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.GraphProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.GraphProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.GraphProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.GraphProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.GraphProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.GraphProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.GraphProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.GraphProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxProto3.GraphProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * GraphProto defines a parameterized series of nodes to form a directed acyclic graph.
     * This is the equivalent of the "network" and "graph" in many deep learning
     * frameworks.
     * </pre>
     *
     * Protobuf type {@code onnx.GraphProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.GraphProto)
        onnx.OnnxProto3.GraphProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_GraphProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_GraphProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.GraphProto.class, onnx.OnnxProto3.GraphProto.Builder.class);
      }

      // Construct using onnx.OnnxProto3.GraphProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodeFieldBuilder();
          getInitializerFieldBuilder();
          getInputFieldBuilder();
          getOutputFieldBuilder();
          getValueInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodeBuilder_ == null) {
          node_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodeBuilder_.clear();
        }
        name_ = "";

        if (initializerBuilder_ == null) {
          initializer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          initializerBuilder_.clear();
        }
        docString_ = "";

        if (inputBuilder_ == null) {
          input_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          inputBuilder_.clear();
        }
        if (outputBuilder_ == null) {
          output_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          outputBuilder_.clear();
        }
        if (valueInfoBuilder_ == null) {
          valueInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          valueInfoBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxProto3.internal_static_onnx_GraphProto_descriptor;
      }

      public onnx.OnnxProto3.GraphProto getDefaultInstanceForType() {
        return onnx.OnnxProto3.GraphProto.getDefaultInstance();
      }

      public onnx.OnnxProto3.GraphProto build() {
        onnx.OnnxProto3.GraphProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public onnx.OnnxProto3.GraphProto buildPartial() {
        onnx.OnnxProto3.GraphProto result = new onnx.OnnxProto3.GraphProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (nodeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            node_ = java.util.Collections.unmodifiableList(node_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.node_ = node_;
        } else {
          result.node_ = nodeBuilder_.build();
        }
        result.name_ = name_;
        if (initializerBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            initializer_ = java.util.Collections.unmodifiableList(initializer_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.initializer_ = initializer_;
        } else {
          result.initializer_ = initializerBuilder_.build();
        }
        result.docString_ = docString_;
        if (inputBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            input_ = java.util.Collections.unmodifiableList(input_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.input_ = input_;
        } else {
          result.input_ = inputBuilder_.build();
        }
        if (outputBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            output_ = java.util.Collections.unmodifiableList(output_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.output_ = output_;
        } else {
          result.output_ = outputBuilder_.build();
        }
        if (valueInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            valueInfo_ = java.util.Collections.unmodifiableList(valueInfo_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.valueInfo_ = valueInfo_;
        } else {
          result.valueInfo_ = valueInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxProto3.GraphProto) {
          return mergeFrom((onnx.OnnxProto3.GraphProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxProto3.GraphProto other) {
        if (other == onnx.OnnxProto3.GraphProto.getDefaultInstance()) return this;
        if (nodeBuilder_ == null) {
          if (!other.node_.isEmpty()) {
            if (node_.isEmpty()) {
              node_ = other.node_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodeIsMutable();
              node_.addAll(other.node_);
            }
            onChanged();
          }
        } else {
          if (!other.node_.isEmpty()) {
            if (nodeBuilder_.isEmpty()) {
              nodeBuilder_.dispose();
              nodeBuilder_ = null;
              node_ = other.node_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodeFieldBuilder() : null;
            } else {
              nodeBuilder_.addAllMessages(other.node_);
            }
          }
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (initializerBuilder_ == null) {
          if (!other.initializer_.isEmpty()) {
            if (initializer_.isEmpty()) {
              initializer_ = other.initializer_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureInitializerIsMutable();
              initializer_.addAll(other.initializer_);
            }
            onChanged();
          }
        } else {
          if (!other.initializer_.isEmpty()) {
            if (initializerBuilder_.isEmpty()) {
              initializerBuilder_.dispose();
              initializerBuilder_ = null;
              initializer_ = other.initializer_;
              bitField0_ = (bitField0_ & ~0x00000004);
              initializerBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInitializerFieldBuilder() : null;
            } else {
              initializerBuilder_.addAllMessages(other.initializer_);
            }
          }
        }
        if (!other.getDocString().isEmpty()) {
          docString_ = other.docString_;
          onChanged();
        }
        if (inputBuilder_ == null) {
          if (!other.input_.isEmpty()) {
            if (input_.isEmpty()) {
              input_ = other.input_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureInputIsMutable();
              input_.addAll(other.input_);
            }
            onChanged();
          }
        } else {
          if (!other.input_.isEmpty()) {
            if (inputBuilder_.isEmpty()) {
              inputBuilder_.dispose();
              inputBuilder_ = null;
              input_ = other.input_;
              bitField0_ = (bitField0_ & ~0x00000010);
              inputBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInputFieldBuilder() : null;
            } else {
              inputBuilder_.addAllMessages(other.input_);
            }
          }
        }
        if (outputBuilder_ == null) {
          if (!other.output_.isEmpty()) {
            if (output_.isEmpty()) {
              output_ = other.output_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureOutputIsMutable();
              output_.addAll(other.output_);
            }
            onChanged();
          }
        } else {
          if (!other.output_.isEmpty()) {
            if (outputBuilder_.isEmpty()) {
              outputBuilder_.dispose();
              outputBuilder_ = null;
              output_ = other.output_;
              bitField0_ = (bitField0_ & ~0x00000020);
              outputBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOutputFieldBuilder() : null;
            } else {
              outputBuilder_.addAllMessages(other.output_);
            }
          }
        }
        if (valueInfoBuilder_ == null) {
          if (!other.valueInfo_.isEmpty()) {
            if (valueInfo_.isEmpty()) {
              valueInfo_ = other.valueInfo_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureValueInfoIsMutable();
              valueInfo_.addAll(other.valueInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.valueInfo_.isEmpty()) {
            if (valueInfoBuilder_.isEmpty()) {
              valueInfoBuilder_.dispose();
              valueInfoBuilder_ = null;
              valueInfo_ = other.valueInfo_;
              bitField0_ = (bitField0_ & ~0x00000040);
              valueInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValueInfoFieldBuilder() : null;
            } else {
              valueInfoBuilder_.addAllMessages(other.valueInfo_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxProto3.GraphProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxProto3.GraphProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<onnx.OnnxProto3.NodeProto> node_ =
        java.util.Collections.emptyList();
      private void ensureNodeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          node_ = new java.util.ArrayList<onnx.OnnxProto3.NodeProto>(node_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.NodeProto, onnx.OnnxProto3.NodeProto.Builder, onnx.OnnxProto3.NodeProtoOrBuilder> nodeBuilder_;

      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public java.util.List<onnx.OnnxProto3.NodeProto> getNodeList() {
        if (nodeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(node_);
        } else {
          return nodeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public int getNodeCount() {
        if (nodeBuilder_ == null) {
          return node_.size();
        } else {
          return nodeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public onnx.OnnxProto3.NodeProto getNode(int index) {
        if (nodeBuilder_ == null) {
          return node_.get(index);
        } else {
          return nodeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public Builder setNode(
          int index, onnx.OnnxProto3.NodeProto value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.set(index, value);
          onChanged();
        } else {
          nodeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public Builder setNode(
          int index, onnx.OnnxProto3.NodeProto.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public Builder addNode(onnx.OnnxProto3.NodeProto value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.add(value);
          onChanged();
        } else {
          nodeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public Builder addNode(
          int index, onnx.OnnxProto3.NodeProto value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.add(index, value);
          onChanged();
        } else {
          nodeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public Builder addNode(
          onnx.OnnxProto3.NodeProto.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.add(builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public Builder addNode(
          int index, onnx.OnnxProto3.NodeProto.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public Builder addAllNode(
          java.lang.Iterable<? extends onnx.OnnxProto3.NodeProto> values) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, node_);
          onChanged();
        } else {
          nodeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public Builder clearNode() {
        if (nodeBuilder_ == null) {
          node_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public Builder removeNode(int index) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.remove(index);
          onChanged();
        } else {
          nodeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public onnx.OnnxProto3.NodeProto.Builder getNodeBuilder(
          int index) {
        return getNodeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public onnx.OnnxProto3.NodeProtoOrBuilder getNodeOrBuilder(
          int index) {
        if (nodeBuilder_ == null) {
          return node_.get(index);  } else {
          return nodeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.NodeProtoOrBuilder> 
           getNodeOrBuilderList() {
        if (nodeBuilder_ != null) {
          return nodeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(node_);
        }
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public onnx.OnnxProto3.NodeProto.Builder addNodeBuilder() {
        return getNodeFieldBuilder().addBuilder(
            onnx.OnnxProto3.NodeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public onnx.OnnxProto3.NodeProto.Builder addNodeBuilder(
          int index) {
        return getNodeFieldBuilder().addBuilder(
            index, onnx.OnnxProto3.NodeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * The nodes in the graph.
       * </pre>
       *
       * <code>repeated .onnx.NodeProto node = 1;</code>
       */
      public java.util.List<onnx.OnnxProto3.NodeProto.Builder> 
           getNodeBuilderList() {
        return getNodeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.NodeProto, onnx.OnnxProto3.NodeProto.Builder, onnx.OnnxProto3.NodeProtoOrBuilder> 
          getNodeFieldBuilder() {
        if (nodeBuilder_ == null) {
          nodeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxProto3.NodeProto, onnx.OnnxProto3.NodeProto.Builder, onnx.OnnxProto3.NodeProtoOrBuilder>(
                  node_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        return nodeBuilder_;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The opName of the graph.
       * </pre>
       *
       * <code>string opName = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The opName of the graph.
       * </pre>
       *
       * <code>string opName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The opName of the graph.
       * </pre>
       *
       * <code>string opName = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The opName of the graph.
       * </pre>
       *
       * <code>string opName = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The opName of the graph.
       * </pre>
       *
       * <code>string opName = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<onnx.OnnxProto3.TensorProto> initializer_ =
        java.util.Collections.emptyList();
      private void ensureInitializerIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          initializer_ = new java.util.ArrayList<onnx.OnnxProto3.TensorProto>(initializer_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.TensorProto, onnx.OnnxProto3.TensorProto.Builder, onnx.OnnxProto3.TensorProtoOrBuilder> initializerBuilder_;

      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public java.util.List<onnx.OnnxProto3.TensorProto> getInitializerList() {
        if (initializerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(initializer_);
        } else {
          return initializerBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public int getInitializerCount() {
        if (initializerBuilder_ == null) {
          return initializer_.size();
        } else {
          return initializerBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public onnx.OnnxProto3.TensorProto getInitializer(int index) {
        if (initializerBuilder_ == null) {
          return initializer_.get(index);
        } else {
          return initializerBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public Builder setInitializer(
          int index, onnx.OnnxProto3.TensorProto value) {
        if (initializerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInitializerIsMutable();
          initializer_.set(index, value);
          onChanged();
        } else {
          initializerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public Builder setInitializer(
          int index, onnx.OnnxProto3.TensorProto.Builder builderForValue) {
        if (initializerBuilder_ == null) {
          ensureInitializerIsMutable();
          initializer_.set(index, builderForValue.build());
          onChanged();
        } else {
          initializerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public Builder addInitializer(onnx.OnnxProto3.TensorProto value) {
        if (initializerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInitializerIsMutable();
          initializer_.add(value);
          onChanged();
        } else {
          initializerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public Builder addInitializer(
          int index, onnx.OnnxProto3.TensorProto value) {
        if (initializerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInitializerIsMutable();
          initializer_.add(index, value);
          onChanged();
        } else {
          initializerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public Builder addInitializer(
          onnx.OnnxProto3.TensorProto.Builder builderForValue) {
        if (initializerBuilder_ == null) {
          ensureInitializerIsMutable();
          initializer_.add(builderForValue.build());
          onChanged();
        } else {
          initializerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public Builder addInitializer(
          int index, onnx.OnnxProto3.TensorProto.Builder builderForValue) {
        if (initializerBuilder_ == null) {
          ensureInitializerIsMutable();
          initializer_.add(index, builderForValue.build());
          onChanged();
        } else {
          initializerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public Builder addAllInitializer(
          java.lang.Iterable<? extends onnx.OnnxProto3.TensorProto> values) {
        if (initializerBuilder_ == null) {
          ensureInitializerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, initializer_);
          onChanged();
        } else {
          initializerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public Builder clearInitializer() {
        if (initializerBuilder_ == null) {
          initializer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          initializerBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public Builder removeInitializer(int index) {
        if (initializerBuilder_ == null) {
          ensureInitializerIsMutable();
          initializer_.remove(index);
          onChanged();
        } else {
          initializerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public onnx.OnnxProto3.TensorProto.Builder getInitializerBuilder(
          int index) {
        return getInitializerFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public onnx.OnnxProto3.TensorProtoOrBuilder getInitializerOrBuilder(
          int index) {
        if (initializerBuilder_ == null) {
          return initializer_.get(index);  } else {
          return initializerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.TensorProtoOrBuilder> 
           getInitializerOrBuilderList() {
        if (initializerBuilder_ != null) {
          return initializerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(initializer_);
        }
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public onnx.OnnxProto3.TensorProto.Builder addInitializerBuilder() {
        return getInitializerFieldBuilder().addBuilder(
            onnx.OnnxProto3.TensorProto.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public onnx.OnnxProto3.TensorProto.Builder addInitializerBuilder(
          int index) {
        return getInitializerFieldBuilder().addBuilder(
            index, onnx.OnnxProto3.TensorProto.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of named tensor values (constants), used to specify default
       * values for some of the inputs of the graph.
       * Each TensorProto entry must have a distinct opName (within the list) that
       * also appears in the input list.
       * In an evaluation, the default value specified here is used if and only if
       * user specifies no value for the corresponding input parameter.
       * May be used to pass serialized parameters for networks.
       * </pre>
       *
       * <code>repeated .onnx.TensorProto initializer = 5;</code>
       */
      public java.util.List<onnx.OnnxProto3.TensorProto.Builder> 
           getInitializerBuilderList() {
        return getInitializerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.TensorProto, onnx.OnnxProto3.TensorProto.Builder, onnx.OnnxProto3.TensorProtoOrBuilder> 
          getInitializerFieldBuilder() {
        if (initializerBuilder_ == null) {
          initializerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxProto3.TensorProto, onnx.OnnxProto3.TensorProto.Builder, onnx.OnnxProto3.TensorProtoOrBuilder>(
                  initializer_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          initializer_ = null;
        }
        return initializerBuilder_;
      }

      private java.lang.Object docString_ = "";
      /**
       * <pre>
       * A human-readable documentation for this graph. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 10;</code>
       */
      public java.lang.String getDocString() {
        java.lang.Object ref = docString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this graph. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 10;</code>
       */
      public com.google.protobuf.ByteString
          getDocStringBytes() {
        java.lang.Object ref = docString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this graph. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 10;</code>
       */
      public Builder setDocString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this graph. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 10;</code>
       */
      public Builder clearDocString() {
        
        docString_ = getDefaultInstance().getDocString();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this graph. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 10;</code>
       */
      public Builder setDocStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docString_ = value;
        onChanged();
        return this;
      }

      private java.util.List<onnx.OnnxProto3.ValueInfoProto> input_ =
        java.util.Collections.emptyList();
      private void ensureInputIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          input_ = new java.util.ArrayList<onnx.OnnxProto3.ValueInfoProto>(input_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.ValueInfoProto, onnx.OnnxProto3.ValueInfoProto.Builder, onnx.OnnxProto3.ValueInfoProtoOrBuilder> inputBuilder_;

      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public java.util.List<onnx.OnnxProto3.ValueInfoProto> getInputList() {
        if (inputBuilder_ == null) {
          return java.util.Collections.unmodifiableList(input_);
        } else {
          return inputBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public int getInputCount() {
        if (inputBuilder_ == null) {
          return input_.size();
        } else {
          return inputBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto getInput(int index) {
        if (inputBuilder_ == null) {
          return input_.get(index);
        } else {
          return inputBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public Builder setInput(
          int index, onnx.OnnxProto3.ValueInfoProto value) {
        if (inputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputIsMutable();
          input_.set(index, value);
          onChanged();
        } else {
          inputBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public Builder setInput(
          int index, onnx.OnnxProto3.ValueInfoProto.Builder builderForValue) {
        if (inputBuilder_ == null) {
          ensureInputIsMutable();
          input_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public Builder addInput(onnx.OnnxProto3.ValueInfoProto value) {
        if (inputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputIsMutable();
          input_.add(value);
          onChanged();
        } else {
          inputBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public Builder addInput(
          int index, onnx.OnnxProto3.ValueInfoProto value) {
        if (inputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputIsMutable();
          input_.add(index, value);
          onChanged();
        } else {
          inputBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public Builder addInput(
          onnx.OnnxProto3.ValueInfoProto.Builder builderForValue) {
        if (inputBuilder_ == null) {
          ensureInputIsMutable();
          input_.add(builderForValue.build());
          onChanged();
        } else {
          inputBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public Builder addInput(
          int index, onnx.OnnxProto3.ValueInfoProto.Builder builderForValue) {
        if (inputBuilder_ == null) {
          ensureInputIsMutable();
          input_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public Builder addAllInput(
          java.lang.Iterable<? extends onnx.OnnxProto3.ValueInfoProto> values) {
        if (inputBuilder_ == null) {
          ensureInputIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, input_);
          onChanged();
        } else {
          inputBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public Builder clearInput() {
        if (inputBuilder_ == null) {
          input_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          inputBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public Builder removeInput(int index) {
        if (inputBuilder_ == null) {
          ensureInputIsMutable();
          input_.remove(index);
          onChanged();
        } else {
          inputBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto.Builder getInputBuilder(
          int index) {
        return getInputFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public onnx.OnnxProto3.ValueInfoProtoOrBuilder getInputOrBuilder(
          int index) {
        if (inputBuilder_ == null) {
          return input_.get(index);  } else {
          return inputBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
           getInputOrBuilderList() {
        if (inputBuilder_ != null) {
          return inputBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(input_);
        }
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto.Builder addInputBuilder() {
        return getInputFieldBuilder().addBuilder(
            onnx.OnnxProto3.ValueInfoProto.getDefaultInstance());
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto.Builder addInputBuilder(
          int index) {
        return getInputFieldBuilder().addBuilder(
            index, onnx.OnnxProto3.ValueInfoProto.getDefaultInstance());
      }
      /**
       * <pre>
       * The inputs and outputs of the graph.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto input = 11;</code>
       */
      public java.util.List<onnx.OnnxProto3.ValueInfoProto.Builder> 
           getInputBuilderList() {
        return getInputFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.ValueInfoProto, onnx.OnnxProto3.ValueInfoProto.Builder, onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
          getInputFieldBuilder() {
        if (inputBuilder_ == null) {
          inputBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxProto3.ValueInfoProto, onnx.OnnxProto3.ValueInfoProto.Builder, onnx.OnnxProto3.ValueInfoProtoOrBuilder>(
                  input_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          input_ = null;
        }
        return inputBuilder_;
      }

      private java.util.List<onnx.OnnxProto3.ValueInfoProto> output_ =
        java.util.Collections.emptyList();
      private void ensureOutputIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          output_ = new java.util.ArrayList<onnx.OnnxProto3.ValueInfoProto>(output_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.ValueInfoProto, onnx.OnnxProto3.ValueInfoProto.Builder, onnx.OnnxProto3.ValueInfoProtoOrBuilder> outputBuilder_;

      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public java.util.List<onnx.OnnxProto3.ValueInfoProto> getOutputList() {
        if (outputBuilder_ == null) {
          return java.util.Collections.unmodifiableList(output_);
        } else {
          return outputBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public int getOutputCount() {
        if (outputBuilder_ == null) {
          return output_.size();
        } else {
          return outputBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto getOutput(int index) {
        if (outputBuilder_ == null) {
          return output_.get(index);
        } else {
          return outputBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public Builder setOutput(
          int index, onnx.OnnxProto3.ValueInfoProto value) {
        if (outputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputIsMutable();
          output_.set(index, value);
          onChanged();
        } else {
          outputBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public Builder setOutput(
          int index, onnx.OnnxProto3.ValueInfoProto.Builder builderForValue) {
        if (outputBuilder_ == null) {
          ensureOutputIsMutable();
          output_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public Builder addOutput(onnx.OnnxProto3.ValueInfoProto value) {
        if (outputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputIsMutable();
          output_.add(value);
          onChanged();
        } else {
          outputBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public Builder addOutput(
          int index, onnx.OnnxProto3.ValueInfoProto value) {
        if (outputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputIsMutable();
          output_.add(index, value);
          onChanged();
        } else {
          outputBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public Builder addOutput(
          onnx.OnnxProto3.ValueInfoProto.Builder builderForValue) {
        if (outputBuilder_ == null) {
          ensureOutputIsMutable();
          output_.add(builderForValue.build());
          onChanged();
        } else {
          outputBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public Builder addOutput(
          int index, onnx.OnnxProto3.ValueInfoProto.Builder builderForValue) {
        if (outputBuilder_ == null) {
          ensureOutputIsMutable();
          output_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public Builder addAllOutput(
          java.lang.Iterable<? extends onnx.OnnxProto3.ValueInfoProto> values) {
        if (outputBuilder_ == null) {
          ensureOutputIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, output_);
          onChanged();
        } else {
          outputBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public Builder clearOutput() {
        if (outputBuilder_ == null) {
          output_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          outputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public Builder removeOutput(int index) {
        if (outputBuilder_ == null) {
          ensureOutputIsMutable();
          output_.remove(index);
          onChanged();
        } else {
          outputBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto.Builder getOutputBuilder(
          int index) {
        return getOutputFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public onnx.OnnxProto3.ValueInfoProtoOrBuilder getOutputOrBuilder(
          int index) {
        if (outputBuilder_ == null) {
          return output_.get(index);  } else {
          return outputBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
           getOutputOrBuilderList() {
        if (outputBuilder_ != null) {
          return outputBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(output_);
        }
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto.Builder addOutputBuilder() {
        return getOutputFieldBuilder().addBuilder(
            onnx.OnnxProto3.ValueInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto.Builder addOutputBuilder(
          int index) {
        return getOutputFieldBuilder().addBuilder(
            index, onnx.OnnxProto3.ValueInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .onnx.ValueInfoProto output = 12;</code>
       */
      public java.util.List<onnx.OnnxProto3.ValueInfoProto.Builder> 
           getOutputBuilderList() {
        return getOutputFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.ValueInfoProto, onnx.OnnxProto3.ValueInfoProto.Builder, onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
          getOutputFieldBuilder() {
        if (outputBuilder_ == null) {
          outputBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxProto3.ValueInfoProto, onnx.OnnxProto3.ValueInfoProto.Builder, onnx.OnnxProto3.ValueInfoProtoOrBuilder>(
                  output_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          output_ = null;
        }
        return outputBuilder_;
      }

      private java.util.List<onnx.OnnxProto3.ValueInfoProto> valueInfo_ =
        java.util.Collections.emptyList();
      private void ensureValueInfoIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          valueInfo_ = new java.util.ArrayList<onnx.OnnxProto3.ValueInfoProto>(valueInfo_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.ValueInfoProto, onnx.OnnxProto3.ValueInfoProto.Builder, onnx.OnnxProto3.ValueInfoProtoOrBuilder> valueInfoBuilder_;

      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public java.util.List<onnx.OnnxProto3.ValueInfoProto> getValueInfoList() {
        if (valueInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(valueInfo_);
        } else {
          return valueInfoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public int getValueInfoCount() {
        if (valueInfoBuilder_ == null) {
          return valueInfo_.size();
        } else {
          return valueInfoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto getValueInfo(int index) {
        if (valueInfoBuilder_ == null) {
          return valueInfo_.get(index);
        } else {
          return valueInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public Builder setValueInfo(
          int index, onnx.OnnxProto3.ValueInfoProto value) {
        if (valueInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueInfoIsMutable();
          valueInfo_.set(index, value);
          onChanged();
        } else {
          valueInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public Builder setValueInfo(
          int index, onnx.OnnxProto3.ValueInfoProto.Builder builderForValue) {
        if (valueInfoBuilder_ == null) {
          ensureValueInfoIsMutable();
          valueInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public Builder addValueInfo(onnx.OnnxProto3.ValueInfoProto value) {
        if (valueInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueInfoIsMutable();
          valueInfo_.add(value);
          onChanged();
        } else {
          valueInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public Builder addValueInfo(
          int index, onnx.OnnxProto3.ValueInfoProto value) {
        if (valueInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueInfoIsMutable();
          valueInfo_.add(index, value);
          onChanged();
        } else {
          valueInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public Builder addValueInfo(
          onnx.OnnxProto3.ValueInfoProto.Builder builderForValue) {
        if (valueInfoBuilder_ == null) {
          ensureValueInfoIsMutable();
          valueInfo_.add(builderForValue.build());
          onChanged();
        } else {
          valueInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public Builder addValueInfo(
          int index, onnx.OnnxProto3.ValueInfoProto.Builder builderForValue) {
        if (valueInfoBuilder_ == null) {
          ensureValueInfoIsMutable();
          valueInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public Builder addAllValueInfo(
          java.lang.Iterable<? extends onnx.OnnxProto3.ValueInfoProto> values) {
        if (valueInfoBuilder_ == null) {
          ensureValueInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, valueInfo_);
          onChanged();
        } else {
          valueInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public Builder clearValueInfo() {
        if (valueInfoBuilder_ == null) {
          valueInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          valueInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public Builder removeValueInfo(int index) {
        if (valueInfoBuilder_ == null) {
          ensureValueInfoIsMutable();
          valueInfo_.remove(index);
          onChanged();
        } else {
          valueInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto.Builder getValueInfoBuilder(
          int index) {
        return getValueInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public onnx.OnnxProto3.ValueInfoProtoOrBuilder getValueInfoOrBuilder(
          int index) {
        if (valueInfoBuilder_ == null) {
          return valueInfo_.get(index);  } else {
          return valueInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
           getValueInfoOrBuilderList() {
        if (valueInfoBuilder_ != null) {
          return valueInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(valueInfo_);
        }
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto.Builder addValueInfoBuilder() {
        return getValueInfoFieldBuilder().addBuilder(
            onnx.OnnxProto3.ValueInfoProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public onnx.OnnxProto3.ValueInfoProto.Builder addValueInfoBuilder(
          int index) {
        return getValueInfoFieldBuilder().addBuilder(
            index, onnx.OnnxProto3.ValueInfoProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Information for the values in the graph. The ValueInfoProto.opName's
       * must be distinct. It is optional for a value to appear in value_info list.
       * </pre>
       *
       * <code>repeated .onnx.ValueInfoProto value_info = 13;</code>
       */
      public java.util.List<onnx.OnnxProto3.ValueInfoProto.Builder> 
           getValueInfoBuilderList() {
        return getValueInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          onnx.OnnxProto3.ValueInfoProto, onnx.OnnxProto3.ValueInfoProto.Builder, onnx.OnnxProto3.ValueInfoProtoOrBuilder> 
          getValueInfoFieldBuilder() {
        if (valueInfoBuilder_ == null) {
          valueInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              onnx.OnnxProto3.ValueInfoProto, onnx.OnnxProto3.ValueInfoProto.Builder, onnx.OnnxProto3.ValueInfoProtoOrBuilder>(
                  valueInfo_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          valueInfo_ = null;
        }
        return valueInfoBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:onnx.GraphProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.GraphProto)
    private static final onnx.OnnxProto3.GraphProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxProto3.GraphProto();
    }

    public static onnx.OnnxProto3.GraphProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphProto>
        PARSER = new com.google.protobuf.AbstractParser<GraphProto>() {
      public GraphProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GraphProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GraphProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphProto> getParserForType() {
      return PARSER;
    }

    public onnx.OnnxProto3.GraphProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TensorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.TensorProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The shape of the tensor.
     * </pre>
     *
     * <code>repeated int64 dims = 1;</code>
     */
    java.util.List<java.lang.Long> getDimsList();
    /**
     * <pre>
     * The shape of the tensor.
     * </pre>
     *
     * <code>repeated int64 dims = 1;</code>
     */
    int getDimsCount();
    /**
     * <pre>
     * The shape of the tensor.
     * </pre>
     *
     * <code>repeated int64 dims = 1;</code>
     */
    long getDims(int index);

    /**
     * <pre>
     * The data type of the tensor.
     * </pre>
     *
     * <code>.onnx.TensorProto.DataType data_type = 2;</code>
     */
    int getDataTypeValue();
    /**
     * <pre>
     * The data type of the tensor.
     * </pre>
     *
     * <code>.onnx.TensorProto.DataType data_type = 2;</code>
     */
    onnx.OnnxProto3.TensorProto.DataType getDataType();

    /**
     * <code>.onnx.TensorProto.Segment segment = 3;</code>
     */
    boolean hasSegment();
    /**
     * <code>.onnx.TensorProto.Segment segment = 3;</code>
     */
    onnx.OnnxProto3.TensorProto.Segment getSegment();
    /**
     * <code>.onnx.TensorProto.Segment segment = 3;</code>
     */
    onnx.OnnxProto3.TensorProto.SegmentOrBuilder getSegmentOrBuilder();

    /**
     * <pre>
     * For float and complex64 values
     * Complex64 tensors are encoded as a single array of floats,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
     * </pre>
     *
     * <code>repeated float float_data = 4 [packed = true];</code>
     */
    java.util.List<java.lang.Float> getFloatDataList();
    /**
     * <pre>
     * For float and complex64 values
     * Complex64 tensors are encoded as a single array of floats,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
     * </pre>
     *
     * <code>repeated float float_data = 4 [packed = true];</code>
     */
    int getFloatDataCount();
    /**
     * <pre>
     * For float and complex64 values
     * Complex64 tensors are encoded as a single array of floats,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
     * </pre>
     *
     * <code>repeated float float_data = 4 [packed = true];</code>
     */
    float getFloatData(int index);

    /**
     * <pre>
     * For int32, uint8, int8, uint16, int16, bool, and float16 values
     * float16 values must be bit-wise converted to an uint16_t prior
     * to writing to the buffer.
     * When this field is present, the data_type field MUST be
     * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
     * </pre>
     *
     * <code>repeated int32 int32_data = 5 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getInt32DataList();
    /**
     * <pre>
     * For int32, uint8, int8, uint16, int16, bool, and float16 values
     * float16 values must be bit-wise converted to an uint16_t prior
     * to writing to the buffer.
     * When this field is present, the data_type field MUST be
     * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
     * </pre>
     *
     * <code>repeated int32 int32_data = 5 [packed = true];</code>
     */
    int getInt32DataCount();
    /**
     * <pre>
     * For int32, uint8, int8, uint16, int16, bool, and float16 values
     * float16 values must be bit-wise converted to an uint16_t prior
     * to writing to the buffer.
     * When this field is present, the data_type field MUST be
     * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
     * </pre>
     *
     * <code>repeated int32 int32_data = 5 [packed = true];</code>
     */
    int getInt32Data(int index);

    /**
     * <pre>
     * For strings.
     * Each element of string_data is a UTF-8 encoded Unicode
     * string. No trailing null, no leading BOM. The protobuf "string"
     * scalar type is not used to match ML community conventions.
     * When this field is present, the data_type field MUST be STRING
     * </pre>
     *
     * <code>repeated bytes string_data = 6;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getStringDataList();
    /**
     * <pre>
     * For strings.
     * Each element of string_data is a UTF-8 encoded Unicode
     * string. No trailing null, no leading BOM. The protobuf "string"
     * scalar type is not used to match ML community conventions.
     * When this field is present, the data_type field MUST be STRING
     * </pre>
     *
     * <code>repeated bytes string_data = 6;</code>
     */
    int getStringDataCount();
    /**
     * <pre>
     * For strings.
     * Each element of string_data is a UTF-8 encoded Unicode
     * string. No trailing null, no leading BOM. The protobuf "string"
     * scalar type is not used to match ML community conventions.
     * When this field is present, the data_type field MUST be STRING
     * </pre>
     *
     * <code>repeated bytes string_data = 6;</code>
     */
    com.google.protobuf.ByteString getStringData(int index);

    /**
     * <pre>
     * For int64.
     * When this field is present, the data_type field MUST be INT64
     * </pre>
     *
     * <code>repeated int64 int64_data = 7 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getInt64DataList();
    /**
     * <pre>
     * For int64.
     * When this field is present, the data_type field MUST be INT64
     * </pre>
     *
     * <code>repeated int64 int64_data = 7 [packed = true];</code>
     */
    int getInt64DataCount();
    /**
     * <pre>
     * For int64.
     * When this field is present, the data_type field MUST be INT64
     * </pre>
     *
     * <code>repeated int64 int64_data = 7 [packed = true];</code>
     */
    long getInt64Data(int index);

    /**
     * <pre>
     * Optionally, a opName for the tensor.
     * </pre>
     *
     * <code>string opName = 8;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Optionally, a opName for the tensor.
     * </pre>
     *
     * <code>string opName = 8;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * A human-readable documentation for this tensor. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 12;</code>
     */
    java.lang.String getDocString();
    /**
     * <pre>
     * A human-readable documentation for this tensor. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 12;</code>
     */
    com.google.protobuf.ByteString
        getDocStringBytes();

    /**
     * <pre>
     * Serializations can either use one of the fields above, or use this
     * raw bytes field. The only exception is the string case, where one is
     * required to store the content in the repeated bytes string_data field.
     * When this raw_data field is used to store tensor value, elements MUST
     * be stored in as fixed-width, little-endian order.
     * Floating-point data types MUST be stored in IEEE 754 format.
     * Complex64 elements must be written as two consecutive FLOAT values, real component first.
     * Complex128 elements must be written as two consecutive DOUBLE values, real component first.
     * Boolean type MUST be written one byte per tensor element (00000001 for true, 00000000 for false).
     * Note: the advantage of specific field rather than the raw_data field is
     * that in some cases (e.g. int data), protobuf does a better packing via
     * variable length storage, and may lead to smaller binary footprint.
     * When this field is present, the data_type field MUST NOT be STRING or UNDEFINED
     * </pre>
     *
     * <code>bytes raw_data = 9;</code>
     */
    com.google.protobuf.ByteString getRawData();

    /**
     * <pre>
     * For double
     * Complex64 tensors are encoded as a single array of doubles,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
     * </pre>
     *
     * <code>repeated double double_data = 10 [packed = true];</code>
     */
    java.util.List<java.lang.Double> getDoubleDataList();
    /**
     * <pre>
     * For double
     * Complex64 tensors are encoded as a single array of doubles,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
     * </pre>
     *
     * <code>repeated double double_data = 10 [packed = true];</code>
     */
    int getDoubleDataCount();
    /**
     * <pre>
     * For double
     * Complex64 tensors are encoded as a single array of doubles,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
     * </pre>
     *
     * <code>repeated double double_data = 10 [packed = true];</code>
     */
    double getDoubleData(int index);

    /**
     * <pre>
     * For uint64 and uint32 values
     * When this field is present, the data_type field MUST be
     * UINT32 or UINT64
     * </pre>
     *
     * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getUint64DataList();
    /**
     * <pre>
     * For uint64 and uint32 values
     * When this field is present, the data_type field MUST be
     * UINT32 or UINT64
     * </pre>
     *
     * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
     */
    int getUint64DataCount();
    /**
     * <pre>
     * For uint64 and uint32 values
     * When this field is present, the data_type field MUST be
     * UINT32 or UINT64
     * </pre>
     *
     * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
     */
    long getUint64Data(int index);
  }
  /**
   * <pre>
   * A message defined to store a tensor in its serialized format.
   * </pre>
   *
   * Protobuf type {@code onnx.TensorProto}
   */
  public  static final class TensorProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.TensorProto)
      TensorProtoOrBuilder {
    // Use TensorProto.newBuilder() to construct.
    private TensorProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TensorProto() {
      dims_ = java.util.Collections.emptyList();
      dataType_ = 0;
      floatData_ = java.util.Collections.emptyList();
      int32Data_ = java.util.Collections.emptyList();
      stringData_ = java.util.Collections.emptyList();
      int64Data_ = java.util.Collections.emptyList();
      name_ = "";
      docString_ = "";
      rawData_ = com.google.protobuf.ByteString.EMPTY;
      doubleData_ = java.util.Collections.emptyList();
      uint64Data_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TensorProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dims_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              dims_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                dims_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dims_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              dataType_ = rawValue;
              break;
            }
            case 26: {
              onnx.OnnxProto3.TensorProto.Segment.Builder subBuilder = null;
              if (segment_ != null) {
                subBuilder = segment_.toBuilder();
              }
              segment_ = input.readMessage(onnx.OnnxProto3.TensorProto.Segment.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(segment_);
                segment_ = subBuilder.buildPartial();
              }

              break;
            }
            case 37: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                floatData_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              floatData_.add(input.readFloat());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                floatData_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatData_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                int32Data_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              int32Data_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                int32Data_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                int32Data_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                stringData_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000020;
              }
              stringData_.add(input.readBytes());
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                int64Data_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              int64Data_.add(input.readInt64());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                int64Data_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                int64Data_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 74: {

              rawData_ = input.readBytes();
              break;
            }
            case 81: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                doubleData_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000400;
              }
              doubleData_.add(input.readDouble());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                doubleData_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                doubleData_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                uint64Data_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              uint64Data_.add(input.readUInt64());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                uint64Data_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                uint64Data_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              docString_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dims_ = java.util.Collections.unmodifiableList(dims_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          floatData_ = java.util.Collections.unmodifiableList(floatData_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          int32Data_ = java.util.Collections.unmodifiableList(int32Data_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          stringData_ = java.util.Collections.unmodifiableList(stringData_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          int64Data_ = java.util.Collections.unmodifiableList(int64Data_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          doubleData_ = java.util.Collections.unmodifiableList(doubleData_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          uint64Data_ = java.util.Collections.unmodifiableList(uint64Data_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxProto3.internal_static_onnx_TensorProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxProto3.internal_static_onnx_TensorProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxProto3.TensorProto.class, onnx.OnnxProto3.TensorProto.Builder.class);
    }

    /**
     * Protobuf enum {@code onnx.TensorProto.DataType}
     */
    public enum DataType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINED = 0;</code>
       */
      UNDEFINED(0),
      /**
       * <pre>
       * Basic types.
       * </pre>
       *
       * <code>FLOAT = 1;</code>
       */
      FLOAT(1),
      /**
       * <pre>
       * uint8_t
       * </pre>
       *
       * <code>UINT8 = 2;</code>
       */
      UINT8(2),
      /**
       * <pre>
       * int8_t
       * </pre>
       *
       * <code>INT8 = 3;</code>
       */
      INT8(3),
      /**
       * <pre>
       * uint16_t
       * </pre>
       *
       * <code>UINT16 = 4;</code>
       */
      UINT16(4),
      /**
       * <pre>
       * int16_t
       * </pre>
       *
       * <code>INT16 = 5;</code>
       */
      INT16(5),
      /**
       * <pre>
       * int32_t
       * </pre>
       *
       * <code>INT32 = 6;</code>
       */
      INT32(6),
      /**
       * <pre>
       * int64_t
       * </pre>
       *
       * <code>INT64 = 7;</code>
       */
      INT64(7),
      /**
       * <pre>
       * string
       * </pre>
       *
       * <code>STRING = 8;</code>
       */
      STRING(8),
      /**
       * <pre>
       * bool
       * </pre>
       *
       * <code>BOOL = 9;</code>
       */
      BOOL(9),
      /**
       * <pre>
       * Advanced types
       * </pre>
       *
       * <code>FLOAT16 = 10;</code>
       */
      FLOAT16(10),
      /**
       * <code>DOUBLE = 11;</code>
       */
      DOUBLE(11),
      /**
       * <code>UINT32 = 12;</code>
       */
      UINT32(12),
      /**
       * <code>UINT64 = 13;</code>
       */
      UINT64(13),
      /**
       * <pre>
       * complex with float32 real and imaginary components
       * </pre>
       *
       * <code>COMPLEX64 = 14;</code>
       */
      COMPLEX64(14),
      /**
       * <pre>
       * complex with float64 real and imaginary components
       * </pre>
       *
       * <code>COMPLEX128 = 15;</code>
       */
      COMPLEX128(15),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINED = 0;</code>
       */
      public static final int UNDEFINED_VALUE = 0;
      /**
       * <pre>
       * Basic types.
       * </pre>
       *
       * <code>FLOAT = 1;</code>
       */
      public static final int FLOAT_VALUE = 1;
      /**
       * <pre>
       * uint8_t
       * </pre>
       *
       * <code>UINT8 = 2;</code>
       */
      public static final int UINT8_VALUE = 2;
      /**
       * <pre>
       * int8_t
       * </pre>
       *
       * <code>INT8 = 3;</code>
       */
      public static final int INT8_VALUE = 3;
      /**
       * <pre>
       * uint16_t
       * </pre>
       *
       * <code>UINT16 = 4;</code>
       */
      public static final int UINT16_VALUE = 4;
      /**
       * <pre>
       * int16_t
       * </pre>
       *
       * <code>INT16 = 5;</code>
       */
      public static final int INT16_VALUE = 5;
      /**
       * <pre>
       * int32_t
       * </pre>
       *
       * <code>INT32 = 6;</code>
       */
      public static final int INT32_VALUE = 6;
      /**
       * <pre>
       * int64_t
       * </pre>
       *
       * <code>INT64 = 7;</code>
       */
      public static final int INT64_VALUE = 7;
      /**
       * <pre>
       * string
       * </pre>
       *
       * <code>STRING = 8;</code>
       */
      public static final int STRING_VALUE = 8;
      /**
       * <pre>
       * bool
       * </pre>
       *
       * <code>BOOL = 9;</code>
       */
      public static final int BOOL_VALUE = 9;
      /**
       * <pre>
       * Advanced types
       * </pre>
       *
       * <code>FLOAT16 = 10;</code>
       */
      public static final int FLOAT16_VALUE = 10;
      /**
       * <code>DOUBLE = 11;</code>
       */
      public static final int DOUBLE_VALUE = 11;
      /**
       * <code>UINT32 = 12;</code>
       */
      public static final int UINT32_VALUE = 12;
      /**
       * <code>UINT64 = 13;</code>
       */
      public static final int UINT64_VALUE = 13;
      /**
       * <pre>
       * complex with float32 real and imaginary components
       * </pre>
       *
       * <code>COMPLEX64 = 14;</code>
       */
      public static final int COMPLEX64_VALUE = 14;
      /**
       * <pre>
       * complex with float64 real and imaginary components
       * </pre>
       *
       * <code>COMPLEX128 = 15;</code>
       */
      public static final int COMPLEX128_VALUE = 15;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataType valueOf(int value) {
        return forNumber(value);
      }

      public static DataType forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINED;
          case 1: return FLOAT;
          case 2: return UINT8;
          case 3: return INT8;
          case 4: return UINT16;
          case 5: return INT16;
          case 6: return INT32;
          case 7: return INT64;
          case 8: return STRING;
          case 9: return BOOL;
          case 10: return FLOAT16;
          case 11: return DOUBLE;
          case 12: return UINT32;
          case 13: return UINT64;
          case 14: return COMPLEX64;
          case 15: return COMPLEX128;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DataType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DataType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
              public DataType findValueByNumber(int number) {
                return DataType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return onnx.OnnxProto3.TensorProto.getDescriptor().getEnumTypes().get(0);
      }

      private static final DataType[] VALUES = values();

      public static DataType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DataType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:onnx.TensorProto.DataType)
    }

    public interface SegmentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:onnx.TensorProto.Segment)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int64 begin = 1;</code>
       */
      long getBegin();

      /**
       * <code>int64 end = 2;</code>
       */
      long getEnd();
    }
    /**
     * <pre>
     * For very large tensors, we may want to store them in chunks, in which
     * case the following fields will specify the segment that is stored in
     * the current TensorProto.
     * </pre>
     *
     * Protobuf type {@code onnx.TensorProto.Segment}
     */
    public  static final class Segment extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:onnx.TensorProto.Segment)
        SegmentOrBuilder {
      // Use Segment.newBuilder() to construct.
      private Segment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Segment() {
        begin_ = 0L;
        end_ = 0L;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Segment(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                begin_ = input.readInt64();
                break;
              }
              case 16: {

                end_ = input.readInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_TensorProto_Segment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_TensorProto_Segment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.TensorProto.Segment.class, onnx.OnnxProto3.TensorProto.Segment.Builder.class);
      }

      public static final int BEGIN_FIELD_NUMBER = 1;
      private long begin_;
      /**
       * <code>int64 begin = 1;</code>
       */
      public long getBegin() {
        return begin_;
      }

      public static final int END_FIELD_NUMBER = 2;
      private long end_;
      /**
       * <code>int64 end = 2;</code>
       */
      public long getEnd() {
        return end_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (begin_ != 0L) {
          output.writeInt64(1, begin_);
        }
        if (end_ != 0L) {
          output.writeInt64(2, end_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (begin_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, begin_);
        }
        if (end_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, end_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof onnx.OnnxProto3.TensorProto.Segment)) {
          return super.equals(obj);
        }
        onnx.OnnxProto3.TensorProto.Segment other = (onnx.OnnxProto3.TensorProto.Segment) obj;

        boolean result = true;
        result = result && (getBegin()
            == other.getBegin());
        result = result && (getEnd()
            == other.getEnd());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + BEGIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getBegin());
        hash = (37 * hash) + END_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEnd());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static onnx.OnnxProto3.TensorProto.Segment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static onnx.OnnxProto3.TensorProto.Segment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static onnx.OnnxProto3.TensorProto.Segment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static onnx.OnnxProto3.TensorProto.Segment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static onnx.OnnxProto3.TensorProto.Segment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static onnx.OnnxProto3.TensorProto.Segment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static onnx.OnnxProto3.TensorProto.Segment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static onnx.OnnxProto3.TensorProto.Segment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static onnx.OnnxProto3.TensorProto.Segment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static onnx.OnnxProto3.TensorProto.Segment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(onnx.OnnxProto3.TensorProto.Segment prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * For very large tensors, we may want to store them in chunks, in which
       * case the following fields will specify the segment that is stored in
       * the current TensorProto.
       * </pre>
       *
       * Protobuf type {@code onnx.TensorProto.Segment}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:onnx.TensorProto.Segment)
          onnx.OnnxProto3.TensorProto.SegmentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return onnx.OnnxProto3.internal_static_onnx_TensorProto_Segment_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return onnx.OnnxProto3.internal_static_onnx_TensorProto_Segment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  onnx.OnnxProto3.TensorProto.Segment.class, onnx.OnnxProto3.TensorProto.Segment.Builder.class);
        }

        // Construct using onnx.OnnxProto3.TensorProto.Segment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          begin_ = 0L;

          end_ = 0L;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return onnx.OnnxProto3.internal_static_onnx_TensorProto_Segment_descriptor;
        }

        public onnx.OnnxProto3.TensorProto.Segment getDefaultInstanceForType() {
          return onnx.OnnxProto3.TensorProto.Segment.getDefaultInstance();
        }

        public onnx.OnnxProto3.TensorProto.Segment build() {
          onnx.OnnxProto3.TensorProto.Segment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public onnx.OnnxProto3.TensorProto.Segment buildPartial() {
          onnx.OnnxProto3.TensorProto.Segment result = new onnx.OnnxProto3.TensorProto.Segment(this);
          result.begin_ = begin_;
          result.end_ = end_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof onnx.OnnxProto3.TensorProto.Segment) {
            return mergeFrom((onnx.OnnxProto3.TensorProto.Segment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(onnx.OnnxProto3.TensorProto.Segment other) {
          if (other == onnx.OnnxProto3.TensorProto.Segment.getDefaultInstance()) return this;
          if (other.getBegin() != 0L) {
            setBegin(other.getBegin());
          }
          if (other.getEnd() != 0L) {
            setEnd(other.getEnd());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          onnx.OnnxProto3.TensorProto.Segment parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (onnx.OnnxProto3.TensorProto.Segment) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private long begin_ ;
        /**
         * <code>int64 begin = 1;</code>
         */
        public long getBegin() {
          return begin_;
        }
        /**
         * <code>int64 begin = 1;</code>
         */
        public Builder setBegin(long value) {
          
          begin_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int64 begin = 1;</code>
         */
        public Builder clearBegin() {
          
          begin_ = 0L;
          onChanged();
          return this;
        }

        private long end_ ;
        /**
         * <code>int64 end = 2;</code>
         */
        public long getEnd() {
          return end_;
        }
        /**
         * <code>int64 end = 2;</code>
         */
        public Builder setEnd(long value) {
          
          end_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int64 end = 2;</code>
         */
        public Builder clearEnd() {
          
          end_ = 0L;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:onnx.TensorProto.Segment)
      }

      // @@protoc_insertion_point(class_scope:onnx.TensorProto.Segment)
      private static final onnx.OnnxProto3.TensorProto.Segment DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new onnx.OnnxProto3.TensorProto.Segment();
      }

      public static onnx.OnnxProto3.TensorProto.Segment getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Segment>
          PARSER = new com.google.protobuf.AbstractParser<Segment>() {
        public Segment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Segment(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Segment> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Segment> getParserForType() {
        return PARSER;
      }

      public onnx.OnnxProto3.TensorProto.Segment getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int DIMS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> dims_;
    /**
     * <pre>
     * The shape of the tensor.
     * </pre>
     *
     * <code>repeated int64 dims = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getDimsList() {
      return dims_;
    }
    /**
     * <pre>
     * The shape of the tensor.
     * </pre>
     *
     * <code>repeated int64 dims = 1;</code>
     */
    public int getDimsCount() {
      return dims_.size();
    }
    /**
     * <pre>
     * The shape of the tensor.
     * </pre>
     *
     * <code>repeated int64 dims = 1;</code>
     */
    public long getDims(int index) {
      return dims_.get(index);
    }
    private int dimsMemoizedSerializedSize = -1;

    public static final int DATA_TYPE_FIELD_NUMBER = 2;
    private int dataType_;
    /**
     * <pre>
     * The data type of the tensor.
     * </pre>
     *
     * <code>.onnx.TensorProto.DataType data_type = 2;</code>
     */
    public int getDataTypeValue() {
      return dataType_;
    }
    /**
     * <pre>
     * The data type of the tensor.
     * </pre>
     *
     * <code>.onnx.TensorProto.DataType data_type = 2;</code>
     */
    public onnx.OnnxProto3.TensorProto.DataType getDataType() {
      onnx.OnnxProto3.TensorProto.DataType result = onnx.OnnxProto3.TensorProto.DataType.valueOf(dataType_);
      return result == null ? onnx.OnnxProto3.TensorProto.DataType.UNRECOGNIZED : result;
    }

    public static final int SEGMENT_FIELD_NUMBER = 3;
    private onnx.OnnxProto3.TensorProto.Segment segment_;
    /**
     * <code>.onnx.TensorProto.Segment segment = 3;</code>
     */
    public boolean hasSegment() {
      return segment_ != null;
    }
    /**
     * <code>.onnx.TensorProto.Segment segment = 3;</code>
     */
    public onnx.OnnxProto3.TensorProto.Segment getSegment() {
      return segment_ == null ? onnx.OnnxProto3.TensorProto.Segment.getDefaultInstance() : segment_;
    }
    /**
     * <code>.onnx.TensorProto.Segment segment = 3;</code>
     */
    public onnx.OnnxProto3.TensorProto.SegmentOrBuilder getSegmentOrBuilder() {
      return getSegment();
    }

    public static final int FLOAT_DATA_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Float> floatData_;
    /**
     * <pre>
     * For float and complex64 values
     * Complex64 tensors are encoded as a single array of floats,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
     * </pre>
     *
     * <code>repeated float float_data = 4 [packed = true];</code>
     */
    public java.util.List<java.lang.Float>
        getFloatDataList() {
      return floatData_;
    }
    /**
     * <pre>
     * For float and complex64 values
     * Complex64 tensors are encoded as a single array of floats,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
     * </pre>
     *
     * <code>repeated float float_data = 4 [packed = true];</code>
     */
    public int getFloatDataCount() {
      return floatData_.size();
    }
    /**
     * <pre>
     * For float and complex64 values
     * Complex64 tensors are encoded as a single array of floats,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
     * </pre>
     *
     * <code>repeated float float_data = 4 [packed = true];</code>
     */
    public float getFloatData(int index) {
      return floatData_.get(index);
    }
    private int floatDataMemoizedSerializedSize = -1;

    public static final int INT32_DATA_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> int32Data_;
    /**
     * <pre>
     * For int32, uint8, int8, uint16, int16, bool, and float16 values
     * float16 values must be bit-wise converted to an uint16_t prior
     * to writing to the buffer.
     * When this field is present, the data_type field MUST be
     * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
     * </pre>
     *
     * <code>repeated int32 int32_data = 5 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getInt32DataList() {
      return int32Data_;
    }
    /**
     * <pre>
     * For int32, uint8, int8, uint16, int16, bool, and float16 values
     * float16 values must be bit-wise converted to an uint16_t prior
     * to writing to the buffer.
     * When this field is present, the data_type field MUST be
     * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
     * </pre>
     *
     * <code>repeated int32 int32_data = 5 [packed = true];</code>
     */
    public int getInt32DataCount() {
      return int32Data_.size();
    }
    /**
     * <pre>
     * For int32, uint8, int8, uint16, int16, bool, and float16 values
     * float16 values must be bit-wise converted to an uint16_t prior
     * to writing to the buffer.
     * When this field is present, the data_type field MUST be
     * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
     * </pre>
     *
     * <code>repeated int32 int32_data = 5 [packed = true];</code>
     */
    public int getInt32Data(int index) {
      return int32Data_.get(index);
    }
    private int int32DataMemoizedSerializedSize = -1;

    public static final int STRING_DATA_FIELD_NUMBER = 6;
    private java.util.List<com.google.protobuf.ByteString> stringData_;
    /**
     * <pre>
     * For strings.
     * Each element of string_data is a UTF-8 encoded Unicode
     * string. No trailing null, no leading BOM. The protobuf "string"
     * scalar type is not used to match ML community conventions.
     * When this field is present, the data_type field MUST be STRING
     * </pre>
     *
     * <code>repeated bytes string_data = 6;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getStringDataList() {
      return stringData_;
    }
    /**
     * <pre>
     * For strings.
     * Each element of string_data is a UTF-8 encoded Unicode
     * string. No trailing null, no leading BOM. The protobuf "string"
     * scalar type is not used to match ML community conventions.
     * When this field is present, the data_type field MUST be STRING
     * </pre>
     *
     * <code>repeated bytes string_data = 6;</code>
     */
    public int getStringDataCount() {
      return stringData_.size();
    }
    /**
     * <pre>
     * For strings.
     * Each element of string_data is a UTF-8 encoded Unicode
     * string. No trailing null, no leading BOM. The protobuf "string"
     * scalar type is not used to match ML community conventions.
     * When this field is present, the data_type field MUST be STRING
     * </pre>
     *
     * <code>repeated bytes string_data = 6;</code>
     */
    public com.google.protobuf.ByteString getStringData(int index) {
      return stringData_.get(index);
    }

    public static final int INT64_DATA_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Long> int64Data_;
    /**
     * <pre>
     * For int64.
     * When this field is present, the data_type field MUST be INT64
     * </pre>
     *
     * <code>repeated int64 int64_data = 7 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getInt64DataList() {
      return int64Data_;
    }
    /**
     * <pre>
     * For int64.
     * When this field is present, the data_type field MUST be INT64
     * </pre>
     *
     * <code>repeated int64 int64_data = 7 [packed = true];</code>
     */
    public int getInt64DataCount() {
      return int64Data_.size();
    }
    /**
     * <pre>
     * For int64.
     * When this field is present, the data_type field MUST be INT64
     * </pre>
     *
     * <code>repeated int64 int64_data = 7 [packed = true];</code>
     */
    public long getInt64Data(int index) {
      return int64Data_.get(index);
    }
    private int int64DataMemoizedSerializedSize = -1;

    public static final int NAME_FIELD_NUMBER = 8;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Optionally, a opName for the tensor.
     * </pre>
     *
     * <code>string opName = 8;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optionally, a opName for the tensor.
     * </pre>
     *
     * <code>string opName = 8;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOC_STRING_FIELD_NUMBER = 12;
    private volatile java.lang.Object docString_;
    /**
     * <pre>
     * A human-readable documentation for this tensor. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 12;</code>
     */
    public java.lang.String getDocString() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docString_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A human-readable documentation for this tensor. Markdown is allowed.
     * </pre>
     *
     * <code>string doc_string = 12;</code>
     */
    public com.google.protobuf.ByteString
        getDocStringBytes() {
      java.lang.Object ref = docString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RAW_DATA_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString rawData_;
    /**
     * <pre>
     * Serializations can either use one of the fields above, or use this
     * raw bytes field. The only exception is the string case, where one is
     * required to store the content in the repeated bytes string_data field.
     * When this raw_data field is used to store tensor value, elements MUST
     * be stored in as fixed-width, little-endian order.
     * Floating-point data types MUST be stored in IEEE 754 format.
     * Complex64 elements must be written as two consecutive FLOAT values, real component first.
     * Complex128 elements must be written as two consecutive DOUBLE values, real component first.
     * Boolean type MUST be written one byte per tensor element (00000001 for true, 00000000 for false).
     * Note: the advantage of specific field rather than the raw_data field is
     * that in some cases (e.g. int data), protobuf does a better packing via
     * variable length storage, and may lead to smaller binary footprint.
     * When this field is present, the data_type field MUST NOT be STRING or UNDEFINED
     * </pre>
     *
     * <code>bytes raw_data = 9;</code>
     */
    public com.google.protobuf.ByteString getRawData() {
      return rawData_;
    }

    public static final int DOUBLE_DATA_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Double> doubleData_;
    /**
     * <pre>
     * For double
     * Complex64 tensors are encoded as a single array of doubles,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
     * </pre>
     *
     * <code>repeated double double_data = 10 [packed = true];</code>
     */
    public java.util.List<java.lang.Double>
        getDoubleDataList() {
      return doubleData_;
    }
    /**
     * <pre>
     * For double
     * Complex64 tensors are encoded as a single array of doubles,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
     * </pre>
     *
     * <code>repeated double double_data = 10 [packed = true];</code>
     */
    public int getDoubleDataCount() {
      return doubleData_.size();
    }
    /**
     * <pre>
     * For double
     * Complex64 tensors are encoded as a single array of doubles,
     * with the real components appearing in odd numbered positions,
     * and the corresponding imaginary component apparing in the
     * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
     * is encoded as [1.0, 2.0 ,3.0 ,4.0]
     * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
     * </pre>
     *
     * <code>repeated double double_data = 10 [packed = true];</code>
     */
    public double getDoubleData(int index) {
      return doubleData_.get(index);
    }
    private int doubleDataMemoizedSerializedSize = -1;

    public static final int UINT64_DATA_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Long> uint64Data_;
    /**
     * <pre>
     * For uint64 and uint32 values
     * When this field is present, the data_type field MUST be
     * UINT32 or UINT64
     * </pre>
     *
     * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getUint64DataList() {
      return uint64Data_;
    }
    /**
     * <pre>
     * For uint64 and uint32 values
     * When this field is present, the data_type field MUST be
     * UINT32 or UINT64
     * </pre>
     *
     * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
     */
    public int getUint64DataCount() {
      return uint64Data_.size();
    }
    /**
     * <pre>
     * For uint64 and uint32 values
     * When this field is present, the data_type field MUST be
     * UINT32 or UINT64
     * </pre>
     *
     * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
     */
    public long getUint64Data(int index) {
      return uint64Data_.get(index);
    }
    private int uint64DataMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimsMemoizedSerializedSize);
      }
      for (int i = 0; i < dims_.size(); i++) {
        output.writeInt64NoTag(dims_.get(i));
      }
      if (dataType_ != onnx.OnnxProto3.TensorProto.DataType.UNDEFINED.getNumber()) {
        output.writeEnum(2, dataType_);
      }
      if (segment_ != null) {
        output.writeMessage(3, getSegment());
      }
      if (getFloatDataList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(floatDataMemoizedSerializedSize);
      }
      for (int i = 0; i < floatData_.size(); i++) {
        output.writeFloatNoTag(floatData_.get(i));
      }
      if (getInt32DataList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(int32DataMemoizedSerializedSize);
      }
      for (int i = 0; i < int32Data_.size(); i++) {
        output.writeInt32NoTag(int32Data_.get(i));
      }
      for (int i = 0; i < stringData_.size(); i++) {
        output.writeBytes(6, stringData_.get(i));
      }
      if (getInt64DataList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(int64DataMemoizedSerializedSize);
      }
      for (int i = 0; i < int64Data_.size(); i++) {
        output.writeInt64NoTag(int64Data_.get(i));
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, name_);
      }
      if (!rawData_.isEmpty()) {
        output.writeBytes(9, rawData_);
      }
      if (getDoubleDataList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(doubleDataMemoizedSerializedSize);
      }
      for (int i = 0; i < doubleData_.size(); i++) {
        output.writeDoubleNoTag(doubleData_.get(i));
      }
      if (getUint64DataList().size() > 0) {
        output.writeUInt32NoTag(90);
        output.writeUInt32NoTag(uint64DataMemoizedSerializedSize);
      }
      for (int i = 0; i < uint64Data_.size(); i++) {
        output.writeUInt64NoTag(uint64Data_.get(i));
      }
      if (!getDocStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, docString_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(dims_.get(i));
        }
        size += dataSize;
        if (!getDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimsMemoizedSerializedSize = dataSize;
      }
      if (dataType_ != onnx.OnnxProto3.TensorProto.DataType.UNDEFINED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, dataType_);
      }
      if (segment_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSegment());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatDataList().size();
        size += dataSize;
        if (!getFloatDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        floatDataMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32Data_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32Data_.get(i));
        }
        size += dataSize;
        if (!getInt32DataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        int32DataMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(stringData_.get(i));
        }
        size += dataSize;
        size += 1 * getStringDataList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Data_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64Data_.get(i));
        }
        size += dataSize;
        if (!getInt64DataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        int64DataMemoizedSerializedSize = dataSize;
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, name_);
      }
      if (!rawData_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, rawData_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleDataList().size();
        size += dataSize;
        if (!getDoubleDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        doubleDataMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint64Data_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(uint64Data_.get(i));
        }
        size += dataSize;
        if (!getUint64DataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        uint64DataMemoizedSerializedSize = dataSize;
      }
      if (!getDocStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, docString_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxProto3.TensorProto)) {
        return super.equals(obj);
      }
      onnx.OnnxProto3.TensorProto other = (onnx.OnnxProto3.TensorProto) obj;

      boolean result = true;
      result = result && getDimsList()
          .equals(other.getDimsList());
      result = result && dataType_ == other.dataType_;
      result = result && (hasSegment() == other.hasSegment());
      if (hasSegment()) {
        result = result && getSegment()
            .equals(other.getSegment());
      }
      result = result && getFloatDataList()
          .equals(other.getFloatDataList());
      result = result && getInt32DataList()
          .equals(other.getInt32DataList());
      result = result && getStringDataList()
          .equals(other.getStringDataList());
      result = result && getInt64DataList()
          .equals(other.getInt64DataList());
      result = result && getName()
          .equals(other.getName());
      result = result && getDocString()
          .equals(other.getDocString());
      result = result && getRawData()
          .equals(other.getRawData());
      result = result && getDoubleDataList()
          .equals(other.getDoubleDataList());
      result = result && getUint64DataList()
          .equals(other.getUint64DataList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimsCount() > 0) {
        hash = (37 * hash) + DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getDimsList().hashCode();
      }
      hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + dataType_;
      if (hasSegment()) {
        hash = (37 * hash) + SEGMENT_FIELD_NUMBER;
        hash = (53 * hash) + getSegment().hashCode();
      }
      if (getFloatDataCount() > 0) {
        hash = (37 * hash) + FLOAT_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getFloatDataList().hashCode();
      }
      if (getInt32DataCount() > 0) {
        hash = (37 * hash) + INT32_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getInt32DataList().hashCode();
      }
      if (getStringDataCount() > 0) {
        hash = (37 * hash) + STRING_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getStringDataList().hashCode();
      }
      if (getInt64DataCount() > 0) {
        hash = (37 * hash) + INT64_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getInt64DataList().hashCode();
      }
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DOC_STRING_FIELD_NUMBER;
      hash = (53 * hash) + getDocString().hashCode();
      hash = (37 * hash) + RAW_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getRawData().hashCode();
      if (getDoubleDataCount() > 0) {
        hash = (37 * hash) + DOUBLE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDoubleDataList().hashCode();
      }
      if (getUint64DataCount() > 0) {
        hash = (37 * hash) + UINT64_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getUint64DataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxProto3.TensorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.TensorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.TensorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.TensorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.TensorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.TensorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.TensorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.TensorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.TensorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.TensorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxProto3.TensorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A message defined to store a tensor in its serialized format.
     * </pre>
     *
     * Protobuf type {@code onnx.TensorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.TensorProto)
        onnx.OnnxProto3.TensorProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_TensorProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_TensorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.TensorProto.class, onnx.OnnxProto3.TensorProto.Builder.class);
      }

      // Construct using onnx.OnnxProto3.TensorProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        dims_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        dataType_ = 0;

        if (segmentBuilder_ == null) {
          segment_ = null;
        } else {
          segment_ = null;
          segmentBuilder_ = null;
        }
        floatData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        int32Data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        stringData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        int64Data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        name_ = "";

        docString_ = "";

        rawData_ = com.google.protobuf.ByteString.EMPTY;

        doubleData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        uint64Data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxProto3.internal_static_onnx_TensorProto_descriptor;
      }

      public onnx.OnnxProto3.TensorProto getDefaultInstanceForType() {
        return onnx.OnnxProto3.TensorProto.getDefaultInstance();
      }

      public onnx.OnnxProto3.TensorProto build() {
        onnx.OnnxProto3.TensorProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public onnx.OnnxProto3.TensorProto buildPartial() {
        onnx.OnnxProto3.TensorProto result = new onnx.OnnxProto3.TensorProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          dims_ = java.util.Collections.unmodifiableList(dims_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dims_ = dims_;
        result.dataType_ = dataType_;
        if (segmentBuilder_ == null) {
          result.segment_ = segment_;
        } else {
          result.segment_ = segmentBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          floatData_ = java.util.Collections.unmodifiableList(floatData_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.floatData_ = floatData_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          int32Data_ = java.util.Collections.unmodifiableList(int32Data_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.int32Data_ = int32Data_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          stringData_ = java.util.Collections.unmodifiableList(stringData_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.stringData_ = stringData_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          int64Data_ = java.util.Collections.unmodifiableList(int64Data_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.int64Data_ = int64Data_;
        result.name_ = name_;
        result.docString_ = docString_;
        result.rawData_ = rawData_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          doubleData_ = java.util.Collections.unmodifiableList(doubleData_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.doubleData_ = doubleData_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          uint64Data_ = java.util.Collections.unmodifiableList(uint64Data_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.uint64Data_ = uint64Data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxProto3.TensorProto) {
          return mergeFrom((onnx.OnnxProto3.TensorProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxProto3.TensorProto other) {
        if (other == onnx.OnnxProto3.TensorProto.getDefaultInstance()) return this;
        if (!other.dims_.isEmpty()) {
          if (dims_.isEmpty()) {
            dims_ = other.dims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimsIsMutable();
            dims_.addAll(other.dims_);
          }
          onChanged();
        }
        if (other.dataType_ != 0) {
          setDataTypeValue(other.getDataTypeValue());
        }
        if (other.hasSegment()) {
          mergeSegment(other.getSegment());
        }
        if (!other.floatData_.isEmpty()) {
          if (floatData_.isEmpty()) {
            floatData_ = other.floatData_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureFloatDataIsMutable();
            floatData_.addAll(other.floatData_);
          }
          onChanged();
        }
        if (!other.int32Data_.isEmpty()) {
          if (int32Data_.isEmpty()) {
            int32Data_ = other.int32Data_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureInt32DataIsMutable();
            int32Data_.addAll(other.int32Data_);
          }
          onChanged();
        }
        if (!other.stringData_.isEmpty()) {
          if (stringData_.isEmpty()) {
            stringData_ = other.stringData_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureStringDataIsMutable();
            stringData_.addAll(other.stringData_);
          }
          onChanged();
        }
        if (!other.int64Data_.isEmpty()) {
          if (int64Data_.isEmpty()) {
            int64Data_ = other.int64Data_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureInt64DataIsMutable();
            int64Data_.addAll(other.int64Data_);
          }
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDocString().isEmpty()) {
          docString_ = other.docString_;
          onChanged();
        }
        if (other.getRawData() != com.google.protobuf.ByteString.EMPTY) {
          setRawData(other.getRawData());
        }
        if (!other.doubleData_.isEmpty()) {
          if (doubleData_.isEmpty()) {
            doubleData_ = other.doubleData_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureDoubleDataIsMutable();
            doubleData_.addAll(other.doubleData_);
          }
          onChanged();
        }
        if (!other.uint64Data_.isEmpty()) {
          if (uint64Data_.isEmpty()) {
            uint64Data_ = other.uint64Data_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureUint64DataIsMutable();
            uint64Data_.addAll(other.uint64Data_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxProto3.TensorProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxProto3.TensorProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> dims_ = java.util.Collections.emptyList();
      private void ensureDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dims_ = new java.util.ArrayList<java.lang.Long>(dims_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The shape of the tensor.
       * </pre>
       *
       * <code>repeated int64 dims = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getDimsList() {
        return java.util.Collections.unmodifiableList(dims_);
      }
      /**
       * <pre>
       * The shape of the tensor.
       * </pre>
       *
       * <code>repeated int64 dims = 1;</code>
       */
      public int getDimsCount() {
        return dims_.size();
      }
      /**
       * <pre>
       * The shape of the tensor.
       * </pre>
       *
       * <code>repeated int64 dims = 1;</code>
       */
      public long getDims(int index) {
        return dims_.get(index);
      }
      /**
       * <pre>
       * The shape of the tensor.
       * </pre>
       *
       * <code>repeated int64 dims = 1;</code>
       */
      public Builder setDims(
          int index, long value) {
        ensureDimsIsMutable();
        dims_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the tensor.
       * </pre>
       *
       * <code>repeated int64 dims = 1;</code>
       */
      public Builder addDims(long value) {
        ensureDimsIsMutable();
        dims_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the tensor.
       * </pre>
       *
       * <code>repeated int64 dims = 1;</code>
       */
      public Builder addAllDims(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dims_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the tensor.
       * </pre>
       *
       * <code>repeated int64 dims = 1;</code>
       */
      public Builder clearDims() {
        dims_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int dataType_ = 0;
      /**
       * <pre>
       * The data type of the tensor.
       * </pre>
       *
       * <code>.onnx.TensorProto.DataType data_type = 2;</code>
       */
      public int getDataTypeValue() {
        return dataType_;
      }
      /**
       * <pre>
       * The data type of the tensor.
       * </pre>
       *
       * <code>.onnx.TensorProto.DataType data_type = 2;</code>
       */
      public Builder setDataTypeValue(int value) {
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data type of the tensor.
       * </pre>
       *
       * <code>.onnx.TensorProto.DataType data_type = 2;</code>
       */
      public onnx.OnnxProto3.TensorProto.DataType getDataType() {
        onnx.OnnxProto3.TensorProto.DataType result = onnx.OnnxProto3.TensorProto.DataType.valueOf(dataType_);
        return result == null ? onnx.OnnxProto3.TensorProto.DataType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The data type of the tensor.
       * </pre>
       *
       * <code>.onnx.TensorProto.DataType data_type = 2;</code>
       */
      public Builder setDataType(onnx.OnnxProto3.TensorProto.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dataType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data type of the tensor.
       * </pre>
       *
       * <code>.onnx.TensorProto.DataType data_type = 2;</code>
       */
      public Builder clearDataType() {
        
        dataType_ = 0;
        onChanged();
        return this;
      }

      private onnx.OnnxProto3.TensorProto.Segment segment_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.TensorProto.Segment, onnx.OnnxProto3.TensorProto.Segment.Builder, onnx.OnnxProto3.TensorProto.SegmentOrBuilder> segmentBuilder_;
      /**
       * <code>.onnx.TensorProto.Segment segment = 3;</code>
       */
      public boolean hasSegment() {
        return segmentBuilder_ != null || segment_ != null;
      }
      /**
       * <code>.onnx.TensorProto.Segment segment = 3;</code>
       */
      public onnx.OnnxProto3.TensorProto.Segment getSegment() {
        if (segmentBuilder_ == null) {
          return segment_ == null ? onnx.OnnxProto3.TensorProto.Segment.getDefaultInstance() : segment_;
        } else {
          return segmentBuilder_.getMessage();
        }
      }
      /**
       * <code>.onnx.TensorProto.Segment segment = 3;</code>
       */
      public Builder setSegment(onnx.OnnxProto3.TensorProto.Segment value) {
        if (segmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          segment_ = value;
          onChanged();
        } else {
          segmentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.onnx.TensorProto.Segment segment = 3;</code>
       */
      public Builder setSegment(
          onnx.OnnxProto3.TensorProto.Segment.Builder builderForValue) {
        if (segmentBuilder_ == null) {
          segment_ = builderForValue.build();
          onChanged();
        } else {
          segmentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.onnx.TensorProto.Segment segment = 3;</code>
       */
      public Builder mergeSegment(onnx.OnnxProto3.TensorProto.Segment value) {
        if (segmentBuilder_ == null) {
          if (segment_ != null) {
            segment_ =
              onnx.OnnxProto3.TensorProto.Segment.newBuilder(segment_).mergeFrom(value).buildPartial();
          } else {
            segment_ = value;
          }
          onChanged();
        } else {
          segmentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.onnx.TensorProto.Segment segment = 3;</code>
       */
      public Builder clearSegment() {
        if (segmentBuilder_ == null) {
          segment_ = null;
          onChanged();
        } else {
          segment_ = null;
          segmentBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.onnx.TensorProto.Segment segment = 3;</code>
       */
      public onnx.OnnxProto3.TensorProto.Segment.Builder getSegmentBuilder() {
        
        onChanged();
        return getSegmentFieldBuilder().getBuilder();
      }
      /**
       * <code>.onnx.TensorProto.Segment segment = 3;</code>
       */
      public onnx.OnnxProto3.TensorProto.SegmentOrBuilder getSegmentOrBuilder() {
        if (segmentBuilder_ != null) {
          return segmentBuilder_.getMessageOrBuilder();
        } else {
          return segment_ == null ?
              onnx.OnnxProto3.TensorProto.Segment.getDefaultInstance() : segment_;
        }
      }
      /**
       * <code>.onnx.TensorProto.Segment segment = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.TensorProto.Segment, onnx.OnnxProto3.TensorProto.Segment.Builder, onnx.OnnxProto3.TensorProto.SegmentOrBuilder> 
          getSegmentFieldBuilder() {
        if (segmentBuilder_ == null) {
          segmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.OnnxProto3.TensorProto.Segment, onnx.OnnxProto3.TensorProto.Segment.Builder, onnx.OnnxProto3.TensorProto.SegmentOrBuilder>(
                  getSegment(),
                  getParentForChildren(),
                  isClean());
          segment_ = null;
        }
        return segmentBuilder_;
      }

      private java.util.List<java.lang.Float> floatData_ = java.util.Collections.emptyList();
      private void ensureFloatDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          floatData_ = new java.util.ArrayList<java.lang.Float>(floatData_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * For float and complex64 values
       * Complex64 tensors are encoded as a single array of floats,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
       * </pre>
       *
       * <code>repeated float float_data = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Float>
          getFloatDataList() {
        return java.util.Collections.unmodifiableList(floatData_);
      }
      /**
       * <pre>
       * For float and complex64 values
       * Complex64 tensors are encoded as a single array of floats,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
       * </pre>
       *
       * <code>repeated float float_data = 4 [packed = true];</code>
       */
      public int getFloatDataCount() {
        return floatData_.size();
      }
      /**
       * <pre>
       * For float and complex64 values
       * Complex64 tensors are encoded as a single array of floats,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
       * </pre>
       *
       * <code>repeated float float_data = 4 [packed = true];</code>
       */
      public float getFloatData(int index) {
        return floatData_.get(index);
      }
      /**
       * <pre>
       * For float and complex64 values
       * Complex64 tensors are encoded as a single array of floats,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
       * </pre>
       *
       * <code>repeated float float_data = 4 [packed = true];</code>
       */
      public Builder setFloatData(
          int index, float value) {
        ensureFloatDataIsMutable();
        floatData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For float and complex64 values
       * Complex64 tensors are encoded as a single array of floats,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
       * </pre>
       *
       * <code>repeated float float_data = 4 [packed = true];</code>
       */
      public Builder addFloatData(float value) {
        ensureFloatDataIsMutable();
        floatData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For float and complex64 values
       * Complex64 tensors are encoded as a single array of floats,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
       * </pre>
       *
       * <code>repeated float float_data = 4 [packed = true];</code>
       */
      public Builder addAllFloatData(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatData_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For float and complex64 values
       * Complex64 tensors are encoded as a single array of floats,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be FLOAT or COMPLEX64.
       * </pre>
       *
       * <code>repeated float float_data = 4 [packed = true];</code>
       */
      public Builder clearFloatData() {
        floatData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> int32Data_ = java.util.Collections.emptyList();
      private void ensureInt32DataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          int32Data_ = new java.util.ArrayList<java.lang.Integer>(int32Data_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * For int32, uint8, int8, uint16, int16, bool, and float16 values
       * float16 values must be bit-wise converted to an uint16_t prior
       * to writing to the buffer.
       * When this field is present, the data_type field MUST be
       * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
       * </pre>
       *
       * <code>repeated int32 int32_data = 5 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getInt32DataList() {
        return java.util.Collections.unmodifiableList(int32Data_);
      }
      /**
       * <pre>
       * For int32, uint8, int8, uint16, int16, bool, and float16 values
       * float16 values must be bit-wise converted to an uint16_t prior
       * to writing to the buffer.
       * When this field is present, the data_type field MUST be
       * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
       * </pre>
       *
       * <code>repeated int32 int32_data = 5 [packed = true];</code>
       */
      public int getInt32DataCount() {
        return int32Data_.size();
      }
      /**
       * <pre>
       * For int32, uint8, int8, uint16, int16, bool, and float16 values
       * float16 values must be bit-wise converted to an uint16_t prior
       * to writing to the buffer.
       * When this field is present, the data_type field MUST be
       * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
       * </pre>
       *
       * <code>repeated int32 int32_data = 5 [packed = true];</code>
       */
      public int getInt32Data(int index) {
        return int32Data_.get(index);
      }
      /**
       * <pre>
       * For int32, uint8, int8, uint16, int16, bool, and float16 values
       * float16 values must be bit-wise converted to an uint16_t prior
       * to writing to the buffer.
       * When this field is present, the data_type field MUST be
       * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
       * </pre>
       *
       * <code>repeated int32 int32_data = 5 [packed = true];</code>
       */
      public Builder setInt32Data(
          int index, int value) {
        ensureInt32DataIsMutable();
        int32Data_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For int32, uint8, int8, uint16, int16, bool, and float16 values
       * float16 values must be bit-wise converted to an uint16_t prior
       * to writing to the buffer.
       * When this field is present, the data_type field MUST be
       * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
       * </pre>
       *
       * <code>repeated int32 int32_data = 5 [packed = true];</code>
       */
      public Builder addInt32Data(int value) {
        ensureInt32DataIsMutable();
        int32Data_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For int32, uint8, int8, uint16, int16, bool, and float16 values
       * float16 values must be bit-wise converted to an uint16_t prior
       * to writing to the buffer.
       * When this field is present, the data_type field MUST be
       * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
       * </pre>
       *
       * <code>repeated int32 int32_data = 5 [packed = true];</code>
       */
      public Builder addAllInt32Data(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32DataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int32Data_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For int32, uint8, int8, uint16, int16, bool, and float16 values
       * float16 values must be bit-wise converted to an uint16_t prior
       * to writing to the buffer.
       * When this field is present, the data_type field MUST be
       * INT32, INT16, INT8, UINT16, INT8, BOOL, or FLOAT32
       * </pre>
       *
       * <code>repeated int32 int32_data = 5 [packed = true];</code>
       */
      public Builder clearInt32Data() {
        int32Data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> stringData_ = java.util.Collections.emptyList();
      private void ensureStringDataIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          stringData_ = new java.util.ArrayList<com.google.protobuf.ByteString>(stringData_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       * For strings.
       * Each element of string_data is a UTF-8 encoded Unicode
       * string. No trailing null, no leading BOM. The protobuf "string"
       * scalar type is not used to match ML community conventions.
       * When this field is present, the data_type field MUST be STRING
       * </pre>
       *
       * <code>repeated bytes string_data = 6;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getStringDataList() {
        return java.util.Collections.unmodifiableList(stringData_);
      }
      /**
       * <pre>
       * For strings.
       * Each element of string_data is a UTF-8 encoded Unicode
       * string. No trailing null, no leading BOM. The protobuf "string"
       * scalar type is not used to match ML community conventions.
       * When this field is present, the data_type field MUST be STRING
       * </pre>
       *
       * <code>repeated bytes string_data = 6;</code>
       */
      public int getStringDataCount() {
        return stringData_.size();
      }
      /**
       * <pre>
       * For strings.
       * Each element of string_data is a UTF-8 encoded Unicode
       * string. No trailing null, no leading BOM. The protobuf "string"
       * scalar type is not used to match ML community conventions.
       * When this field is present, the data_type field MUST be STRING
       * </pre>
       *
       * <code>repeated bytes string_data = 6;</code>
       */
      public com.google.protobuf.ByteString getStringData(int index) {
        return stringData_.get(index);
      }
      /**
       * <pre>
       * For strings.
       * Each element of string_data is a UTF-8 encoded Unicode
       * string. No trailing null, no leading BOM. The protobuf "string"
       * scalar type is not used to match ML community conventions.
       * When this field is present, the data_type field MUST be STRING
       * </pre>
       *
       * <code>repeated bytes string_data = 6;</code>
       */
      public Builder setStringData(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringDataIsMutable();
        stringData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For strings.
       * Each element of string_data is a UTF-8 encoded Unicode
       * string. No trailing null, no leading BOM. The protobuf "string"
       * scalar type is not used to match ML community conventions.
       * When this field is present, the data_type field MUST be STRING
       * </pre>
       *
       * <code>repeated bytes string_data = 6;</code>
       */
      public Builder addStringData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringDataIsMutable();
        stringData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For strings.
       * Each element of string_data is a UTF-8 encoded Unicode
       * string. No trailing null, no leading BOM. The protobuf "string"
       * scalar type is not used to match ML community conventions.
       * When this field is present, the data_type field MUST be STRING
       * </pre>
       *
       * <code>repeated bytes string_data = 6;</code>
       */
      public Builder addAllStringData(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureStringDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stringData_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For strings.
       * Each element of string_data is a UTF-8 encoded Unicode
       * string. No trailing null, no leading BOM. The protobuf "string"
       * scalar type is not used to match ML community conventions.
       * When this field is present, the data_type field MUST be STRING
       * </pre>
       *
       * <code>repeated bytes string_data = 6;</code>
       */
      public Builder clearStringData() {
        stringData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> int64Data_ = java.util.Collections.emptyList();
      private void ensureInt64DataIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          int64Data_ = new java.util.ArrayList<java.lang.Long>(int64Data_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <pre>
       * For int64.
       * When this field is present, the data_type field MUST be INT64
       * </pre>
       *
       * <code>repeated int64 int64_data = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getInt64DataList() {
        return java.util.Collections.unmodifiableList(int64Data_);
      }
      /**
       * <pre>
       * For int64.
       * When this field is present, the data_type field MUST be INT64
       * </pre>
       *
       * <code>repeated int64 int64_data = 7 [packed = true];</code>
       */
      public int getInt64DataCount() {
        return int64Data_.size();
      }
      /**
       * <pre>
       * For int64.
       * When this field is present, the data_type field MUST be INT64
       * </pre>
       *
       * <code>repeated int64 int64_data = 7 [packed = true];</code>
       */
      public long getInt64Data(int index) {
        return int64Data_.get(index);
      }
      /**
       * <pre>
       * For int64.
       * When this field is present, the data_type field MUST be INT64
       * </pre>
       *
       * <code>repeated int64 int64_data = 7 [packed = true];</code>
       */
      public Builder setInt64Data(
          int index, long value) {
        ensureInt64DataIsMutable();
        int64Data_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For int64.
       * When this field is present, the data_type field MUST be INT64
       * </pre>
       *
       * <code>repeated int64 int64_data = 7 [packed = true];</code>
       */
      public Builder addInt64Data(long value) {
        ensureInt64DataIsMutable();
        int64Data_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For int64.
       * When this field is present, the data_type field MUST be INT64
       * </pre>
       *
       * <code>repeated int64 int64_data = 7 [packed = true];</code>
       */
      public Builder addAllInt64Data(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64DataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int64Data_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For int64.
       * When this field is present, the data_type field MUST be INT64
       * </pre>
       *
       * <code>repeated int64 int64_data = 7 [packed = true];</code>
       */
      public Builder clearInt64Data() {
        int64Data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Optionally, a opName for the tensor.
       * </pre>
       *
       * <code>string opName = 8;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optionally, a opName for the tensor.
       * </pre>
       *
       * <code>string opName = 8;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optionally, a opName for the tensor.
       * </pre>
       *
       * <code>string opName = 8;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optionally, a opName for the tensor.
       * </pre>
       *
       * <code>string opName = 8;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optionally, a opName for the tensor.
       * </pre>
       *
       * <code>string opName = 8;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object docString_ = "";
      /**
       * <pre>
       * A human-readable documentation for this tensor. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 12;</code>
       */
      public java.lang.String getDocString() {
        java.lang.Object ref = docString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this tensor. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 12;</code>
       */
      public com.google.protobuf.ByteString
          getDocStringBytes() {
        java.lang.Object ref = docString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A human-readable documentation for this tensor. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 12;</code>
       */
      public Builder setDocString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this tensor. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 12;</code>
       */
      public Builder clearDocString() {
        
        docString_ = getDefaultInstance().getDocString();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human-readable documentation for this tensor. Markdown is allowed.
       * </pre>
       *
       * <code>string doc_string = 12;</code>
       */
      public Builder setDocStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docString_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString rawData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Serializations can either use one of the fields above, or use this
       * raw bytes field. The only exception is the string case, where one is
       * required to store the content in the repeated bytes string_data field.
       * When this raw_data field is used to store tensor value, elements MUST
       * be stored in as fixed-width, little-endian order.
       * Floating-point data types MUST be stored in IEEE 754 format.
       * Complex64 elements must be written as two consecutive FLOAT values, real component first.
       * Complex128 elements must be written as two consecutive DOUBLE values, real component first.
       * Boolean type MUST be written one byte per tensor element (00000001 for true, 00000000 for false).
       * Note: the advantage of specific field rather than the raw_data field is
       * that in some cases (e.g. int data), protobuf does a better packing via
       * variable length storage, and may lead to smaller binary footprint.
       * When this field is present, the data_type field MUST NOT be STRING or UNDEFINED
       * </pre>
       *
       * <code>bytes raw_data = 9;</code>
       */
      public com.google.protobuf.ByteString getRawData() {
        return rawData_;
      }
      /**
       * <pre>
       * Serializations can either use one of the fields above, or use this
       * raw bytes field. The only exception is the string case, where one is
       * required to store the content in the repeated bytes string_data field.
       * When this raw_data field is used to store tensor value, elements MUST
       * be stored in as fixed-width, little-endian order.
       * Floating-point data types MUST be stored in IEEE 754 format.
       * Complex64 elements must be written as two consecutive FLOAT values, real component first.
       * Complex128 elements must be written as two consecutive DOUBLE values, real component first.
       * Boolean type MUST be written one byte per tensor element (00000001 for true, 00000000 for false).
       * Note: the advantage of specific field rather than the raw_data field is
       * that in some cases (e.g. int data), protobuf does a better packing via
       * variable length storage, and may lead to smaller binary footprint.
       * When this field is present, the data_type field MUST NOT be STRING or UNDEFINED
       * </pre>
       *
       * <code>bytes raw_data = 9;</code>
       */
      public Builder setRawData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rawData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Serializations can either use one of the fields above, or use this
       * raw bytes field. The only exception is the string case, where one is
       * required to store the content in the repeated bytes string_data field.
       * When this raw_data field is used to store tensor value, elements MUST
       * be stored in as fixed-width, little-endian order.
       * Floating-point data types MUST be stored in IEEE 754 format.
       * Complex64 elements must be written as two consecutive FLOAT values, real component first.
       * Complex128 elements must be written as two consecutive DOUBLE values, real component first.
       * Boolean type MUST be written one byte per tensor element (00000001 for true, 00000000 for false).
       * Note: the advantage of specific field rather than the raw_data field is
       * that in some cases (e.g. int data), protobuf does a better packing via
       * variable length storage, and may lead to smaller binary footprint.
       * When this field is present, the data_type field MUST NOT be STRING or UNDEFINED
       * </pre>
       *
       * <code>bytes raw_data = 9;</code>
       */
      public Builder clearRawData() {
        
        rawData_ = getDefaultInstance().getRawData();
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> doubleData_ = java.util.Collections.emptyList();
      private void ensureDoubleDataIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          doubleData_ = new java.util.ArrayList<java.lang.Double>(doubleData_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <pre>
       * For double
       * Complex64 tensors are encoded as a single array of doubles,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
       * </pre>
       *
       * <code>repeated double double_data = 10 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getDoubleDataList() {
        return java.util.Collections.unmodifiableList(doubleData_);
      }
      /**
       * <pre>
       * For double
       * Complex64 tensors are encoded as a single array of doubles,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
       * </pre>
       *
       * <code>repeated double double_data = 10 [packed = true];</code>
       */
      public int getDoubleDataCount() {
        return doubleData_.size();
      }
      /**
       * <pre>
       * For double
       * Complex64 tensors are encoded as a single array of doubles,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
       * </pre>
       *
       * <code>repeated double double_data = 10 [packed = true];</code>
       */
      public double getDoubleData(int index) {
        return doubleData_.get(index);
      }
      /**
       * <pre>
       * For double
       * Complex64 tensors are encoded as a single array of doubles,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
       * </pre>
       *
       * <code>repeated double double_data = 10 [packed = true];</code>
       */
      public Builder setDoubleData(
          int index, double value) {
        ensureDoubleDataIsMutable();
        doubleData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For double
       * Complex64 tensors are encoded as a single array of doubles,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
       * </pre>
       *
       * <code>repeated double double_data = 10 [packed = true];</code>
       */
      public Builder addDoubleData(double value) {
        ensureDoubleDataIsMutable();
        doubleData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For double
       * Complex64 tensors are encoded as a single array of doubles,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
       * </pre>
       *
       * <code>repeated double double_data = 10 [packed = true];</code>
       */
      public Builder addAllDoubleData(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, doubleData_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For double
       * Complex64 tensors are encoded as a single array of doubles,
       * with the real components appearing in odd numbered positions,
       * and the corresponding imaginary component apparing in the
       * subsequent even numbered position. (e.g., [1.0 + 2.0i, 3.0 + 4.0i]
       * is encoded as [1.0, 2.0 ,3.0 ,4.0]
       * When this field is present, the data_type field MUST be DOUBLE or COMPLEX128
       * </pre>
       *
       * <code>repeated double double_data = 10 [packed = true];</code>
       */
      public Builder clearDoubleData() {
        doubleData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> uint64Data_ = java.util.Collections.emptyList();
      private void ensureUint64DataIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          uint64Data_ = new java.util.ArrayList<java.lang.Long>(uint64Data_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <pre>
       * For uint64 and uint32 values
       * When this field is present, the data_type field MUST be
       * UINT32 or UINT64
       * </pre>
       *
       * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getUint64DataList() {
        return java.util.Collections.unmodifiableList(uint64Data_);
      }
      /**
       * <pre>
       * For uint64 and uint32 values
       * When this field is present, the data_type field MUST be
       * UINT32 or UINT64
       * </pre>
       *
       * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
       */
      public int getUint64DataCount() {
        return uint64Data_.size();
      }
      /**
       * <pre>
       * For uint64 and uint32 values
       * When this field is present, the data_type field MUST be
       * UINT32 or UINT64
       * </pre>
       *
       * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
       */
      public long getUint64Data(int index) {
        return uint64Data_.get(index);
      }
      /**
       * <pre>
       * For uint64 and uint32 values
       * When this field is present, the data_type field MUST be
       * UINT32 or UINT64
       * </pre>
       *
       * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
       */
      public Builder setUint64Data(
          int index, long value) {
        ensureUint64DataIsMutable();
        uint64Data_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For uint64 and uint32 values
       * When this field is present, the data_type field MUST be
       * UINT32 or UINT64
       * </pre>
       *
       * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
       */
      public Builder addUint64Data(long value) {
        ensureUint64DataIsMutable();
        uint64Data_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For uint64 and uint32 values
       * When this field is present, the data_type field MUST be
       * UINT32 or UINT64
       * </pre>
       *
       * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
       */
      public Builder addAllUint64Data(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUint64DataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uint64Data_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For uint64 and uint32 values
       * When this field is present, the data_type field MUST be
       * UINT32 or UINT64
       * </pre>
       *
       * <code>repeated uint64 uint64_data = 11 [packed = true];</code>
       */
      public Builder clearUint64Data() {
        uint64Data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:onnx.TensorProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.TensorProto)
    private static final onnx.OnnxProto3.TensorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxProto3.TensorProto();
    }

    public static onnx.OnnxProto3.TensorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TensorProto>
        PARSER = new com.google.protobuf.AbstractParser<TensorProto>() {
      public TensorProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TensorProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TensorProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TensorProto> getParserForType() {
      return PARSER;
    }

    public onnx.OnnxProto3.TensorProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TypeProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.TypeProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type of a tensor.
     * </pre>
     *
     * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
     */
    onnx.OnnxProto3.TypeProto.TensorTypeProto getTensorType();
    /**
     * <pre>
     * The type of a tensor.
     * </pre>
     *
     * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
     */
    onnx.OnnxProto3.TypeProto.TensorTypeProtoOrBuilder getTensorTypeOrBuilder();

    public onnx.OnnxProto3.TypeProto.ValueCase getValueCase();
  }
  /**
   * <pre>
   * Define the types.
   * </pre>
   *
   * Protobuf type {@code onnx.TypeProto}
   */
  public  static final class TypeProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.TypeProto)
      TypeProtoOrBuilder {
    // Use TypeProto.newBuilder() to construct.
    private TypeProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TypeProto() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TypeProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              onnx.OnnxProto3.TypeProto.TensorTypeProto.Builder subBuilder = null;
              if (valueCase_ == 1) {
                subBuilder = ((onnx.OnnxProto3.TypeProto.TensorTypeProto) value_).toBuilder();
              }
              value_ =
                  input.readMessage(onnx.OnnxProto3.TypeProto.TensorTypeProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((onnx.OnnxProto3.TypeProto.TensorTypeProto) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 1;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxProto3.internal_static_onnx_TypeProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxProto3.internal_static_onnx_TypeProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxProto3.TypeProto.class, onnx.OnnxProto3.TypeProto.Builder.class);
    }

    public interface TensorShapeProtoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:onnx.TypeProto.TensorShapeProto)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
       */
      java.util.List<onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension> 
          getDimList();
      /**
       * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
       */
      onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension getDim(int index);
      /**
       * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
       */
      int getDimCount();
      /**
       * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
       */
      java.util.List<? extends onnx.OnnxProto3.TypeProto.TensorShapeProto.DimensionOrBuilder> 
          getDimOrBuilderList();
      /**
       * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
       */
      onnx.OnnxProto3.TypeProto.TensorShapeProto.DimensionOrBuilder getDimOrBuilder(
          int index);
    }
    /**
     * <pre>
     * Defines a tensor shape. A dimension can be either an integer value
     * or a symbolic variable. A symbolic variable represents an unknown
     * dimension.
     * </pre>
     *
     * Protobuf type {@code onnx.TypeProto.TensorShapeProto}
     */
    public  static final class TensorShapeProto extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:onnx.TypeProto.TensorShapeProto)
        TensorShapeProtoOrBuilder {
      // Use TensorShapeProto.newBuilder() to construct.
      private TensorShapeProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TensorShapeProto() {
        dim_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private TensorShapeProto(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  dim_ = new java.util.ArrayList<onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension>();
                  mutable_bitField0_ |= 0x00000001;
                }
                dim_.add(
                    input.readMessage(onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            dim_ = java.util.Collections.unmodifiableList(dim_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorShapeProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorShapeProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.TypeProto.TensorShapeProto.class, onnx.OnnxProto3.TypeProto.TensorShapeProto.Builder.class);
      }

      public interface DimensionOrBuilder extends
          // @@protoc_insertion_point(interface_extends:onnx.TypeProto.TensorShapeProto.Dimension)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int64 dim_value = 1;</code>
         */
        long getDimValue();

        /**
         * <pre>
         * namespace Shape
         * </pre>
         *
         * <code>string dim_param = 2;</code>
         */
        java.lang.String getDimParam();
        /**
         * <pre>
         * namespace Shape
         * </pre>
         *
         * <code>string dim_param = 2;</code>
         */
        com.google.protobuf.ByteString
            getDimParamBytes();

        public onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.ValueCase getValueCase();
      }
      /**
       * Protobuf type {@code onnx.TypeProto.TensorShapeProto.Dimension}
       */
      public  static final class Dimension extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:onnx.TypeProto.TensorShapeProto.Dimension)
          DimensionOrBuilder {
        // Use Dimension.newBuilder() to construct.
        private Dimension(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Dimension() {
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private Dimension(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          int mutable_bitField0_ = 0;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  valueCase_ = 1;
                  value_ = input.readInt64();
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();
                  valueCase_ = 2;
                  value_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorShapeProto_Dimension_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorShapeProto_Dimension_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.class, onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder.class);
        }

        private int valueCase_ = 0;
        private java.lang.Object value_;
        public enum ValueCase
            implements com.google.protobuf.Internal.EnumLite {
          DIM_VALUE(1),
          DIM_PARAM(2),
          VALUE_NOT_SET(0);
          private final int value;
          private ValueCase(int value) {
            this.value = value;
          }
          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static ValueCase valueOf(int value) {
            return forNumber(value);
          }

          public static ValueCase forNumber(int value) {
            switch (value) {
              case 1: return DIM_VALUE;
              case 2: return DIM_PARAM;
              case 0: return VALUE_NOT_SET;
              default: return null;
            }
          }
          public int getNumber() {
            return this.value;
          }
        };

        public ValueCase
        getValueCase() {
          return ValueCase.forNumber(
              valueCase_);
        }

        public static final int DIM_VALUE_FIELD_NUMBER = 1;
        /**
         * <code>int64 dim_value = 1;</code>
         */
        public long getDimValue() {
          if (valueCase_ == 1) {
            return (java.lang.Long) value_;
          }
          return 0L;
        }

        public static final int DIM_PARAM_FIELD_NUMBER = 2;
        /**
         * <pre>
         * namespace Shape
         * </pre>
         *
         * <code>string dim_param = 2;</code>
         */
        public java.lang.String getDimParam() {
          java.lang.Object ref = "";
          if (valueCase_ == 2) {
            ref = value_;
          }
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (valueCase_ == 2) {
              value_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * namespace Shape
         * </pre>
         *
         * <code>string dim_param = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDimParamBytes() {
          java.lang.Object ref = "";
          if (valueCase_ == 2) {
            ref = value_;
          }
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (valueCase_ == 2) {
              value_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (valueCase_ == 1) {
            output.writeInt64(
                1, (long)((java.lang.Long) value_));
          }
          if (valueCase_ == 2) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
          }
        }

        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (valueCase_ == 1) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(
                  1, (long)((java.lang.Long) value_));
          }
          if (valueCase_ == 2) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
          }
          memoizedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension)) {
            return super.equals(obj);
          }
          onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension other = (onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension) obj;

          boolean result = true;
          result = result && getValueCase().equals(
              other.getValueCase());
          if (!result) return false;
          switch (valueCase_) {
            case 1:
              result = result && (getDimValue()
                  == other.getDimValue());
              break;
            case 2:
              result = result && getDimParam()
                  .equals(other.getDimParam());
              break;
            case 0:
            default:
          }
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          switch (valueCase_) {
            case 1:
              hash = (37 * hash) + DIM_VALUE_FIELD_NUMBER;
              hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                  getDimValue());
              break;
            case 2:
              hash = (37 * hash) + DIM_PARAM_FIELD_NUMBER;
              hash = (53 * hash) + getDimParam().hashCode();
              break;
            case 0:
            default:
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code onnx.TypeProto.TensorShapeProto.Dimension}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:onnx.TypeProto.TensorShapeProto.Dimension)
            onnx.OnnxProto3.TypeProto.TensorShapeProto.DimensionOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorShapeProto_Dimension_descriptor;
          }

          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorShapeProto_Dimension_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.class, onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder.class);
          }

          // Construct using onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          public Builder clear() {
            super.clear();
            valueCase_ = 0;
            value_ = null;
            return this;
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorShapeProto_Dimension_descriptor;
          }

          public onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension getDefaultInstanceForType() {
            return onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.getDefaultInstance();
          }

          public onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension build() {
            onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension buildPartial() {
            onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension result = new onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension(this);
            if (valueCase_ == 1) {
              result.value_ = value_;
            }
            if (valueCase_ == 2) {
              result.value_ = value_;
            }
            result.valueCase_ = valueCase_;
            onBuilt();
            return result;
          }

          public Builder clone() {
            return (Builder) super.clone();
          }
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
            return (Builder) super.setField(field, value);
          }
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension) {
              return mergeFrom((onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension other) {
            if (other == onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.getDefaultInstance()) return this;
            switch (other.getValueCase()) {
              case DIM_VALUE: {
                setDimValue(other.getDimValue());
                break;
              }
              case DIM_PARAM: {
                valueCase_ = 2;
                value_ = other.value_;
                onChanged();
                break;
              }
              case VALUE_NOT_SET: {
                break;
              }
            }
            onChanged();
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int valueCase_ = 0;
          private java.lang.Object value_;
          public ValueCase
              getValueCase() {
            return ValueCase.forNumber(
                valueCase_);
          }

          public Builder clearValue() {
            valueCase_ = 0;
            value_ = null;
            onChanged();
            return this;
          }


          /**
           * <code>int64 dim_value = 1;</code>
           */
          public long getDimValue() {
            if (valueCase_ == 1) {
              return (java.lang.Long) value_;
            }
            return 0L;
          }
          /**
           * <code>int64 dim_value = 1;</code>
           */
          public Builder setDimValue(long value) {
            valueCase_ = 1;
            value_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>int64 dim_value = 1;</code>
           */
          public Builder clearDimValue() {
            if (valueCase_ == 1) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
            return this;
          }

          /**
           * <pre>
           * namespace Shape
           * </pre>
           *
           * <code>string dim_param = 2;</code>
           */
          public java.lang.String getDimParam() {
            java.lang.Object ref = "";
            if (valueCase_ == 2) {
              ref = value_;
            }
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (valueCase_ == 2) {
                value_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * namespace Shape
           * </pre>
           *
           * <code>string dim_param = 2;</code>
           */
          public com.google.protobuf.ByteString
              getDimParamBytes() {
            java.lang.Object ref = "";
            if (valueCase_ == 2) {
              ref = value_;
            }
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              if (valueCase_ == 2) {
                value_ = b;
              }
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * namespace Shape
           * </pre>
           *
           * <code>string dim_param = 2;</code>
           */
          public Builder setDimParam(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 2;
            value_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * namespace Shape
           * </pre>
           *
           * <code>string dim_param = 2;</code>
           */
          public Builder clearDimParam() {
            if (valueCase_ == 2) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
            return this;
          }
          /**
           * <pre>
           * namespace Shape
           * </pre>
           *
           * <code>string dim_param = 2;</code>
           */
          public Builder setDimParamBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            valueCase_ = 2;
            value_ = value;
            onChanged();
            return this;
          }
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return this;
          }

          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return this;
          }


          // @@protoc_insertion_point(builder_scope:onnx.TypeProto.TensorShapeProto.Dimension)
        }

        // @@protoc_insertion_point(class_scope:onnx.TypeProto.TensorShapeProto.Dimension)
        private static final onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension();
        }

        public static onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Dimension>
            PARSER = new com.google.protobuf.AbstractParser<Dimension>() {
          public Dimension parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
              return new Dimension(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Dimension> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Dimension> getParserForType() {
          return PARSER;
        }

        public onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int DIM_FIELD_NUMBER = 1;
      private java.util.List<onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension> dim_;
      /**
       * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
       */
      public java.util.List<onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension> getDimList() {
        return dim_;
      }
      /**
       * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
       */
      public java.util.List<? extends onnx.OnnxProto3.TypeProto.TensorShapeProto.DimensionOrBuilder> 
          getDimOrBuilderList() {
        return dim_;
      }
      /**
       * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
       */
      public int getDimCount() {
        return dim_.size();
      }
      /**
       * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
       */
      public onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension getDim(int index) {
        return dim_.get(index);
      }
      /**
       * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
       */
      public onnx.OnnxProto3.TypeProto.TensorShapeProto.DimensionOrBuilder getDimOrBuilder(
          int index) {
        return dim_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < dim_.size(); i++) {
          output.writeMessage(1, dim_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < dim_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, dim_.get(i));
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof onnx.OnnxProto3.TypeProto.TensorShapeProto)) {
          return super.equals(obj);
        }
        onnx.OnnxProto3.TypeProto.TensorShapeProto other = (onnx.OnnxProto3.TypeProto.TensorShapeProto) obj;

        boolean result = true;
        result = result && getDimList()
            .equals(other.getDimList());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getDimCount() > 0) {
          hash = (37 * hash) + DIM_FIELD_NUMBER;
          hash = (53 * hash) + getDimList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static onnx.OnnxProto3.TypeProto.TensorShapeProto parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static onnx.OnnxProto3.TypeProto.TensorShapeProto parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static onnx.OnnxProto3.TypeProto.TensorShapeProto parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static onnx.OnnxProto3.TypeProto.TensorShapeProto parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static onnx.OnnxProto3.TypeProto.TensorShapeProto parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static onnx.OnnxProto3.TypeProto.TensorShapeProto parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static onnx.OnnxProto3.TypeProto.TensorShapeProto parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static onnx.OnnxProto3.TypeProto.TensorShapeProto parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static onnx.OnnxProto3.TypeProto.TensorShapeProto parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static onnx.OnnxProto3.TypeProto.TensorShapeProto parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(onnx.OnnxProto3.TypeProto.TensorShapeProto prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Defines a tensor shape. A dimension can be either an integer value
       * or a symbolic variable. A symbolic variable represents an unknown
       * dimension.
       * </pre>
       *
       * Protobuf type {@code onnx.TypeProto.TensorShapeProto}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:onnx.TypeProto.TensorShapeProto)
          onnx.OnnxProto3.TypeProto.TensorShapeProtoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorShapeProto_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorShapeProto_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  onnx.OnnxProto3.TypeProto.TensorShapeProto.class, onnx.OnnxProto3.TypeProto.TensorShapeProto.Builder.class);
        }

        // Construct using onnx.OnnxProto3.TypeProto.TensorShapeProto.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getDimFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (dimBuilder_ == null) {
            dim_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            dimBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorShapeProto_descriptor;
        }

        public onnx.OnnxProto3.TypeProto.TensorShapeProto getDefaultInstanceForType() {
          return onnx.OnnxProto3.TypeProto.TensorShapeProto.getDefaultInstance();
        }

        public onnx.OnnxProto3.TypeProto.TensorShapeProto build() {
          onnx.OnnxProto3.TypeProto.TensorShapeProto result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public onnx.OnnxProto3.TypeProto.TensorShapeProto buildPartial() {
          onnx.OnnxProto3.TypeProto.TensorShapeProto result = new onnx.OnnxProto3.TypeProto.TensorShapeProto(this);
          int from_bitField0_ = bitField0_;
          if (dimBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              dim_ = java.util.Collections.unmodifiableList(dim_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.dim_ = dim_;
          } else {
            result.dim_ = dimBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof onnx.OnnxProto3.TypeProto.TensorShapeProto) {
            return mergeFrom((onnx.OnnxProto3.TypeProto.TensorShapeProto)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(onnx.OnnxProto3.TypeProto.TensorShapeProto other) {
          if (other == onnx.OnnxProto3.TypeProto.TensorShapeProto.getDefaultInstance()) return this;
          if (dimBuilder_ == null) {
            if (!other.dim_.isEmpty()) {
              if (dim_.isEmpty()) {
                dim_ = other.dim_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureDimIsMutable();
                dim_.addAll(other.dim_);
              }
              onChanged();
            }
          } else {
            if (!other.dim_.isEmpty()) {
              if (dimBuilder_.isEmpty()) {
                dimBuilder_.dispose();
                dimBuilder_ = null;
                dim_ = other.dim_;
                bitField0_ = (bitField0_ & ~0x00000001);
                dimBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getDimFieldBuilder() : null;
              } else {
                dimBuilder_.addAllMessages(other.dim_);
              }
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          onnx.OnnxProto3.TypeProto.TensorShapeProto parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (onnx.OnnxProto3.TypeProto.TensorShapeProto) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension> dim_ =
          java.util.Collections.emptyList();
        private void ensureDimIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            dim_ = new java.util.ArrayList<onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension>(dim_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension, onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder, onnx.OnnxProto3.TypeProto.TensorShapeProto.DimensionOrBuilder> dimBuilder_;

        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public java.util.List<onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension> getDimList() {
          if (dimBuilder_ == null) {
            return java.util.Collections.unmodifiableList(dim_);
          } else {
            return dimBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public int getDimCount() {
          if (dimBuilder_ == null) {
            return dim_.size();
          } else {
            return dimBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension getDim(int index) {
          if (dimBuilder_ == null) {
            return dim_.get(index);
          } else {
            return dimBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public Builder setDim(
            int index, onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension value) {
          if (dimBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDimIsMutable();
            dim_.set(index, value);
            onChanged();
          } else {
            dimBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public Builder setDim(
            int index, onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder builderForValue) {
          if (dimBuilder_ == null) {
            ensureDimIsMutable();
            dim_.set(index, builderForValue.build());
            onChanged();
          } else {
            dimBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public Builder addDim(onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension value) {
          if (dimBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDimIsMutable();
            dim_.add(value);
            onChanged();
          } else {
            dimBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public Builder addDim(
            int index, onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension value) {
          if (dimBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDimIsMutable();
            dim_.add(index, value);
            onChanged();
          } else {
            dimBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public Builder addDim(
            onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder builderForValue) {
          if (dimBuilder_ == null) {
            ensureDimIsMutable();
            dim_.add(builderForValue.build());
            onChanged();
          } else {
            dimBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public Builder addDim(
            int index, onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder builderForValue) {
          if (dimBuilder_ == null) {
            ensureDimIsMutable();
            dim_.add(index, builderForValue.build());
            onChanged();
          } else {
            dimBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public Builder addAllDim(
            java.lang.Iterable<? extends onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension> values) {
          if (dimBuilder_ == null) {
            ensureDimIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, dim_);
            onChanged();
          } else {
            dimBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public Builder clearDim() {
          if (dimBuilder_ == null) {
            dim_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            dimBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public Builder removeDim(int index) {
          if (dimBuilder_ == null) {
            ensureDimIsMutable();
            dim_.remove(index);
            onChanged();
          } else {
            dimBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder getDimBuilder(
            int index) {
          return getDimFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public onnx.OnnxProto3.TypeProto.TensorShapeProto.DimensionOrBuilder getDimOrBuilder(
            int index) {
          if (dimBuilder_ == null) {
            return dim_.get(index);  } else {
            return dimBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public java.util.List<? extends onnx.OnnxProto3.TypeProto.TensorShapeProto.DimensionOrBuilder> 
             getDimOrBuilderList() {
          if (dimBuilder_ != null) {
            return dimBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(dim_);
          }
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder addDimBuilder() {
          return getDimFieldBuilder().addBuilder(
              onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.getDefaultInstance());
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder addDimBuilder(
            int index) {
          return getDimFieldBuilder().addBuilder(
              index, onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.getDefaultInstance());
        }
        /**
         * <code>repeated .onnx.TypeProto.TensorShapeProto.Dimension dim = 1;</code>
         */
        public java.util.List<onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder> 
             getDimBuilderList() {
          return getDimFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension, onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder, onnx.OnnxProto3.TypeProto.TensorShapeProto.DimensionOrBuilder> 
            getDimFieldBuilder() {
          if (dimBuilder_ == null) {
            dimBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension, onnx.OnnxProto3.TypeProto.TensorShapeProto.Dimension.Builder, onnx.OnnxProto3.TypeProto.TensorShapeProto.DimensionOrBuilder>(
                    dim_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            dim_ = null;
          }
          return dimBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:onnx.TypeProto.TensorShapeProto)
      }

      // @@protoc_insertion_point(class_scope:onnx.TypeProto.TensorShapeProto)
      private static final onnx.OnnxProto3.TypeProto.TensorShapeProto DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new onnx.OnnxProto3.TypeProto.TensorShapeProto();
      }

      public static onnx.OnnxProto3.TypeProto.TensorShapeProto getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TensorShapeProto>
          PARSER = new com.google.protobuf.AbstractParser<TensorShapeProto>() {
        public TensorShapeProto parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new TensorShapeProto(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TensorShapeProto> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TensorShapeProto> getParserForType() {
        return PARSER;
      }

      public onnx.OnnxProto3.TypeProto.TensorShapeProto getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TensorTypeProtoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:onnx.TypeProto.TensorTypeProto)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * This field MUST NOT have the value of UNDEFINED
       * This field MUST be present for this version of the IR.
       * </pre>
       *
       * <code>.onnx.TensorProto.DataType elem_type = 1;</code>
       */
      int getElemTypeValue();
      /**
       * <pre>
       * This field MUST NOT have the value of UNDEFINED
       * This field MUST be present for this version of the IR.
       * </pre>
       *
       * <code>.onnx.TensorProto.DataType elem_type = 1;</code>
       */
      onnx.OnnxProto3.TensorProto.DataType getElemType();

      /**
       * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
       */
      boolean hasShape();
      /**
       * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
       */
      onnx.OnnxProto3.TypeProto.TensorShapeProto getShape();
      /**
       * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
       */
      onnx.OnnxProto3.TypeProto.TensorShapeProtoOrBuilder getShapeOrBuilder();
    }
    /**
     * Protobuf type {@code onnx.TypeProto.TensorTypeProto}
     */
    public  static final class TensorTypeProto extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:onnx.TypeProto.TensorTypeProto)
        TensorTypeProtoOrBuilder {
      // Use TensorTypeProto.newBuilder() to construct.
      private TensorTypeProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TensorTypeProto() {
        elemType_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private TensorTypeProto(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();

                elemType_ = rawValue;
                break;
              }
              case 18: {
                onnx.OnnxProto3.TypeProto.TensorShapeProto.Builder subBuilder = null;
                if (shape_ != null) {
                  subBuilder = shape_.toBuilder();
                }
                shape_ = input.readMessage(onnx.OnnxProto3.TypeProto.TensorShapeProto.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(shape_);
                  shape_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorTypeProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorTypeProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.TypeProto.TensorTypeProto.class, onnx.OnnxProto3.TypeProto.TensorTypeProto.Builder.class);
      }

      public static final int ELEM_TYPE_FIELD_NUMBER = 1;
      private int elemType_;
      /**
       * <pre>
       * This field MUST NOT have the value of UNDEFINED
       * This field MUST be present for this version of the IR.
       * </pre>
       *
       * <code>.onnx.TensorProto.DataType elem_type = 1;</code>
       */
      public int getElemTypeValue() {
        return elemType_;
      }
      /**
       * <pre>
       * This field MUST NOT have the value of UNDEFINED
       * This field MUST be present for this version of the IR.
       * </pre>
       *
       * <code>.onnx.TensorProto.DataType elem_type = 1;</code>
       */
      public onnx.OnnxProto3.TensorProto.DataType getElemType() {
        onnx.OnnxProto3.TensorProto.DataType result = onnx.OnnxProto3.TensorProto.DataType.valueOf(elemType_);
        return result == null ? onnx.OnnxProto3.TensorProto.DataType.UNRECOGNIZED : result;
      }

      public static final int SHAPE_FIELD_NUMBER = 2;
      private onnx.OnnxProto3.TypeProto.TensorShapeProto shape_;
      /**
       * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
       */
      public boolean hasShape() {
        return shape_ != null;
      }
      /**
       * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
       */
      public onnx.OnnxProto3.TypeProto.TensorShapeProto getShape() {
        return shape_ == null ? onnx.OnnxProto3.TypeProto.TensorShapeProto.getDefaultInstance() : shape_;
      }
      /**
       * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
       */
      public onnx.OnnxProto3.TypeProto.TensorShapeProtoOrBuilder getShapeOrBuilder() {
        return getShape();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (elemType_ != onnx.OnnxProto3.TensorProto.DataType.UNDEFINED.getNumber()) {
          output.writeEnum(1, elemType_);
        }
        if (shape_ != null) {
          output.writeMessage(2, getShape());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (elemType_ != onnx.OnnxProto3.TensorProto.DataType.UNDEFINED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, elemType_);
        }
        if (shape_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getShape());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof onnx.OnnxProto3.TypeProto.TensorTypeProto)) {
          return super.equals(obj);
        }
        onnx.OnnxProto3.TypeProto.TensorTypeProto other = (onnx.OnnxProto3.TypeProto.TensorTypeProto) obj;

        boolean result = true;
        result = result && elemType_ == other.elemType_;
        result = result && (hasShape() == other.hasShape());
        if (hasShape()) {
          result = result && getShape()
              .equals(other.getShape());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ELEM_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + elemType_;
        if (hasShape()) {
          hash = (37 * hash) + SHAPE_FIELD_NUMBER;
          hash = (53 * hash) + getShape().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static onnx.OnnxProto3.TypeProto.TensorTypeProto parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static onnx.OnnxProto3.TypeProto.TensorTypeProto parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static onnx.OnnxProto3.TypeProto.TensorTypeProto parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static onnx.OnnxProto3.TypeProto.TensorTypeProto parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static onnx.OnnxProto3.TypeProto.TensorTypeProto parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static onnx.OnnxProto3.TypeProto.TensorTypeProto parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static onnx.OnnxProto3.TypeProto.TensorTypeProto parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static onnx.OnnxProto3.TypeProto.TensorTypeProto parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static onnx.OnnxProto3.TypeProto.TensorTypeProto parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static onnx.OnnxProto3.TypeProto.TensorTypeProto parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(onnx.OnnxProto3.TypeProto.TensorTypeProto prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code onnx.TypeProto.TensorTypeProto}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:onnx.TypeProto.TensorTypeProto)
          onnx.OnnxProto3.TypeProto.TensorTypeProtoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorTypeProto_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorTypeProto_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  onnx.OnnxProto3.TypeProto.TensorTypeProto.class, onnx.OnnxProto3.TypeProto.TensorTypeProto.Builder.class);
        }

        // Construct using onnx.OnnxProto3.TypeProto.TensorTypeProto.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          elemType_ = 0;

          if (shapeBuilder_ == null) {
            shape_ = null;
          } else {
            shape_ = null;
            shapeBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return onnx.OnnxProto3.internal_static_onnx_TypeProto_TensorTypeProto_descriptor;
        }

        public onnx.OnnxProto3.TypeProto.TensorTypeProto getDefaultInstanceForType() {
          return onnx.OnnxProto3.TypeProto.TensorTypeProto.getDefaultInstance();
        }

        public onnx.OnnxProto3.TypeProto.TensorTypeProto build() {
          onnx.OnnxProto3.TypeProto.TensorTypeProto result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public onnx.OnnxProto3.TypeProto.TensorTypeProto buildPartial() {
          onnx.OnnxProto3.TypeProto.TensorTypeProto result = new onnx.OnnxProto3.TypeProto.TensorTypeProto(this);
          result.elemType_ = elemType_;
          if (shapeBuilder_ == null) {
            result.shape_ = shape_;
          } else {
            result.shape_ = shapeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof onnx.OnnxProto3.TypeProto.TensorTypeProto) {
            return mergeFrom((onnx.OnnxProto3.TypeProto.TensorTypeProto)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(onnx.OnnxProto3.TypeProto.TensorTypeProto other) {
          if (other == onnx.OnnxProto3.TypeProto.TensorTypeProto.getDefaultInstance()) return this;
          if (other.elemType_ != 0) {
            setElemTypeValue(other.getElemTypeValue());
          }
          if (other.hasShape()) {
            mergeShape(other.getShape());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          onnx.OnnxProto3.TypeProto.TensorTypeProto parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (onnx.OnnxProto3.TypeProto.TensorTypeProto) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int elemType_ = 0;
        /**
         * <pre>
         * This field MUST NOT have the value of UNDEFINED
         * This field MUST be present for this version of the IR.
         * </pre>
         *
         * <code>.onnx.TensorProto.DataType elem_type = 1;</code>
         */
        public int getElemTypeValue() {
          return elemType_;
        }
        /**
         * <pre>
         * This field MUST NOT have the value of UNDEFINED
         * This field MUST be present for this version of the IR.
         * </pre>
         *
         * <code>.onnx.TensorProto.DataType elem_type = 1;</code>
         */
        public Builder setElemTypeValue(int value) {
          elemType_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This field MUST NOT have the value of UNDEFINED
         * This field MUST be present for this version of the IR.
         * </pre>
         *
         * <code>.onnx.TensorProto.DataType elem_type = 1;</code>
         */
        public onnx.OnnxProto3.TensorProto.DataType getElemType() {
          onnx.OnnxProto3.TensorProto.DataType result = onnx.OnnxProto3.TensorProto.DataType.valueOf(elemType_);
          return result == null ? onnx.OnnxProto3.TensorProto.DataType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * This field MUST NOT have the value of UNDEFINED
         * This field MUST be present for this version of the IR.
         * </pre>
         *
         * <code>.onnx.TensorProto.DataType elem_type = 1;</code>
         */
        public Builder setElemType(onnx.OnnxProto3.TensorProto.DataType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          elemType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This field MUST NOT have the value of UNDEFINED
         * This field MUST be present for this version of the IR.
         * </pre>
         *
         * <code>.onnx.TensorProto.DataType elem_type = 1;</code>
         */
        public Builder clearElemType() {
          
          elemType_ = 0;
          onChanged();
          return this;
        }

        private onnx.OnnxProto3.TypeProto.TensorShapeProto shape_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            onnx.OnnxProto3.TypeProto.TensorShapeProto, onnx.OnnxProto3.TypeProto.TensorShapeProto.Builder, onnx.OnnxProto3.TypeProto.TensorShapeProtoOrBuilder> shapeBuilder_;
        /**
         * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
         */
        public boolean hasShape() {
          return shapeBuilder_ != null || shape_ != null;
        }
        /**
         * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
         */
        public onnx.OnnxProto3.TypeProto.TensorShapeProto getShape() {
          if (shapeBuilder_ == null) {
            return shape_ == null ? onnx.OnnxProto3.TypeProto.TensorShapeProto.getDefaultInstance() : shape_;
          } else {
            return shapeBuilder_.getMessage();
          }
        }
        /**
         * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
         */
        public Builder setShape(onnx.OnnxProto3.TypeProto.TensorShapeProto value) {
          if (shapeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            shape_ = value;
            onChanged();
          } else {
            shapeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
         */
        public Builder setShape(
            onnx.OnnxProto3.TypeProto.TensorShapeProto.Builder builderForValue) {
          if (shapeBuilder_ == null) {
            shape_ = builderForValue.build();
            onChanged();
          } else {
            shapeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
         */
        public Builder mergeShape(onnx.OnnxProto3.TypeProto.TensorShapeProto value) {
          if (shapeBuilder_ == null) {
            if (shape_ != null) {
              shape_ =
                onnx.OnnxProto3.TypeProto.TensorShapeProto.newBuilder(shape_).mergeFrom(value).buildPartial();
            } else {
              shape_ = value;
            }
            onChanged();
          } else {
            shapeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
         */
        public Builder clearShape() {
          if (shapeBuilder_ == null) {
            shape_ = null;
            onChanged();
          } else {
            shape_ = null;
            shapeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
         */
        public onnx.OnnxProto3.TypeProto.TensorShapeProto.Builder getShapeBuilder() {
          
          onChanged();
          return getShapeFieldBuilder().getBuilder();
        }
        /**
         * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
         */
        public onnx.OnnxProto3.TypeProto.TensorShapeProtoOrBuilder getShapeOrBuilder() {
          if (shapeBuilder_ != null) {
            return shapeBuilder_.getMessageOrBuilder();
          } else {
            return shape_ == null ?
                onnx.OnnxProto3.TypeProto.TensorShapeProto.getDefaultInstance() : shape_;
          }
        }
        /**
         * <code>.onnx.TypeProto.TensorShapeProto shape = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            onnx.OnnxProto3.TypeProto.TensorShapeProto, onnx.OnnxProto3.TypeProto.TensorShapeProto.Builder, onnx.OnnxProto3.TypeProto.TensorShapeProtoOrBuilder> 
            getShapeFieldBuilder() {
          if (shapeBuilder_ == null) {
            shapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                onnx.OnnxProto3.TypeProto.TensorShapeProto, onnx.OnnxProto3.TypeProto.TensorShapeProto.Builder, onnx.OnnxProto3.TypeProto.TensorShapeProtoOrBuilder>(
                    getShape(),
                    getParentForChildren(),
                    isClean());
            shape_ = null;
          }
          return shapeBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:onnx.TypeProto.TensorTypeProto)
      }

      // @@protoc_insertion_point(class_scope:onnx.TypeProto.TensorTypeProto)
      private static final onnx.OnnxProto3.TypeProto.TensorTypeProto DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new onnx.OnnxProto3.TypeProto.TensorTypeProto();
      }

      public static onnx.OnnxProto3.TypeProto.TensorTypeProto getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TensorTypeProto>
          PARSER = new com.google.protobuf.AbstractParser<TensorTypeProto>() {
        public TensorTypeProto parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new TensorTypeProto(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TensorTypeProto> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TensorTypeProto> getParserForType() {
        return PARSER;
      }

      public onnx.OnnxProto3.TypeProto.TensorTypeProto getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      TENSOR_TYPE(1),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 1: return TENSOR_TYPE;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int TENSOR_TYPE_FIELD_NUMBER = 1;
    /**
     * <pre>
     * The type of a tensor.
     * </pre>
     *
     * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
     */
    public onnx.OnnxProto3.TypeProto.TensorTypeProto getTensorType() {
      if (valueCase_ == 1) {
         return (onnx.OnnxProto3.TypeProto.TensorTypeProto) value_;
      }
      return onnx.OnnxProto3.TypeProto.TensorTypeProto.getDefaultInstance();
    }
    /**
     * <pre>
     * The type of a tensor.
     * </pre>
     *
     * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
     */
    public onnx.OnnxProto3.TypeProto.TensorTypeProtoOrBuilder getTensorTypeOrBuilder() {
      if (valueCase_ == 1) {
         return (onnx.OnnxProto3.TypeProto.TensorTypeProto) value_;
      }
      return onnx.OnnxProto3.TypeProto.TensorTypeProto.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valueCase_ == 1) {
        output.writeMessage(1, (onnx.OnnxProto3.TypeProto.TensorTypeProto) value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valueCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (onnx.OnnxProto3.TypeProto.TensorTypeProto) value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxProto3.TypeProto)) {
        return super.equals(obj);
      }
      onnx.OnnxProto3.TypeProto other = (onnx.OnnxProto3.TypeProto) obj;

      boolean result = true;
      result = result && getValueCase().equals(
          other.getValueCase());
      if (!result) return false;
      switch (valueCase_) {
        case 1:
          result = result && getTensorType()
              .equals(other.getTensorType());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (valueCase_) {
        case 1:
          hash = (37 * hash) + TENSOR_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getTensorType().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxProto3.TypeProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.TypeProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.TypeProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.TypeProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.TypeProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.TypeProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.TypeProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.TypeProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.TypeProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.TypeProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxProto3.TypeProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Define the types.
     * </pre>
     *
     * Protobuf type {@code onnx.TypeProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.TypeProto)
        onnx.OnnxProto3.TypeProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_TypeProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_TypeProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.TypeProto.class, onnx.OnnxProto3.TypeProto.Builder.class);
      }

      // Construct using onnx.OnnxProto3.TypeProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        valueCase_ = 0;
        value_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxProto3.internal_static_onnx_TypeProto_descriptor;
      }

      public onnx.OnnxProto3.TypeProto getDefaultInstanceForType() {
        return onnx.OnnxProto3.TypeProto.getDefaultInstance();
      }

      public onnx.OnnxProto3.TypeProto build() {
        onnx.OnnxProto3.TypeProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public onnx.OnnxProto3.TypeProto buildPartial() {
        onnx.OnnxProto3.TypeProto result = new onnx.OnnxProto3.TypeProto(this);
        if (valueCase_ == 1) {
          if (tensorTypeBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = tensorTypeBuilder_.build();
          }
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxProto3.TypeProto) {
          return mergeFrom((onnx.OnnxProto3.TypeProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxProto3.TypeProto other) {
        if (other == onnx.OnnxProto3.TypeProto.getDefaultInstance()) return this;
        switch (other.getValueCase()) {
          case TENSOR_TYPE: {
            mergeTensorType(other.getTensorType());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxProto3.TypeProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxProto3.TypeProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.TypeProto.TensorTypeProto, onnx.OnnxProto3.TypeProto.TensorTypeProto.Builder, onnx.OnnxProto3.TypeProto.TensorTypeProtoOrBuilder> tensorTypeBuilder_;
      /**
       * <pre>
       * The type of a tensor.
       * </pre>
       *
       * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
       */
      public onnx.OnnxProto3.TypeProto.TensorTypeProto getTensorType() {
        if (tensorTypeBuilder_ == null) {
          if (valueCase_ == 1) {
            return (onnx.OnnxProto3.TypeProto.TensorTypeProto) value_;
          }
          return onnx.OnnxProto3.TypeProto.TensorTypeProto.getDefaultInstance();
        } else {
          if (valueCase_ == 1) {
            return tensorTypeBuilder_.getMessage();
          }
          return onnx.OnnxProto3.TypeProto.TensorTypeProto.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The type of a tensor.
       * </pre>
       *
       * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
       */
      public Builder setTensorType(onnx.OnnxProto3.TypeProto.TensorTypeProto value) {
        if (tensorTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          tensorTypeBuilder_.setMessage(value);
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * The type of a tensor.
       * </pre>
       *
       * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
       */
      public Builder setTensorType(
          onnx.OnnxProto3.TypeProto.TensorTypeProto.Builder builderForValue) {
        if (tensorTypeBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          tensorTypeBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * The type of a tensor.
       * </pre>
       *
       * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
       */
      public Builder mergeTensorType(onnx.OnnxProto3.TypeProto.TensorTypeProto value) {
        if (tensorTypeBuilder_ == null) {
          if (valueCase_ == 1 &&
              value_ != onnx.OnnxProto3.TypeProto.TensorTypeProto.getDefaultInstance()) {
            value_ = onnx.OnnxProto3.TypeProto.TensorTypeProto.newBuilder((onnx.OnnxProto3.TypeProto.TensorTypeProto) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 1) {
            tensorTypeBuilder_.mergeFrom(value);
          }
          tensorTypeBuilder_.setMessage(value);
        }
        valueCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * The type of a tensor.
       * </pre>
       *
       * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
       */
      public Builder clearTensorType() {
        if (tensorTypeBuilder_ == null) {
          if (valueCase_ == 1) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 1) {
            valueCase_ = 0;
            value_ = null;
          }
          tensorTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The type of a tensor.
       * </pre>
       *
       * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
       */
      public onnx.OnnxProto3.TypeProto.TensorTypeProto.Builder getTensorTypeBuilder() {
        return getTensorTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The type of a tensor.
       * </pre>
       *
       * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
       */
      public onnx.OnnxProto3.TypeProto.TensorTypeProtoOrBuilder getTensorTypeOrBuilder() {
        if ((valueCase_ == 1) && (tensorTypeBuilder_ != null)) {
          return tensorTypeBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 1) {
            return (onnx.OnnxProto3.TypeProto.TensorTypeProto) value_;
          }
          return onnx.OnnxProto3.TypeProto.TensorTypeProto.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The type of a tensor.
       * </pre>
       *
       * <code>.onnx.TypeProto.TensorTypeProto tensor_type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          onnx.OnnxProto3.TypeProto.TensorTypeProto, onnx.OnnxProto3.TypeProto.TensorTypeProto.Builder, onnx.OnnxProto3.TypeProto.TensorTypeProtoOrBuilder> 
          getTensorTypeFieldBuilder() {
        if (tensorTypeBuilder_ == null) {
          if (!(valueCase_ == 1)) {
            value_ = onnx.OnnxProto3.TypeProto.TensorTypeProto.getDefaultInstance();
          }
          tensorTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              onnx.OnnxProto3.TypeProto.TensorTypeProto, onnx.OnnxProto3.TypeProto.TensorTypeProto.Builder, onnx.OnnxProto3.TypeProto.TensorTypeProtoOrBuilder>(
                  (onnx.OnnxProto3.TypeProto.TensorTypeProto) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 1;
        onChanged();;
        return tensorTypeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:onnx.TypeProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.TypeProto)
    private static final onnx.OnnxProto3.TypeProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxProto3.TypeProto();
    }

    public static onnx.OnnxProto3.TypeProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TypeProto>
        PARSER = new com.google.protobuf.AbstractParser<TypeProto>() {
      public TypeProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TypeProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TypeProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TypeProto> getParserForType() {
      return PARSER;
    }

    public onnx.OnnxProto3.TypeProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OperatorSetIdProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:onnx.OperatorSetIdProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The domain of the operator set being identified.
     * The empty string ("") or absence of this field implies the operator
     * set that is defined as part of the ONNX specification.
     * This field MUST be present in this version of the IR when referring to any other operator set.
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    java.lang.String getDomain();
    /**
     * <pre>
     * The domain of the operator set being identified.
     * The empty string ("") or absence of this field implies the operator
     * set that is defined as part of the ONNX specification.
     * This field MUST be present in this version of the IR when referring to any other operator set.
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    com.google.protobuf.ByteString
        getDomainBytes();

    /**
     * <pre>
     * The version of the operator set being identified.
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>int64 version = 2;</code>
     */
    long getVersion();
  }
  /**
   * <pre>
   * OperatorSets are uniquely identified by a (domain, opset_version) pair.
   * </pre>
   *
   * Protobuf type {@code onnx.OperatorSetIdProto}
   */
  public  static final class OperatorSetIdProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:onnx.OperatorSetIdProto)
      OperatorSetIdProtoOrBuilder {
    // Use OperatorSetIdProto.newBuilder() to construct.
    private OperatorSetIdProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OperatorSetIdProto() {
      domain_ = "";
      version_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private OperatorSetIdProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              domain_ = s;
              break;
            }
            case 16: {

              version_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return onnx.OnnxProto3.internal_static_onnx_OperatorSetIdProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return onnx.OnnxProto3.internal_static_onnx_OperatorSetIdProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              onnx.OnnxProto3.OperatorSetIdProto.class, onnx.OnnxProto3.OperatorSetIdProto.Builder.class);
    }

    public static final int DOMAIN_FIELD_NUMBER = 1;
    private volatile java.lang.Object domain_;
    /**
     * <pre>
     * The domain of the operator set being identified.
     * The empty string ("") or absence of this field implies the operator
     * set that is defined as part of the ONNX specification.
     * This field MUST be present in this version of the IR when referring to any other operator set.
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    public java.lang.String getDomain() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domain_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The domain of the operator set being identified.
     * The empty string ("") or absence of this field implies the operator
     * set that is defined as part of the ONNX specification.
     * This field MUST be present in this version of the IR when referring to any other operator set.
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private long version_;
    /**
     * <pre>
     * The version of the operator set being identified.
     * This field MUST be present in this version of the IR.
     * </pre>
     *
     * <code>int64 version = 2;</code>
     */
    public long getVersion() {
      return version_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDomainBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, domain_);
      }
      if (version_ != 0L) {
        output.writeInt64(2, version_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDomainBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, domain_);
      }
      if (version_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, version_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof onnx.OnnxProto3.OperatorSetIdProto)) {
        return super.equals(obj);
      }
      onnx.OnnxProto3.OperatorSetIdProto other = (onnx.OnnxProto3.OperatorSetIdProto) obj;

      boolean result = true;
      result = result && getDomain()
          .equals(other.getDomain());
      result = result && (getVersion()
          == other.getVersion());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getDomain().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVersion());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static onnx.OnnxProto3.OperatorSetIdProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.OperatorSetIdProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.OperatorSetIdProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static onnx.OnnxProto3.OperatorSetIdProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static onnx.OnnxProto3.OperatorSetIdProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.OperatorSetIdProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.OperatorSetIdProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.OperatorSetIdProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static onnx.OnnxProto3.OperatorSetIdProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static onnx.OnnxProto3.OperatorSetIdProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(onnx.OnnxProto3.OperatorSetIdProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OperatorSets are uniquely identified by a (domain, opset_version) pair.
     * </pre>
     *
     * Protobuf type {@code onnx.OperatorSetIdProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:onnx.OperatorSetIdProto)
        onnx.OnnxProto3.OperatorSetIdProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return onnx.OnnxProto3.internal_static_onnx_OperatorSetIdProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return onnx.OnnxProto3.internal_static_onnx_OperatorSetIdProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                onnx.OnnxProto3.OperatorSetIdProto.class, onnx.OnnxProto3.OperatorSetIdProto.Builder.class);
      }

      // Construct using onnx.OnnxProto3.OperatorSetIdProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        domain_ = "";

        version_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return onnx.OnnxProto3.internal_static_onnx_OperatorSetIdProto_descriptor;
      }

      public onnx.OnnxProto3.OperatorSetIdProto getDefaultInstanceForType() {
        return onnx.OnnxProto3.OperatorSetIdProto.getDefaultInstance();
      }

      public onnx.OnnxProto3.OperatorSetIdProto build() {
        onnx.OnnxProto3.OperatorSetIdProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public onnx.OnnxProto3.OperatorSetIdProto buildPartial() {
        onnx.OnnxProto3.OperatorSetIdProto result = new onnx.OnnxProto3.OperatorSetIdProto(this);
        result.domain_ = domain_;
        result.version_ = version_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof onnx.OnnxProto3.OperatorSetIdProto) {
          return mergeFrom((onnx.OnnxProto3.OperatorSetIdProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(onnx.OnnxProto3.OperatorSetIdProto other) {
        if (other == onnx.OnnxProto3.OperatorSetIdProto.getDefaultInstance()) return this;
        if (!other.getDomain().isEmpty()) {
          domain_ = other.domain_;
          onChanged();
        }
        if (other.getVersion() != 0L) {
          setVersion(other.getVersion());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        onnx.OnnxProto3.OperatorSetIdProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (onnx.OnnxProto3.OperatorSetIdProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object domain_ = "";
      /**
       * <pre>
       * The domain of the operator set being identified.
       * The empty string ("") or absence of this field implies the operator
       * set that is defined as part of the ONNX specification.
       * This field MUST be present in this version of the IR when referring to any other operator set.
       * </pre>
       *
       * <code>string domain = 1;</code>
       */
      public java.lang.String getDomain() {
        java.lang.Object ref = domain_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          domain_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The domain of the operator set being identified.
       * The empty string ("") or absence of this field implies the operator
       * set that is defined as part of the ONNX specification.
       * This field MUST be present in this version of the IR when referring to any other operator set.
       * </pre>
       *
       * <code>string domain = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDomainBytes() {
        java.lang.Object ref = domain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          domain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The domain of the operator set being identified.
       * The empty string ("") or absence of this field implies the operator
       * set that is defined as part of the ONNX specification.
       * This field MUST be present in this version of the IR when referring to any other operator set.
       * </pre>
       *
       * <code>string domain = 1;</code>
       */
      public Builder setDomain(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        domain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The domain of the operator set being identified.
       * The empty string ("") or absence of this field implies the operator
       * set that is defined as part of the ONNX specification.
       * This field MUST be present in this version of the IR when referring to any other operator set.
       * </pre>
       *
       * <code>string domain = 1;</code>
       */
      public Builder clearDomain() {
        
        domain_ = getDefaultInstance().getDomain();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The domain of the operator set being identified.
       * The empty string ("") or absence of this field implies the operator
       * set that is defined as part of the ONNX specification.
       * This field MUST be present in this version of the IR when referring to any other operator set.
       * </pre>
       *
       * <code>string domain = 1;</code>
       */
      public Builder setDomainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        domain_ = value;
        onChanged();
        return this;
      }

      private long version_ ;
      /**
       * <pre>
       * The version of the operator set being identified.
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>int64 version = 2;</code>
       */
      public long getVersion() {
        return version_;
      }
      /**
       * <pre>
       * The version of the operator set being identified.
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>int64 version = 2;</code>
       */
      public Builder setVersion(long value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the operator set being identified.
       * This field MUST be present in this version of the IR.
       * </pre>
       *
       * <code>int64 version = 2;</code>
       */
      public Builder clearVersion() {
        
        version_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:onnx.OperatorSetIdProto)
    }

    // @@protoc_insertion_point(class_scope:onnx.OperatorSetIdProto)
    private static final onnx.OnnxProto3.OperatorSetIdProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new onnx.OnnxProto3.OperatorSetIdProto();
    }

    public static onnx.OnnxProto3.OperatorSetIdProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OperatorSetIdProto>
        PARSER = new com.google.protobuf.AbstractParser<OperatorSetIdProto>() {
      public OperatorSetIdProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new OperatorSetIdProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OperatorSetIdProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OperatorSetIdProto> getParserForType() {
      return PARSER;
    }

    public onnx.OnnxProto3.OperatorSetIdProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_AttributeProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_AttributeProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_ValueInfoProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_ValueInfoProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_NodeProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_NodeProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_ModelProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_ModelProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_StringStringEntryProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_StringStringEntryProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_GraphProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_GraphProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_TensorProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_TensorProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_TensorProto_Segment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_TensorProto_Segment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_TypeProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_TypeProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_TypeProto_TensorShapeProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_TypeProto_TensorShapeProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_TypeProto_TensorShapeProto_Dimension_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_TypeProto_TensorShapeProto_Dimension_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_TypeProto_TensorTypeProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_TypeProto_TensorTypeProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_onnx_OperatorSetIdProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_onnx_OperatorSetIdProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013onnx.proto3\022\004onnx\"\311\003\n\016AttributeProto\022\014" +
      "\n\004name\030\001 \001(\t\022\022\n\ndoc_string\030\r \001(\t\0220\n\004type" +
      "\030\024 \001(\0162\".onnx.AttributeProto.AttributeTy" +
      "pe\022\t\n\001f\030\002 \001(\002\022\t\n\001i\030\003 \001(\003\022\t\n\001s\030\004 \001(\014\022\034\n\001t" +
      "\030\005 \001(\0132\021.onnx.TensorProto\022\033\n\001g\030\006 \001(\0132\020.o" +
      "nnx.GraphProto\022\016\n\006floats\030\007 \003(\002\022\014\n\004ints\030\010" +
      " \003(\003\022\017\n\007strings\030\t \003(\014\022\"\n\007tensors\030\n \003(\0132\021" +
      ".onnx.TensorProto\022 \n\006graphs\030\013 \003(\0132\020.onnx" +
      ".GraphProto\"\221\001\n\rAttributeType\022\r\n\tUNDEFIN" +
      "ED\020\000\022\t\n\005FLOAT\020\001\022\007\n\003INT\020\002\022\n\n\006STRING\020\003\022\n\n\006",
      "TENSOR\020\004\022\t\n\005GRAPH\020\005\022\n\n\006FLOATS\020\006\022\010\n\004INTS\020" +
      "\007\022\013\n\007STRINGS\020\010\022\013\n\007TENSORS\020\t\022\n\n\006GRAPHS\020\n\"" +
      "Q\n\016ValueInfoProto\022\014\n\004name\030\001 \001(\t\022\035\n\004type\030" +
      "\002 \001(\0132\017.onnx.TypeProto\022\022\n\ndoc_string\030\003 \001" +
      "(\t\"\226\001\n\tNodeProto\022\r\n\005input\030\001 \003(\t\022\016\n\006outpu" +
      "t\030\002 \003(\t\022\014\n\004name\030\003 \001(\t\022\017\n\007op_type\030\004 \001(\t\022\016" +
      "\n\006domain\030\007 \001(\t\022\'\n\tattribute\030\005 \003(\0132\024.onnx" +
      ".AttributeProto\022\022\n\ndoc_string\030\006 \001(\t\"\223\002\n\n" +
      "ModelProto\022\022\n\nir_version\030\001 \001(\003\022.\n\014opset_" +
      "import\030\010 \003(\0132\030.onnx.OperatorSetIdProto\022\025",
      "\n\rproducer_name\030\002 \001(\t\022\030\n\020producer_versio" +
      "n\030\003 \001(\t\022\016\n\006domain\030\004 \001(\t\022\025\n\rmodel_version" +
      "\030\005 \001(\003\022\022\n\ndoc_string\030\006 \001(\t\022\037\n\005graph\030\007 \001(" +
      "\0132\020.onnx.GraphProto\0224\n\016metadata_props\030\016 " +
      "\003(\0132\034.onnx.StringStringEntryProto\"4\n\026Str" +
      "ingStringEntryProto\022\013\n\003key\030\001 \001(\t\022\r\n\005valu" +
      "e\030\002 \001(\t\"\352\001\n\nGraphProto\022\035\n\004node\030\001 \003(\0132\017.o" +
      "nnx.NodeProto\022\014\n\004name\030\002 \001(\t\022&\n\013initializ" +
      "er\030\005 \003(\0132\021.onnx.TensorProto\022\022\n\ndoc_strin" +
      "g\030\n \001(\t\022#\n\005input\030\013 \003(\0132\024.onnx.ValueInfoP",
      "roto\022$\n\006output\030\014 \003(\0132\024.onnx.ValueInfoPro" +
      "to\022(\n\nvalue_info\030\r \003(\0132\024.onnx.ValueInfoP" +
      "roto\"\257\004\n\013TensorProto\022\014\n\004dims\030\001 \003(\003\022-\n\tda" +
      "ta_type\030\002 \001(\0162\032.onnx.TensorProto.DataTyp" +
      "e\022*\n\007segment\030\003 \001(\0132\031.onnx.TensorProto.Se" +
      "gment\022\026\n\nfloat_data\030\004 \003(\002B\002\020\001\022\026\n\nint32_d" +
      "ata\030\005 \003(\005B\002\020\001\022\023\n\013string_data\030\006 \003(\014\022\026\n\nin" +
      "t64_data\030\007 \003(\003B\002\020\001\022\014\n\004name\030\010 \001(\t\022\022\n\ndoc_" +
      "string\030\014 \001(\t\022\020\n\010raw_data\030\t \001(\014\022\027\n\013double" +
      "_data\030\n \003(\001B\002\020\001\022\027\n\013uint64_data\030\013 \003(\004B\002\020\001",
      "\032%\n\007Segment\022\r\n\005begin\030\001 \001(\003\022\013\n\003end\030\002 \001(\003\"" +
      "\314\001\n\010DataType\022\r\n\tUNDEFINED\020\000\022\t\n\005FLOAT\020\001\022\t" +
      "\n\005UINT8\020\002\022\010\n\004INT8\020\003\022\n\n\006UINT16\020\004\022\t\n\005INT16" +
      "\020\005\022\t\n\005INT32\020\006\022\t\n\005INT64\020\007\022\n\n\006STRING\020\010\022\010\n\004" +
      "BOOL\020\t\022\013\n\007FLOAT16\020\n\022\n\n\006DOUBLE\020\013\022\n\n\006UINT3" +
      "2\020\014\022\n\n\006UINT64\020\r\022\r\n\tCOMPLEX64\020\016\022\016\n\nCOMPLE" +
      "X128\020\017\"\315\002\n\tTypeProto\0226\n\013tensor_type\030\001 \001(" +
      "\0132\037.onnx.TypeProto.TensorTypeProtoH\000\032\213\001\n" +
      "\020TensorShapeProto\0227\n\003dim\030\001 \003(\0132*.onnx.Ty" +
      "peProto.TensorShapeProto.Dimension\032>\n\tDi",
      "mension\022\023\n\tdim_value\030\001 \001(\003H\000\022\023\n\tdim_para" +
      "m\030\002 \001(\tH\000B\007\n\005value\032q\n\017TensorTypeProto\022-\n" +
      "\telem_type\030\001 \001(\0162\032.onnx.TensorProto.Data" +
      "Type\022/\n\005shape\030\002 \001(\0132 .onnx.TypeProto.Ten" +
      "sorShapeProtoB\007\n\005value\"5\n\022OperatorSetIdP" +
      "roto\022\016\n\006domain\030\001 \001(\t\022\017\n\007version\030\002 \001(\003*c\n" +
      "\007Version\022\022\n\016_START_VERSION\020\000\022\031\n\025IR_VERSI" +
      "ON_2017_10_10\020\001\022\031\n\025IR_VERSION_2017_10_30" +
      "\020\002\022\016\n\nIR_VERSION\020\003b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_onnx_AttributeProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_onnx_AttributeProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_AttributeProto_descriptor,
        new java.lang.String[] { "Name", "DocString", "Type", "F", "I", "S", "T", "G", "Floats", "Ints", "Strings", "Tensors", "Graphs", });
    internal_static_onnx_ValueInfoProto_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_onnx_ValueInfoProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_ValueInfoProto_descriptor,
        new java.lang.String[] { "Name", "Type", "DocString", });
    internal_static_onnx_NodeProto_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_onnx_NodeProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_NodeProto_descriptor,
        new java.lang.String[] { "Input", "Output", "Name", "OpType", "Domain", "Attribute", "DocString", });
    internal_static_onnx_ModelProto_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_onnx_ModelProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_ModelProto_descriptor,
        new java.lang.String[] { "IrVersion", "OpsetImport", "ProducerName", "ProducerVersion", "Domain", "ModelVersion", "DocString", "Graph", "MetadataProps", });
    internal_static_onnx_StringStringEntryProto_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_onnx_StringStringEntryProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_StringStringEntryProto_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_onnx_GraphProto_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_onnx_GraphProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_GraphProto_descriptor,
        new java.lang.String[] { "Node", "Name", "Initializer", "DocString", "Input", "Output", "ValueInfo", });
    internal_static_onnx_TensorProto_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_onnx_TensorProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_TensorProto_descriptor,
        new java.lang.String[] { "Dims", "DataType", "Segment", "FloatData", "Int32Data", "StringData", "Int64Data", "Name", "DocString", "RawData", "DoubleData", "Uint64Data", });
    internal_static_onnx_TensorProto_Segment_descriptor =
      internal_static_onnx_TensorProto_descriptor.getNestedTypes().get(0);
    internal_static_onnx_TensorProto_Segment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_TensorProto_Segment_descriptor,
        new java.lang.String[] { "Begin", "End", });
    internal_static_onnx_TypeProto_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_onnx_TypeProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_TypeProto_descriptor,
        new java.lang.String[] { "TensorType", "Value", });
    internal_static_onnx_TypeProto_TensorShapeProto_descriptor =
      internal_static_onnx_TypeProto_descriptor.getNestedTypes().get(0);
    internal_static_onnx_TypeProto_TensorShapeProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_TypeProto_TensorShapeProto_descriptor,
        new java.lang.String[] { "Dim", });
    internal_static_onnx_TypeProto_TensorShapeProto_Dimension_descriptor =
      internal_static_onnx_TypeProto_TensorShapeProto_descriptor.getNestedTypes().get(0);
    internal_static_onnx_TypeProto_TensorShapeProto_Dimension_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_TypeProto_TensorShapeProto_Dimension_descriptor,
        new java.lang.String[] { "DimValue", "DimParam", "Value", });
    internal_static_onnx_TypeProto_TensorTypeProto_descriptor =
      internal_static_onnx_TypeProto_descriptor.getNestedTypes().get(1);
    internal_static_onnx_TypeProto_TensorTypeProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_TypeProto_TensorTypeProto_descriptor,
        new java.lang.String[] { "ElemType", "Shape", });
    internal_static_onnx_OperatorSetIdProto_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_onnx_OperatorSetIdProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_onnx_OperatorSetIdProto_descriptor,
        new java.lang.String[] { "Domain", "Version", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
